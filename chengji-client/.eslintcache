[{"D:\\web\\webapp\\chengji-client\\src\\index.js":"1","D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts":"2","D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx":"3","D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx":"4","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx":"5","D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts":"6","D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts":"7","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx":"8","D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx":"9","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx":"10","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx":"11","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx":"12","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx":"13","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts":"14","D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts":"15","D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx":"16","D:\\web\\webapp\\chengji-client\\src\\api\\index.ts":"17","D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts":"18","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx":"19","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx":"20","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx":"21","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx":"22","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx":"23","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx":"24","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx":"25","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx":"26","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletestudentmodel\\index.tsx":"27","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletegrademodel\\index.tsx":"28","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\index.tsx":"29","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\model\\index.tsx":"30","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\gradesearch\\index.tsx":"31","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\person\\index.tsx":"32","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\editmodel\\index.tsx":"33","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\updategrade\\index.tsx":"34","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\index.tsx":"35","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\model\\index.tsx":"36","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\gradesearch\\index.tsx":"37","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\personinfo\\index.tsx":"38","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\index.tsx":"39","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\model\\index.tsx":"40","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\gradesearch\\index.tsx":"41","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personanl\\index.tsx":"42","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\index.tsx":"43","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\modal\\index.tsx":"44","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\addstu\\index.tsx":"45","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\index.tsx":"46","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\modal\\index.tsx":"47","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\addtea\\index.tsx":"48","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\deleteteacher\\index.tsx":"49","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\course\\index.tsx":"50","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\index.tsx":"51","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\components\\deleteadmin\\index.tsx":"52","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\components\\modal\\index.tsx":"53","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\components\\addadmin\\index.tsx":"54"},{"size":788,"mtime":1617858746194,"results":"55","hashOfConfig":"56"},{"size":403,"mtime":1617259800803,"results":"57","hashOfConfig":"56"},{"size":1084,"mtime":1617263188562,"results":"58","hashOfConfig":"56"},{"size":18361,"mtime":1619788283549,"results":"59","hashOfConfig":"56"},{"size":15517,"mtime":1619790653769,"results":"60","hashOfConfig":"56"},{"size":4921,"mtime":1619791539805,"results":"61","hashOfConfig":"56"},{"size":19626,"mtime":1619855408303,"results":"62","hashOfConfig":"56"},{"size":160,"mtime":1617260515814,"results":"63","hashOfConfig":"56"},{"size":14849,"mtime":1619682601958,"results":"64","hashOfConfig":"56"},{"size":168,"mtime":1617958289692,"results":"65","hashOfConfig":"56"},{"size":211,"mtime":1617696169916,"results":"66","hashOfConfig":"56"},{"size":15569,"mtime":1619682626667,"results":"67","hashOfConfig":"56"},{"size":6683,"mtime":1619782000003,"results":"68","hashOfConfig":"56"},{"size":1513,"mtime":1619791389131,"results":"69","hashOfConfig":"56"},{"size":326,"mtime":1619783016790,"results":"70","hashOfConfig":"56"},{"size":171,"mtime":1617259800773,"results":"71","hashOfConfig":"56"},{"size":3821,"mtime":1619791997919,"results":"72","hashOfConfig":"56"},{"size":767,"mtime":1617951827542,"results":"73","hashOfConfig":"56"},{"size":3968,"mtime":1619188619982,"results":"74","hashOfConfig":"56"},{"size":4969,"mtime":1619790143378,"results":"75","hashOfConfig":"56"},{"size":2726,"mtime":1618015182856,"results":"76","hashOfConfig":"56"},{"size":8811,"mtime":1619867111005,"results":"77","hashOfConfig":"56"},{"size":1432,"mtime":1619796766513,"results":"78","hashOfConfig":"56"},{"size":10614,"mtime":1619866824890,"results":"79","hashOfConfig":"56"},{"size":1592,"mtime":1619796785437,"results":"80","hashOfConfig":"56"},{"size":5894,"mtime":1619851943531,"results":"81","hashOfConfig":"56"},{"size":1246,"mtime":1617535538876,"results":"82","hashOfConfig":"56"},{"size":1544,"mtime":1617639497850,"results":"83","hashOfConfig":"56"},{"size":11100,"mtime":1619867194617,"results":"84","hashOfConfig":"56"},{"size":1460,"mtime":1619796939145,"results":"85","hashOfConfig":"56"},{"size":8298,"mtime":1619797112193,"results":"86","hashOfConfig":"56"},{"size":9367,"mtime":1619860198843,"results":"87","hashOfConfig":"56"},{"size":1805,"mtime":1617695432771,"results":"88","hashOfConfig":"56"},{"size":7146,"mtime":1619708786415,"results":"89","hashOfConfig":"56"},{"size":12371,"mtime":1617972389601,"results":"90","hashOfConfig":"56"},{"size":1564,"mtime":1617715193237,"results":"91","hashOfConfig":"56"},{"size":8320,"mtime":1617706704434,"results":"92","hashOfConfig":"56"},{"size":6003,"mtime":1617861528779,"results":"93","hashOfConfig":"56"},{"size":11294,"mtime":1619858169211,"results":"94","hashOfConfig":"56"},{"size":1503,"mtime":1619796934488,"results":"95","hashOfConfig":"56"},{"size":8290,"mtime":1619797322338,"results":"96","hashOfConfig":"56"},{"size":9799,"mtime":1617949392010,"results":"97","hashOfConfig":"56"},{"size":9012,"mtime":1617982372435,"results":"98","hashOfConfig":"56"},{"size":1452,"mtime":1619788672154,"results":"99","hashOfConfig":"56"},{"size":3838,"mtime":1619788794261,"results":"100","hashOfConfig":"56"},{"size":9125,"mtime":1619782059411,"results":"101","hashOfConfig":"56"},{"size":1452,"mtime":1619788694383,"results":"102","hashOfConfig":"56"},{"size":3838,"mtime":1619789034738,"results":"103","hashOfConfig":"56"},{"size":1246,"mtime":1617865618081,"results":"104","hashOfConfig":"56"},{"size":9020,"mtime":1619855954342,"results":"105","hashOfConfig":"56"},{"size":6686,"mtime":1619850003666,"results":"106","hashOfConfig":"56"},{"size":1286,"mtime":1619791939708,"results":"107","hashOfConfig":"56"},{"size":1444,"mtime":1619789884437,"results":"108","hashOfConfig":"56"},{"size":3929,"mtime":1619792390054,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},"1fav7u2",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"201"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"201"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"116"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"116"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"116"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"116"},"D:\\web\\webapp\\chengji-client\\src\\index.js",["256"],"// 入口的js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react-router-dom比react-router功能更多\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Register from \"@/containers/register\";\r\nimport Main from \"@/containers/main\";\r\nimport Login from \"@/containers/login\";\r\nimport store from \"./redux/store\";\r\nconst app = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/register\" component={Register}></Route>\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        {/* 默认的组件 */}\r\n        <Route component={Main}></Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  </Provider>,\r\n  app\r\n);\r\n",["257","258"],"D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts",[],["259","260"],"D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx",["261","262","263","264","265"],"//教务员注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  adminRegister,\r\n  teacherRegister,\r\n  studentRegister,\r\n} from \"../../redux/actions\";\r\nimport { Carousel } from \"antd\";\r\nconst contentStyle: any = {\r\n  height: \"100%\",\r\n  color: \"#fff\",\r\n  lineHeight: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"#364d79\",\r\n};\r\nfunction Register(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: (state.type = values.type),\r\n    });\r\n    //调用redux action中的register方法，\r\n    if (state.type === \"student\") {\r\n      props.studentRegister(state);\r\n    } else if (state.type === \"admin\") {\r\n      props.adminRegister(state);\r\n    } else {\r\n      props.teacherRegister(state);\r\n    }\r\n  };\r\n  // 点击注册调用\r\n\r\n  const toLogin = () => {\r\n    props.history.replace(\"/login\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  return (\r\n    <Carousel autoplay effect=\"fade\">\r\n      <div>\r\n        <h3 style={contentStyle}>\r\n          <div className={bj.logo}>\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              validateMessages={validateMessages}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                <div className=\"login-form-title\">用户注册</div>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"学号不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                 \r\n                  placeholder=\"学号/职工号/教工号\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                  // onChange={val => { this.handleChange('password', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"确认密码\"\r\n                  // onChange={val => { this.handleChange('password2', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item name=\"type\">\r\n                <Radio.Group>\r\n                  <Radio value=\"admin\">教务员</Radio>\r\n                  <Radio value=\"student\">学生</Radio>\r\n                  <Radio value=\"teacher\">教师</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n                </Button>\r\n                <p\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;已有账号？{\" \"}\r\n                  <a onClick={toLogin}>请点击登入！</a>\r\n                </p>\r\n\r\n                <div\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{\r\n                    backgroundColor: \"#CCC\",\r\n                    width: \"100%\",\r\n                    height: \"42px\",\r\n                    position: \"absolute\",\r\n                    bottom: \"-26px\",\r\n                  }}\r\n                >\r\n                  <span className=\"login-form-registerLogin-txt\">\r\n                    温馨提示:\r\n                  </span>\r\n                  学生学号老师职工号教务员教工号！\r\n                </div>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <h3 style={contentStyle}>\r\n          <div className={bj.logo1}>\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              validateMessages={validateMessages}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                <div className=\"login-form-title\">用户注册</div>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"学号不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  // onChange={val => { this.handleChange('username', val) }}\r\n                  placeholder=\"学号/职工号/教工号\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                  // onChange={val => { this.handleChange('password', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"确认密码\"\r\n                  // onChange={val => { this.handleChange('password2', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item name=\"type\">\r\n                <Radio.Group>\r\n                  <Radio value=\"admin\">教务员</Radio>\r\n                  <Radio value=\"student\">学生</Radio>\r\n                  <Radio value=\"teacher\">教师</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n                </Button>\r\n                <p\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;已有账号？{\" \"}\r\n                  <a onClick={toLogin}>请点击登入！</a>\r\n                </p>\r\n\r\n                <div\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{\r\n                    backgroundColor: \"#CCC\",\r\n                    width: \"100%\",\r\n                    height: \"42px\",\r\n                    position: \"absolute\",\r\n                    bottom: \"-26px\",\r\n                  }}\r\n                >\r\n                  <span className=\"login-form-registerLogin-txt\">\r\n                    温馨提示:\r\n                  </span>\r\n                  学生学号老师职工号教务员教工号！\r\n                </div>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <h3 style={contentStyle}>\r\n          <div className={bj.logo2}>\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              validateMessages={validateMessages}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                <div className=\"login-form-title\">用户注册</div>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"学号不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  // onChange={val => { this.handleChange('username', val) }}\r\n                  placeholder=\"学号/职工号/教工号\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                  // onChange={val => { this.handleChange('password', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"确认密码\"\r\n                  // onChange={val => { this.handleChange('password2', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item name=\"type\">\r\n                <Radio.Group>\r\n                  <Radio value=\"admin\">教务员</Radio>\r\n                  <Radio value=\"student\">学生</Radio>\r\n                  <Radio value=\"teacher\">教师</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n                </Button>\r\n                <p\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;已有账号？{\" \"}\r\n                  <a onClick={toLogin}>请点击登入！</a>\r\n                </p>\r\n\r\n                <div\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{\r\n                    backgroundColor: \"#CCC\",\r\n                    width: \"100%\",\r\n                    height: \"42px\",\r\n                    position: \"absolute\",\r\n                    bottom: \"-26px\",\r\n                  }}\r\n                >\r\n                  <span className=\"login-form-registerLogin-txt\">\r\n                    温馨提示:\r\n                  </span>\r\n                  学生学号老师职工号教务员教工号！\r\n                </div>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <h3 style={contentStyle}>\r\n          <div className={bj.logo3}>\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              validateMessages={validateMessages}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                <div className=\"login-form-title\">用户注册</div>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"学号不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  // onChange={val => { this.handleChange('username', val) }}\r\n                  placeholder=\"学号/职工号/教工号\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                  // onChange={val => { this.handleChange('password', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"密码不允许少于6位大于11位\",\r\n\r\n                    min: 6,\r\n                    max: 11,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"确认密码\"\r\n                  // onChange={val => { this.handleChange('password2', val) }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item name=\"type\">\r\n                <Radio.Group>\r\n                  <Radio value=\"admin\">教务员</Radio>\r\n                  <Radio value=\"student\">学生</Radio>\r\n                  <Radio value=\"teacher\">教师</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n                </Button>\r\n                <p\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;已有账号？{\" \"}\r\n                  <a onClick={toLogin}>请点击登入！</a>\r\n                </p>\r\n\r\n                <div\r\n                  className=\"login-form-registerLogin\"\r\n                  style={{\r\n                    backgroundColor: \"#CCC\",\r\n                    width: \"100%\",\r\n                    height: \"42px\",\r\n                    position: \"absolute\",\r\n                    bottom: \"-26px\",\r\n                  }}\r\n                >\r\n                  <span className=\"login-form-registerLogin-txt\">\r\n                    温馨提示:\r\n                  </span>\r\n                  学生学号老师职工号教务员教工号！\r\n                </div>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </h3>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminRegister, teacherRegister, studentRegister }\r\n)(Register);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts",[],"D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx",["266","267","268","269","270","271","272"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateTeacher } from \"../../redux/actions\";\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nfunction TeacherInfo(props: {\r\n  updateTeacher: (arg0: any) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n    years: \"\",\r\n    term: \"\",\r\n    duty: \"\",\r\n    IDcard: \"\",\r\n    startDate: \"\",\r\n    cname: \"\",\r\n    classno: \"\",\r\n    nation: \"\",\r\n    department: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    diploma: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      sex: (state.sex = values.sex),\r\n      diploma: (state.diploma = values.diploma),\r\n      duty: (state.duty = values.duty),\r\n      cname: (state.cname = values.cname),\r\n      classno: (state.classno = values.classno),\r\n      startDate: (state.startDate = values.startDate),\r\n      nation: (state.nation = values.nation),\r\n      region: (state.region = values.region),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n      department: (state.department = values.department),\r\n      street: (state.street = values.street),\r\n      years: (state.years = values.years),\r\n      term: (state.term = values.term),\r\n    });\r\n\r\n    props.updateTeacher(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"teacher\" ? \"/teacher\" : \"/teacherInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const cnameselect = (e) => {\r\n    setselectdata(e);\r\n  };\r\n  const deparmentselect = (e) => {\r\n    setdeparmentdata(e);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教师基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"男\">男</Radio>\r\n              <Radio value=\"女\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"党员\">党员</Option>\r\n\r\n              <Option value=\"群众\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"学年\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"years\"} noStyle>\r\n                <Select placeholder=\"请选择\">\r\n                  <Option value=\"20202021\">2020-2021</Option>\r\n                  <Option value=\"20192020\">2019-2020</Option>\r\n                  <Option value=\"20182019\">2018-2019</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name={\"term\"} label=\"学期\" noStyle>\r\n                <Select placeholder=\"请选择学期\">\r\n                  <Option value=\"第一学期\">第一学期</Option>\r\n                  <Option value=\"第二学期\">第二学期</Option>\r\n                  <Option value=\"第三学期\">第三学期</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请选择学院\" }]}\r\n          >\r\n            <Select onChange={deparmentselect} placeholder=\"请选择学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            <Select placeholder=\"请输入你的学历\">\r\n              <Option value=\"博士\">博士</Option>\r\n              <Option value=\"研究生\">研究生</Option>\r\n              <Option value=\"本科\">本科</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"专业名\">\r\n            {deparmentdata === \"电子信息与工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"网络工程\">网络工程</Option>\r\n                  <Option value=\"计算机技术\">计算机技术</Option>\r\n                  <Option value=\"电子信息工程\">电子信息工程</Option>\r\n                  <Option value=\"人工智能\">人工智能</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"建筑工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"建筑学\">建筑学</Option>\r\n                  <Option value=\"土木工程\">土木工程</Option>\r\n                  <Option value=\"工程管理\">工程管理</Option>\r\n                  <Option value=\"交通工程\">交通工程</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"机械工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"材料成型及控制工程\">材料成型及控制工程</Option>\r\n                  <Option value=\"车辆工程\">车辆工程</Option>\r\n                  <Option value=\"化学工程与工艺\">化学工程与工艺</Option>\r\n                  <Option value=\"油气储运工程\">油气储运工程</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"交通学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"金融工程\">金融工程</Option>\r\n                  <Option value=\"会计学\">会计学</Option>\r\n                  <Option value=\"国际经济与贸易\">国际经济与贸易</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"化学工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"应用统计学\">应用统计学</Option>\r\n                  <Option value=\"物流管理\">物流管理</Option>\r\n                  <Option value=\"材料物理\">材料物理</Option>\r\n                  <Option value=\"应用化学\">应用化学</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"材料学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"英语\">英语</Option>\r\n                  <Option value=\"日语\">日语</Option>\r\n                  <Option value=\"德语\">德语</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"理学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"工业设计\">工业设计</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n\r\n            {/* <Form.Item\r\n                name={\"classno\"}\r\n                label=\"班级\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"班级信息必须输入！\" }]}\r\n              >\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value={seletdata + \"1\"}>{seletdata + \"1\"}</Option>\r\n                  <Option value={seletdata + \"2\"}>{seletdata + \"2\"}</Option>\r\n                  <Option value={seletdata + \"3\"}>{seletdata + \"3\"}</Option>\r\n                </Select>\r\n              </Form.Item> */}\r\n          </Form.Item>\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"河北\">河北</Option>\r\n                  <Option value=\"山西\">山西</Option>\r\n                  <Option value=\"辽宁\">辽宁</Option>\r\n                  <Option value=\"吉林\">吉林</Option>\r\n                  <Option value=\"黑龙江\">黑龙江</Option>\r\n                  <Option value=\"江苏\">江苏</Option>\r\n                  <Option value=\"浙江\">浙江</Option>\r\n                  <Option value=\"安徽\">安徽</Option>\r\n                  <Option value=\"福建\">福建</Option>\r\n                  <Option value=\"江西\">江西</Option>\r\n                  <Option value=\"山东\">山东</Option>\r\n                  <Option value=\"河南\">河南</Option>\r\n                  <Option value=\"湖北\">湖北</Option>\r\n                  <Option value=\"湖南\">湖南</Option>\r\n                  <Option value=\"广东\">广东</Option>\r\n                  <Option value=\"海南\">海南</Option>\r\n                  <Option value=\"四川\">四川</Option>\r\n                  <Option value=\"贵州\">贵州</Option>\r\n                  <Option value=\"内蒙古\">内蒙古</Option>\r\n                  <Option value=\"广西壮族\">广西壮族</Option>\r\n                  <Option value=\"西藏\">西藏</Option>\r\n                  <Option value=\"宁夏回族\">宁夏回族</Option>\r\n                  <Option value=\"新疆维吾尔\">新疆维吾尔</Option>\r\n                  <Option value=\"北京\">北京</Option>\r\n                  <Option value=\"天津\">天津</Option>\r\n                  <Option value=\"上海\">上海</Option>\r\n                  <Option value=\"重庆\">重庆</Option>\r\n                  <Option value=\"香港\">香港</Option>\r\n                  <Option value=\"澳门\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入工作职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" icon={<LikeOutlined />} htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateTeacher,\r\n})(TeacherInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx",["273"],"import Administer from \"@/containers/admin/components/admin\";\r\nimport React from \"react\";\r\nimport styles from \"./index.module.less\";\r\n\r\nexport default function Admin() {\r\n  return <Administer></Administer>;\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx",["274","275","276","277","278","279"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateStudent } from \"../../redux/actions\";\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nfunction StudentInfo(props: {\r\n  updateStudent: (arg0: {\r\n    realName: string;\r\n    sex: string;\r\n    affiliation: string;\r\n    age: string;\r\n    years: string;\r\n    term: string;\r\n    nation: string;\r\n    cname: string;\r\n    classno: string;\r\n    region: string;\r\n    phone: string;\r\n    department: string;\r\n    IDcard: string;\r\n    recommend: string;\r\n    eMail: string;\r\n    street: string;\r\n    address: string;\r\n  }) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    sex: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    years: \"\",\r\n    term: \"\",\r\n    cname: \"\",\r\n    classno: \"\",\r\n\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    recommend: \"\",\r\n    department: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    address: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      sex: (state.sex = values.sex),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      cname: (state.cname = values.cname),\r\n      classno: (state.classno = values.classno),\r\n      age: (state.age = values.age),\r\n\r\n      region: (state.region = values.region),\r\n      phone: (state.phone = values.phone),\r\n      nation: (state.nation = values.nation),\r\n      department: (state.department = values.department),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      recommend: (state.recommend = values.recommend),\r\n      eMail: (state.eMail = values.eMail),\r\n      street: (state.street = values.street),\r\n      address: (state.address = values.address),\r\n      years: (state.years = values.years),\r\n      term: (state.term = values.term),\r\n    });\r\n    props.updateStudent(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"student\" ? \"/student\" : \"/studentInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const cnameselect = (e) => {\r\n    setselectdata(e);\r\n  };\r\n  const deparmentselect = (e) => {\r\n    setdeparmentdata(e);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>学生基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"男\">男</Radio>\r\n              <Radio value=\"女\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请选择学院\" }]}\r\n          >\r\n            <Select onChange={deparmentselect} placeholder=\"请选择学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"学年\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"years\"} noStyle>\r\n                <Select placeholder=\"请选择\">\r\n                  <Option value=\"20202021\">2020-2021</Option>\r\n                  <Option value=\"20192020\">2019-2020</Option>\r\n                  <Option value=\"20182019\">2018-2019</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name={\"term\"} label=\"学期\" noStyle>\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value=\"第一学期\">第一学期</Option>\r\n                  <Option value=\"第二学期\">第二学期</Option>\r\n                  <Option value=\"第三学期\">第三学期</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"党员\">党员</Option>\r\n              <Option value=\"团员\">团员</Option>\r\n              <Option value=\"少先队员\">少先队员</Option>\r\n              <Option value=\"群众\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"专业名\">\r\n            <Input.Group compact>\r\n              {deparmentdata === \"电子信息与工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"网络工程\">网络工程</Option>\r\n                    <Option value=\"计算机技术\">计算机技术</Option>\r\n                    <Option value=\"电子信息工程\">电子信息工程</Option>\r\n                    <Option value=\"人工智能\">人工智能</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"建筑工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"建筑学\">建筑学</Option>\r\n                    <Option value=\"土木工程\">土木工程</Option>\r\n                    <Option value=\"工程管理\">工程管理</Option>\r\n                    <Option value=\"交通工程\">交通工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"机械工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"材料成型及控制工程\">\r\n                      材料成型及控制工程\r\n                    </Option>\r\n                    <Option value=\"车辆工程\">车辆工程</Option>\r\n                    <Option value=\"化学工程与工艺\">化学工程与工艺</Option>\r\n                    <Option value=\"油气储运工程\">油气储运工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"交通学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"金融工程\">金融工程</Option>\r\n                    <Option value=\"会计学\">会计学</Option>\r\n                    <Option value=\"国际经济与贸易\">国际经济与贸易</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"化学工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"应用统计学\">应用统计学</Option>\r\n                    <Option value=\"物流管理\">物流管理</Option>\r\n                    <Option value=\"材料物理\">材料物理</Option>\r\n                    <Option value=\"应用化学\">应用化学</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"材料学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"英语\">英语</Option>\r\n                    <Option value=\"日语\">日语</Option>\r\n                    <Option value=\"德语\">德语</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"理学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"工业设计\">工业设计</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n\r\n              <Form.Item\r\n                name={\"classno\"}\r\n                label=\"班级\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"班级信息必须输入！\" }]}\r\n              >\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value={seletdata + \"1\"}>{seletdata + \"1\"}</Option>\r\n                  <Option value={seletdata + \"2\"}>{seletdata + \"2\"}</Option>\r\n                  <Option value={seletdata + \"3\"}>{seletdata + \"3\"}</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"河北\">河北</Option>\r\n                  <Option value=\"山西\">山西</Option>\r\n                  <Option value=\"辽宁\">辽宁</Option>\r\n                  <Option value=\"吉林\">吉林</Option>\r\n                  <Option value=\"黑龙江\">黑龙江</Option>\r\n                  <Option value=\"江苏\">江苏</Option>\r\n                  <Option value=\"浙江\">浙江</Option>\r\n                  <Option value=\"安徽\">安徽</Option>\r\n                  <Option value=\"福建\">福建</Option>\r\n                  <Option value=\"江西\">江西</Option>\r\n                  <Option value=\"山东\">山东</Option>\r\n                  <Option value=\"河南\">河南</Option>\r\n                  <Option value=\"湖北\">湖北</Option>\r\n                  <Option value=\"湖南\">湖南</Option>\r\n                  <Option value=\"广东\">广东</Option>\r\n                  <Option value=\"海南\">海南</Option>\r\n                  <Option value=\"四川\">四川</Option>\r\n                  <Option value=\"贵州\">贵州</Option>\r\n                  <Option value=\"内蒙古\">内蒙古</Option>\r\n                  <Option value=\"广西壮族\">广西壮族</Option>\r\n                  <Option value=\"西藏\">西藏</Option>\r\n                  <Option value=\"宁夏回族\">宁夏回族</Option>\r\n                  <Option value=\"新疆维吾尔\">新疆维吾尔</Option>\r\n                  <Option value=\"北京\">北京</Option>\r\n                  <Option value=\"天津\">天津</Option>\r\n                  <Option value=\"上海\">上海</Option>\r\n                  <Option value=\"重庆\">重庆</Option>\r\n                  <Option value=\"香港\">香港</Option>\r\n                  <Option value=\"澳门\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"address\"}\r\n            label=\"家庭地址\"\r\n            rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"请输入家庭地址\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"recommend\"} label=\"自我简介\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入自我简介\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" icon={<LikeOutlined />} htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateStudent,\r\n})(StudentInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx",["280","281","282","283","284","285"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav/index.tsx\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateAdmin } from \"../../redux/actions\";\r\n\r\nfunction AdminInfo(props: {\r\n  user: { IDcard: any; type: any };\r\n  updateAdmin: (arg0: {\r\n    realName: string;\r\n    affiliation: string;\r\n    age: string;\r\n    sex: string;\r\n    phone: string;\r\n    IDcard: string;\r\n    eMail: string;\r\n    diploma: string;\r\n    department: string;\r\n    duty: string;\r\n  }) => void;\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    diploma: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    eMail: \"\",\r\n    sex: \"\",\r\n    department: \"\",\r\n    duty: \"\",\r\n  });\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"admin\" ? \"/admin\" : \"/adminInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      diploma: (state.diploma = values.diploma),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n      sex: (state.sex = values.sex),\r\n      department: (state.department = values.department),\r\n      duty: (state.duty = values.duty),\r\n    });\r\n    props.updateAdmin(state);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教职工基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"男\">男</Radio>\r\n              <Radio value=\"女\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"党员\">党员</Option>\r\n\r\n              <Option value=\"群众\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100 }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请选择学院\" }]}\r\n          >\r\n            <Select placeholder=\"请选择学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            <Select placeholder=\"请输入你的学历\">\r\n              <Option value=\"博士\">博士</Option>\r\n              <Option value=\"研究生\">研究生</Option>\r\n              <Option value=\"本科\">本科</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" icon={<LikeOutlined />} htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateAdmin,\r\n})(AdminInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts",[],"D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\api\\index.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx",["286","287","288","289","290"],"import { Button, Layout, Menu, Tooltip } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  MediumOutlined,\r\n  PoweroffOutlined,\r\n  ContainerOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport TeacherPerson from \"../person\";\r\nimport CourseInfo from \"../course\";\r\nimport Cookies from \"js-cookie\";\r\nimport GradeTable from \"../gradetable\";\r\nimport StuInfo from \"@/containers/teacher/components/stuinfo\";\r\nimport request from \"umi-request\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nconst { Header, Sider, Content, Footer } = Layout;\r\nconst cookicedata: any = [];\r\nfunction Teachers() {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n  });\r\n  const [clickkey, setclickkey] = useState(\"1\");\r\n\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  const menuclick = (e) => {\r\n    setclickkey(e.key);\r\n  };\r\n  const userid = Cookies.get(\"userid\");\r\n  const [requestdata, setrequestdata]: any = useState();\r\n  useEffect(() => {\r\n    request\r\n      .post(\"teacheruserid\", {\r\n        data: {\r\n          id: userid,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setrequestdata(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        style={{ backgroundColor: \"#fff\" }}\r\n        collapsed={state.collapsed}\r\n      >\r\n        <div className=\"logo\">\r\n          {requestdata != undefined && requestdata[0].realName + \"你好！\"}\r\n        </div>\r\n        <Menu\r\n          selectable\r\n          theme=\"light\"\r\n          onClick={menuclick}\r\n          mode=\"inline\"\r\n          selectedKeys={[clickkey]}\r\n          defaultSelectedKeys={[clickkey]}\r\n        >\r\n          <Menu.Item key=\"1\" icon={<MediumOutlined />}>\r\n            成绩管理\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<CalendarOutlined />}>\r\n            成绩表\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"3\" icon={<ContainerOutlined />}>\r\n            授课信息\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<UserOutlined />}>\r\n            个人信息\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: toggle,\r\n            }\r\n          )}\r\n          <Tooltip title=\"欢迎光临成绩管理系统!\">\r\n            <span style={{ fontSize: 25 }}>教师成绩管理系统</span>\r\n          </Tooltip>\r\n\r\n          <Button icon={<PoweroffOutlined />} href=\"/login\" danger>\r\n            退出\r\n          </Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 618,\r\n          }}\r\n        >\r\n          {clickkey === \"1\" && <StuInfo></StuInfo>}\r\n          {clickkey === \"2\" && <GradeTable></GradeTable>}\r\n          {clickkey === \"3\" && <CourseInfo></CourseInfo>}\r\n          {clickkey === \"4\" && <TeacherPerson></TeacherPerson>}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  })\r\n  //  函数确定\r\n)(Teachers);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx",["291","292","293","294","295","296","297","298"],"import { Button, Layout, Menu, Tooltip } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  MediumOutlined,\r\n  MailOutlined,\r\n  PoweroffOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport DepartmentGradeTable from \"../departmentgradetable\";\r\nimport { AdminUserid } from \"@/redux/actions\";\r\nimport Cookies from \"js-cookie\";\r\nimport AdminPerson from \"../personinfo\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport Studentinfomation from \"../addstudent\";\r\nimport Teacherinfomation from \"../addteacher\";\r\nimport Admininfomation from \"../addadmin\";\r\nimport request from \"umi-request\";\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\nconst cookicedata: any = [];\r\nfunction Administer(props) {\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      console.log(\"cookiceuserid\", cookiceuserid);\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n  });\r\n  const [clickkey, setclickkey] = useState(\"1\");\r\n\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  const menuclick = (e) => {\r\n    setclickkey(e.key);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        style={{ backgroundColor: \"#fff\" }}\r\n        collapsed={state.collapsed}\r\n      >\r\n        <div className=\"logo\">\r\n          {JSON.stringify(cookicedata) != \"{}\" &&\r\n            cookicedata[0]?.realName + \"你好！\"}\r\n        </div>\r\n        <Menu\r\n          selectable\r\n          theme=\"light\"\r\n          onClick={menuclick}\r\n          mode=\"inline\"\r\n          selectedKeys={[clickkey]}\r\n          defaultSelectedKeys={[clickkey]}\r\n        >\r\n          {/* <Menu.Item key=\"1\" icon={<CalendarOutlined />}>\r\n            学院成绩表\r\n          </Menu.Item> */}\r\n\r\n          <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"账号管理\">\r\n            <Menu.Item key=\"1\">学生信息</Menu.Item>\r\n            <Menu.Item key=\"2\">教师信息</Menu.Item>\r\n            <Menu.Item key=\"3\">教职工信息</Menu.Item>\r\n          </SubMenu>\r\n          <Menu.Item key=\"4\" icon={<UserOutlined />}>\r\n            个人信息\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: toggle,\r\n            }\r\n          )}\r\n          <Tooltip title=\"欢迎光临成绩管理系统!\">\r\n            <span style={{ fontSize: 25 }}>教职工成绩管理系统</span>\r\n          </Tooltip>\r\n          <Button icon={<PoweroffOutlined />} href=\"/login\" danger>\r\n            退出\r\n          </Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 618,\r\n          }}\r\n        >\r\n          {/* {clickkey === \"1\" && <DepartmentGradeTable></DepartmentGradeTable>} */}\r\n\r\n          {clickkey === \"1\" && <Studentinfomation></Studentinfomation>}\r\n          {clickkey === \"2\" && <Teacherinfomation></Teacherinfomation>}\r\n          {clickkey === \"3\" && <Admininfomation></Admininfomation>}\r\n          {clickkey === \"4\" && <AdminPerson></AdminPerson>}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  //  函数确定\r\n  { AdminUserid }\r\n)(Administer);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx",["299","300","301"],"import { Layout, Menu, Breadcrumb, Button, Tooltip } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport { StudentUserid } from \"@/redux/actions\";\r\nimport Cookies from \"js-cookie\";\r\nimport PersonalGradeTable from \"../personalgrade\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport StudentPerson from \"../personanl\";\r\nimport request from \"umi-request\";\r\nfunction PersonalCommonL() {\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  const userid = Cookies.get(\"userid\");\r\n  const [requestdata, setrequestdata]: any = useState();\r\n  useEffect(() => {\r\n    request\r\n      .post(\"studentuserid\", {\r\n        data: {\r\n          id: userid,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setrequestdata(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const [state, setState] = useState(\"1\");\r\n  const clickkey = (e) => {\r\n    setState(e.key);\r\n  };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        <div>\r\n          {requestdata != undefined && requestdata[0].realName + \"你好！\"}\r\n        </div>\r\n        <Menu\r\n          theme=\"light\"\r\n          onClick={clickkey}\r\n          mode=\"horizontal\"\r\n          defaultValue={state}\r\n          selectedKeys={[state]}\r\n          defaultSelectedKeys={[state]}\r\n        >\r\n          <Menu.Item key=\"1\">个人成绩表</Menu.Item>\r\n          <Menu.Item key=\"2\">个人信息</Menu.Item>\r\n        </Menu>\r\n        <Tooltip title=\"欢迎光临成绩管理系统!\">\r\n          <span style={{ fontSize: 25 }}>学生成绩管理系统</span>\r\n        </Tooltip>\r\n        <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n          退出\r\n        </Button>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\", minHeight: 590 }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n        {state === \"1\" && <PersonalGradeTable></PersonalGradeTable>}\r\n        {state === \"2\" && <StudentPerson></StudentPerson>}\r\n      </Content>\r\n\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        成绩管理系统 ©2021 Created by 许浩然\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n}\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  //  函数确定\r\n  { StudentUserid }\r\n)(PersonalCommonL);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx",["302","303","304","305"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx",["306","307"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nconst EditModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<FormOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <GradeEdit tempdata={tempdata}></GradeEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx",["308","309","310","311","312","313","314","315","316","317","318","319"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport AddGrade from \"../addgrade\";\r\nimport Cookies from \"js-cookie\";\r\nimport { GradeInfo, AddGradeCount, TeacherUserid } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport DeleteGradeModel from \"../deletegrademodel\";\r\nimport styles from \"./index.module.less\";\r\nimport EditModel from \"./components/editmodel\";\r\nimport { SyncOutlined, FormOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\n\r\nconst cookicedata: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  department: \"\",\r\n  courseteacher: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  countcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GradeEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { tempdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      grade: \"\",\r\n      credit: \"\",\r\n      gpa: \"\",\r\n      cheat: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(tempdata);\r\n  }, []);\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        cname: cookiceuserid[i].cname,\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (tempdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          department: formatedata[i].department,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].cheat === \"作弊\" ? true : false,\r\n          courseteacher: formatedata[i].courseteacher,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"授课老师\",\r\n      dataIndex: \"courseteacher\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      align: \"center\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </a>\r\n            <Popconfirm title=\"确定取消?\" onConfirm={cancel}>\r\n              <a>取消</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <Typography.Link disabled={editingKey !== \"\"}>\r\n              <EditModel record={record}></EditModel>\r\n            </Typography.Link>\r\n\r\n            <Typography.Link>\r\n              <DeleteGradeModel clickdata={record}></DeleteGradeModel>\r\n            </Typography.Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"grade\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let countcredit = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n    countgpa = data[key].gpa + countgpa;\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    courseteacher: originData[0]?.courseteacher,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    department: originData[0]?.department,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    countcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        // footer={() => (\r\n        //   <div>\r\n        //     <Tag color=\"green\">总分:{count}</Tag>\r\n        //     <Tag color=\"green\">平均分:{average}</Tag>\r\n        //     <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n        //     <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n        //     <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n        //     <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n        //   </div>\r\n        // )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <AddGrade tempdata={tempdata}></AddGrade>,\r\n          <Popconfirm\r\n            title=\"同步信息\"\r\n            onConfirm={handleOk}\r\n            onCancel={handleCancel}\r\n          >\r\n            <Tooltip title=\"同步\">\r\n              <Button\r\n                style={{ border: 0 }}\r\n                shape=\"circle\"\r\n                icon={<SyncOutlined />}\r\n              ></Button>\r\n            </Tooltip>\r\n          </Popconfirm>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        headerTitle=\"课程成绩信息表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  //  函数确定\r\n  { GradeInfo, AddGradeCount, TeacherUserid }\r\n)(GradeEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx",["320","321"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport AddDetail from \"./components/adddetail\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nconst AddGrade = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const { tempdata } = props;\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<PlusCircleOutlined />} onClick={showModal}>\r\n        录入\r\n      </Button>\r\n      <Modal\r\n       \r\n        width={700}\r\n        // afterClose={() => {\r\n        //   window.history.go(0);\r\n        // }}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <AddDetail tempdata={tempdata}></AddDetail>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(AddGrade);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx",["322","323","324","325","326","327","328","329","330","331","332","333","334","335","336"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { addGrade } from \"@/redux/actions\";\r\n\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nfunction AddDetail(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    realName: \"\",\r\n    courseNo: \"\",\r\n    classno: \"\",\r\n    credit: \"\",\r\n    courseType: \"\",\r\n    courseName: \"\",\r\n    grade: Number,\r\n    cheat: \"\",\r\n    cname: \"\",\r\n    department: \"\",\r\n    courseteacher: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  \r\n  const { tempdata } = props;\r\n\r\n\r\n\r\n  const onFinish = async (values: any) => {\r\n    setState({\r\n      department: (state.department = tempdata.department),\r\n      username: (state.username = tempdata.username),\r\n      realName: (state.realName = tempdata.realName),\r\n      cname: (state.cname = tempdata.cname),\r\n      classno: (state.classno = tempdata.classno),\r\n      courseNo: (state.courseNo = values.courseNo),\r\n      credit: (state.credit = values.credit),\r\n      courseType: (state.courseType = values.courseType),\r\n      courseName: (state.courseName = values.courseName),\r\n      grade: (state.grade = values.cheat === \"作弊\" ? 0 : values.grade),\r\n      cheat: (state.cheat = values.cheat),\r\n      courseteacher: (state.courseteacher = tempdata.courseteacher),\r\n    });\r\n\r\n    await props.addGrade(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const btnclick = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      style={{ margin: \"17px auto\" }}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name={\"username\"} label=\"学号\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学号\"\r\n          defaultValue={tempdata.username}\r\n          value={tempdata.username}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"realName\"} label=\"姓名\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入姓名\"\r\n          defaultValue={tempdata.realName}\r\n          value={tempdata.realName}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"department\"} label=\"学院\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学院\"\r\n          defaultValue={tempdata.department}\r\n          value={tempdata.department}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseteacher\"} label=\"授课老师\">\r\n        <Input\r\n          readOnly\r\n          defaultValue={tempdata.courseteacher}\r\n          value={tempdata.courseteacher}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"cname\"} label=\"专业\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入专业\"\r\n          defaultValue={tempdata.cname}\r\n          value={tempdata.cname}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"classno\"} label=\"班级\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入班级\"\r\n          defaultValue={tempdata.classno}\r\n          value={tempdata.classno}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseNo\"} label=\"课程号\" rules={[{ required: true }]}>\r\n        <Input placeholder=\"请输入课程号\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"courseName\"}\r\n        label=\"课程名称\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input placeholder=\"请输入课程名称\" />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseType\"} label=\"课程类型\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"公共课\">公共课</Option>\r\n          <Option value=\"选修课\">选修课</Option>\r\n          <Option value=\"必修课\">必修课</Option>\r\n          <Option value=\"辅修课\">辅修课</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"grade\"} label=\"成绩\">\r\n        <InputNumber style={{ width: 435 }} placeholder=\"请输入成绩\" />\r\n      </Form.Item>\r\n      <Form.Item name={\"credit\"} label=\"学分\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"1.0\">1.0</Option>\r\n          <Option value=\"1.5\">1.5</Option>\r\n          <Option value=\"2.0\">2.0</Option>\r\n          <Option value=\"2.5\">2.5</Option>\r\n          <Option value=\"3.0\">3.0</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"cheat\"} label=\"作弊\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"作弊\">作弊</Option>\r\n          <Option value=\"正常\">正常</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<LikeOutlined />}\r\n          onClick={btnclick}\r\n          htmlType=\"submit\"\r\n        >\r\n          信息提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ grade: state.grade }), {\r\n  addGrade,\r\n})(AddDetail);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletestudentmodel\\index.tsx",["337","338","339"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteStudent } from \"@/redux/actions\";\r\nimport { DeleteOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nconst DeleteStudentModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    props.DeleteStudent(tempdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  }),\r\n  //  函数确定\r\n  { DeleteStudent }\r\n)(DeleteStudentModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletegrademodel\\index.tsx",["340","341"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteGrade } from \"@/redux/actions\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst DeleteGradeModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    // console.log(\"clickdata\", clickdata);\r\n\r\n    props.DeleteGrade(clickdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {clickdata.flagcheat === true ? (\r\n          <Button\r\n            type=\"link\"\r\n            style={{ color: \"red\" }}\r\n            icon={<DeleteOutlined />}\r\n            onClick={showModal}\r\n          >\r\n            删除\r\n          </Button>\r\n        ) : (\r\n          <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n            删除\r\n          </Button>\r\n        )}\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n  }),\r\n  //  函数确定\r\n  { DeleteGrade }\r\n)(DeleteGradeModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\index.tsx",["342","343","344","345","346"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\model\\index.tsx",["347","348"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { ReadOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeTableEdit from \"../gradesearch\";\r\nconst EditTableModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<ReadOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <GradeTableEdit clickdata={clickdata}></GradeTableEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditTableModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\gradesearch\\index.tsx",["349","350","351","352","353","354","355","356","357","358","359"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GradeTableEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { clickdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(clickdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (clickdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].cheat === \"作弊\" ? true : false,\r\n          courseteacher: formatedata[i].courseteacher,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"授课老师\",\r\n      dataIndex: \"courseteacher\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            {/* <Tag color=\"green\">平均绩点:{averagegpa}</Tag> */}\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            {/* <Tag color=\"green\">平均学分:{averagecountcredit}</Tag> */}\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"课程成绩信息表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(GradeTableEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\person\\index.tsx",["360","361","362","363","364","365","366","367","368","369"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\editmodel\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\updategrade\\index.tsx",["370","371","372","373","374","375","376","377","378"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport { UpdateGradeData, TeacherUserid } from \"@/redux/actions\";\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nfunction UpdateGrade(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    realName: \"\",\r\n    courseNo: \"\",\r\n    classno: \"\",\r\n    credit: \"\",\r\n    courseType: \"\",\r\n    courseName: \"\",\r\n    grade: Number,\r\n    cheat: \"\",\r\n    cname: \"\",\r\n    department: \"\",\r\n    courseteacher: \"\",\r\n  });\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n  const cookicedata: any = [];\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        cname: cookiceuserid[i].cname,\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  const { tempdata } = props;\r\n\r\n  const onFinish = async (values: any) => {\r\n    setState({\r\n      department: (state.department = tempdata.department),\r\n      username: (state.username = tempdata.username),\r\n      realName: (state.realName = tempdata.realName),\r\n      cname: (state.cname = tempdata.cname),\r\n      classno: (state.classno = tempdata.classno),\r\n      courseNo: (state.courseNo = tempdata.courseNo),\r\n      credit: (state.credit = values.credit || tempdata.credit),\r\n      courseType: (state.courseType = values.courseType || tempdata.courseType),\r\n      courseName: (state.courseName = values.courseName || tempdata.courseName),\r\n      grade: (state.grade =\r\n        values.cheat === \"作弊\" ? 0 : values.grade || tempdata.grade),\r\n      cheat: (state.cheat = values.cheat || tempdata.cheat),\r\n      courseteacher: (state.courseteacher = tempdata.courseteacher),\r\n    });\r\n\r\n    await props.UpdateGradeData(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const btnclick = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      style={{ margin: \"17px auto\" }}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name={\"username\"} label=\"学号\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学号\"\r\n          defaultValue={tempdata.username}\r\n          value={tempdata.username}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"realName\"} label=\"姓名\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入姓名\"\r\n          defaultValue={tempdata.realName}\r\n          value={tempdata.realName}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"department\"} label=\"学院\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学院\"\r\n          defaultValue={tempdata.department}\r\n          value={tempdata.department}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseteacher\"} label=\"授课老师\">\r\n        <Input\r\n          readOnly\r\n          defaultValue={tempdata.courseteacher}\r\n          value={tempdata.courseteacher}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"cname\"} label=\"专业\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入专业\"\r\n          defaultValue={tempdata.cname}\r\n          value={tempdata.cname}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"classno\"} label=\"班级\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入班级\"\r\n          defaultValue={tempdata.classno}\r\n          value={tempdata.classno}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseNo\"} label=\"课程号\">\r\n        <Input readOnly defaultValue={tempdata.courseNo} />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseName\"} label=\"课程名称\">\r\n        <Input defaultValue={tempdata.courseName} />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseType\"} label=\"课程类型\">\r\n        <Select defaultValue={tempdata.courseType}>\r\n          <Option value=\"公共课\">公共课</Option>\r\n          <Option value=\"选修课\">选修课</Option>\r\n          <Option value=\"必修课\">必修课</Option>\r\n          <Option value=\"辅修课\">辅修课</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"grade\"} label=\"成绩\">\r\n        <InputNumber style={{ width: 435 }} defaultValue={tempdata.grade} />\r\n      </Form.Item>\r\n      <Form.Item name={\"credit\"} label=\"学分\">\r\n        <Select defaultValue={tempdata.credit}>\r\n          <Option value=\"1.0\">1.0</Option>\r\n          <Option value=\"1.5\">1.5</Option>\r\n          <Option value=\"2.0\">2.0</Option>\r\n          <Option value=\"2.5\">2.5</Option>\r\n          <Option value=\"3.0\">3.0</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"cheat\"} label=\"作弊\">\r\n        <Select defaultValue={tempdata.cheat}>\r\n          <Option value=\"作弊\">作弊</Option>\r\n          <Option value=\"正常\">正常</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp; &nbsp; &nbsp;\r\n        {cookicedata[0].realName === tempdata.courseteacher ? (\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<LikeOutlined />}\r\n            onClick={btnclick}\r\n            htmlType=\"submit\"\r\n          >\r\n            信息提交\r\n          </Button>\r\n        ) : (\r\n          <Button disabled>信息提交</Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  {\r\n    UpdateGradeData,\r\n    TeacherUserid,\r\n  }\r\n)(UpdateGrade);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\index.tsx",["379","380","381","382","383","384","385","386","387"],"import {\r\n  Table,\r\n  Button,\r\n  Space,\r\n  Tooltip,\r\n  Select,\r\n  Tag,\r\n  Typography,\r\n  Form,\r\n} from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  AdminUserid,\r\n  getAdminGradeCountInfo,\r\n  getGradeCheat,\r\n} from \"@/redux/actions\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport { RedoOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport DepartmentEditTableModal from \"./components/model\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\nlet flag = 0;\r\nconst DepartmentGradeTable = (props) => {\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const cookiceuserid = props.cooikeuserid;\r\n\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        sex: cookiceuserid[i].sex,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        department: cookiceuserid[i].department,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        diploma: cookiceuserid[i].diploma,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n      });\r\n      props.getAdminGradeCountInfo(cookicedata[0]);\r\n    }\r\n  }\r\n  useEffect(() => {}, []);\r\n  const actionRef = useRef<ActionType>();\r\n\r\n  const formatedata = props.gradecount;\r\n  const [classnodata, setclassnodata] = useState();\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        classno: formatedata[i].classno,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        countcredit: formatedata[i].countcredit,\r\n        averagecountcredit: formatedata[i].averagecountcredit,\r\n        department: formatedata[i].department,\r\n        count: formatedata[i].count,\r\n        average: formatedata[i].average,\r\n        countgpa: formatedata[i].countgpa,\r\n        averagegpa: formatedata[i].averagegpa,\r\n        flaggrade: formatedata[i].flaggrade,\r\n        flagcheat: formatedata[i].flagcheat,\r\n      });\r\n    }\r\n  }\r\n  const [state, setState]: any = useState({\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  });\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setState({ filteredInfo: null });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  const setAgeSort = () => {\r\n    setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"countgpa\",\r\n      },\r\n    });\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n\r\n  let { sortedInfo, filteredInfo } = state;\r\n  sortedInfo = sortedInfo || {};\r\n  filteredInfo = filteredInfo || {};\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n\r\n      filteredValue: filteredInfo.username || null,\r\n      onFilter: (value, record) => record.username.includes(value),\r\n      //   sorter: (a, b) => a.username.length - b.username.length,\r\n      sortOrder: sortedInfo.columnKey === \"username\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      key: \"realName\",\r\n\r\n      filteredValue: filteredInfo.realName || null,\r\n      onFilter: (value, record) => record.realName.includes(value),\r\n      //   sorter: (a, b) => a.realName.length - b.realName.length,\r\n      sortOrder: sortedInfo.columnKey === \"realName\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n\r\n      filteredValue: filteredInfo.department || null,\r\n      onFilter: (value, record) => record.department.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"department\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"专业\",\r\n      dataIndex: \"cname\",\r\n      key: \"cname\",\r\n      filters: [\r\n        {\r\n          text: originData[0]?.cname,\r\n          value: originData[0]?.cname,\r\n        },\r\n        {\r\n          text: originData[1]?.cname,\r\n          value: originData[1]?.cname,\r\n        },\r\n        {\r\n          text: originData[2]?.cname,\r\n          value: originData[2]?.cname,\r\n        },\r\n        {\r\n          text: originData[3]?.cname,\r\n          value: originData[3]?.cname,\r\n        },\r\n        {\r\n          text: originData[4]?.cname,\r\n          value: originData[4]?.cname,\r\n        },\r\n        {\r\n          text: originData[5]?.cname,\r\n          value: originData[5]?.cname,\r\n        },\r\n      ],\r\n      filteredValue: filteredInfo.cname || null,\r\n      onFilter: (value, record) => record.cname.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"cname\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      key: \"classno\",\r\n      filters: [\r\n        {\r\n          text: originData[0]?.classno,\r\n          value: originData[0]?.classno,\r\n        },\r\n        {\r\n          text: originData[1]?.classno,\r\n          value: originData[1]?.classno,\r\n        },\r\n        {\r\n          text: originData[2]?.classno,\r\n          value: originData[2]?.classno,\r\n        },\r\n        {\r\n          text: originData[3]?.classno,\r\n          value: originData[3]?.classno,\r\n        },\r\n        {\r\n          text: originData[4]?.classno,\r\n          value: originData[4]?.classno,\r\n        },\r\n        {\r\n          text: originData[5]?.classno,\r\n          value: originData[5]?.classno,\r\n        },\r\n      ],\r\n      filteredValue: filteredInfo.classno || null,\r\n      onFilter: (value, record) => record.classno.includes(value),\r\n      //   sorter: (a, b) => a.classno.length - b.classno.length,\r\n      sortOrder: sortedInfo.columnKey === \"classno\" && sortedInfo.order,\r\n    },\r\n\r\n    {\r\n      title: \"总学分\",\r\n      dataIndex: \"countcredit\",\r\n      key: \"countcredit\",\r\n      //   sorter: (a, b) => a.countcredit - b.countcredit,\r\n      sortOrder: sortedInfo.columnKey === \"countcredit\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"平均学分\",\r\n      dataIndex: \"averagecountcredit\",\r\n      key: \"averagecountcredit\",\r\n      sorter: (a, b) => a.averagecountcredit - b.averagecountcredit,\r\n      sortOrder:\r\n        sortedInfo.columnKey === \"averagecountcredit\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"总分\",\r\n      dataIndex: \"count\",\r\n      key: \"count\",\r\n      sorter: (a, b) => a.count - b.count,\r\n      sortOrder: sortedInfo.columnKey === \"count\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"平均分\",\r\n      dataIndex: \"average\",\r\n      key: \"average\",\r\n      sorter: (a, b) => a.average - b.average,\r\n      sortOrder: sortedInfo.columnKey === \"average\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"总绩点\",\r\n      dataIndex: \"countgpa\",\r\n      key: \"countgpa\",\r\n      //   sorter: (a, b) => a.countgpa - b.countgpa,\r\n      sortOrder: sortedInfo.columnKey === \"countgpa\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"平均绩点\",\r\n      dataIndex: \"averagegpa\",\r\n      key: \"averagegpa\",\r\n      sorter: (a, b) => a.averagegpa - b.averagegpa,\r\n      sortOrder: sortedInfo.columnKey === \"averagegpa\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      align: \"center\",\r\n      render: (_, record) => (\r\n        <Typography.Link>\r\n          <DepartmentEditTableModal\r\n            clickdata={record}\r\n          ></DepartmentEditTableModal>\r\n        </Typography.Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.getGradeCheat(e);\r\n\r\n    flag = 1;\r\n  };\r\n  const search = props.gradecount;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        classno: search[i].classno,\r\n        department: search[i].department,\r\n        countcredit: search[i].countcredit,\r\n        averagecountcredit: search[i].averagecountcredit,\r\n\r\n        count: search[i].count,\r\n        average: search[i].average,\r\n        countgpa: search[i].countgpa,\r\n        averagegpa: search[i].averagegpa,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ProTable\r\n        columns={columns}\r\n        dataSource={flag === 0 ? [...originData] : [...searchdata]}\r\n        onChange={handleChange}\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"classno\"} label=\"班级\">\r\n              <Select placeholder=\"请选择班级\">\r\n                <Option value={originData[0]?.classno}>\r\n                  {originData[0]?.classno}\r\n                </Option>\r\n                <Option value={originData[1]?.classno}>\r\n                  {originData[1]?.classno}\r\n                </Option>\r\n                <Option value={originData[2]?.classno}>\r\n                  {originData[2]?.classno}\r\n                </Option>\r\n                <Option value={originData[3]?.classno}>\r\n                  {originData[3]?.classno}\r\n                </Option>\r\n                <Option value={originData[4]?.classno}>\r\n                  {originData[4]?.classno}\r\n                </Option>\r\n                <Option value={originData[5]?.classno}>\r\n                  {originData[5]?.classno}\r\n                </Option>\r\n                <Option value={originData[6]?.classno}>\r\n                  {originData[6]?.classno}\r\n                </Option>\r\n                <Option value={originData[7]?.classno}>\r\n                  {originData[7]?.classno}\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"flaggrade\"} label=\"不及格\">\r\n              <Select placeholder=\"请选择\">\r\n                <Option value=\"不及格\">不及格</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"flagcheat\"} label=\"作弊\">\r\n              <Select placeholder=\"请选择\">\r\n                <Option value=\"作弊\">作弊</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        headerTitle=\"学院成绩信息表\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n    cooikeuserid: state.cooikeuserid,\r\n    gradecount: state.gradecount,\r\n  }),\r\n  //  函数确定\r\n  { AdminUserid, getAdminGradeCountInfo, getGradeCheat }\r\n)(DepartmentGradeTable);\r\n",["388","389"],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\model\\index.tsx",["390","391"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { ReadOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport DepartmentGradeTableEdit from \"../gradesearch\";\r\nconst DepartmentEditTableModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<ReadOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"成绩详情表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <DepartmentGradeTableEdit\r\n          clickdata={clickdata}\r\n        ></DepartmentGradeTableEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(DepartmentEditTableModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\gradesearch\\index.tsx",["392","393","394","395","396","397","398","399","400","401","402"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n  department: \"\",\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst DepartmentGradeTableEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { clickdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(clickdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (clickdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          department: formatedata[i].department,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    department: originData[0]?.department,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"成绩详情表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(DepartmentGradeTableEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\personinfo\\index.tsx",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LikeOutlined, ReloadOutlined } from \"@ant-design/icons\";\r\nimport { updateAdmin, AdminUserid } from \"@/redux/actions\";\r\nconst cookicedata: any = [];\r\nfunction AdminPerson(props) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n\r\n    duty: \"\",\r\n    IDcard: \"\",\r\n\r\n    department: \"\",\r\n\r\n    phone: \"\",\r\n    eMail: \"\",\r\n\r\n    diploma: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        sex: cookiceuserid[i].sex,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        department: cookiceuserid[i].department,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        diploma: cookiceuserid[i].diploma,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n      });\r\n    }\r\n  }\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      username: (state.username = cookicedata[0].username),\r\n      realName: (state.realName = cookicedata[0].realName),\r\n      affiliation: (state.affiliation = cookicedata[0].affiliation),\r\n      age: (state.age = cookicedata[0].age),\r\n      sex: (state.sex = cookicedata[0].sex),\r\n      password: (state.password = values.password || cookicedata[0].password),\r\n      diploma: (state.diploma = cookicedata[0].diploma),\r\n      duty: (state.duty = values.duty || cookicedata[0].duty),\r\n\r\n      phone: (state.phone = values.phone || cookicedata[0].phone),\r\n      IDcard: (state.IDcard = cookicedata[0].IDcard),\r\n      eMail: (state.eMail = values.eMail || cookicedata[0].eMail),\r\n      department: (state.department = cookicedata[0].department),\r\n    });\r\n    console.log(\"values\", state);\r\n\r\n    props.updateAdmin(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item name={\"username\"} label=\"学号\">\r\n            {cookicedata[0]?.username}\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            {cookicedata[0]?.realName}\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\">\r\n            {cookicedata[0]?.sex}\r\n          </Form.Item>\r\n          <Form.Item name={\"password\"} label=\"密码\">\r\n            <Input defaultValue={cookicedata[0]?.password} />\r\n          </Form.Item>\r\n          <Form.Item name={\"affiliation\"} label=\"政治面貌\">\r\n            {cookicedata[0]?.affiliation === \"DY\" ? \"党员\" : \"群众\"}\r\n          </Form.Item>\r\n          <Form.Item name={\"age\"} label=\"年龄\">\r\n            {cookicedata[0]?.age}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"department\"} label=\"学院\" hasFeedback>\r\n            {cookicedata[0]?.department}\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            {cookicedata[0]?.diploma}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"IDcard\"} label=\"身份证号码\">\r\n            {cookicedata[0]?.IDcard}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"phone\"} label=\"手机号码\">\r\n            <Input defaultValue={cookicedata[0]?.phone} />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\">\r\n            <Input defaultValue={cookicedata[0]?.eMail} />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              defaultValue={cookicedata[0]?.duty}\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={refresh}\r\n              icon={<LikeOutlined />}\r\n              style={{ marginRight: 30 }}\r\n            >\r\n              信息更改\r\n            </Button>\r\n            <Button type=\"primary\" icon={<ReloadOutlined />} onClick={refresh}>\r\n              刷新\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  {\r\n    updateAdmin,\r\n    AdminUserid,\r\n  }\r\n)(AdminPerson);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\index.tsx",["418","419","420","421","422","423","424","425","426","427","428"],"D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\model\\index.tsx",["429","430"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { ReadOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport PersonalGradeTableEdit from \"../gradesearch\";\r\nconst PersonalEditTableModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<ReadOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n \r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <PersonalGradeTableEdit clickdata={clickdata}></PersonalGradeTableEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(PersonalEditTableModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\gradesearch\\index.tsx",["431","432","433","434","435","436","437","438","439","440","441"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst PersonalGradeTableEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { clickdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(clickdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (clickdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n          courseteacher: formatedata[i].courseteacher,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"授课老师\",\r\n      dataIndex: \"courseteacher\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            {/* <Tag color=\"green\">平均绩点:{averagegpa}</Tag> */}\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            {/* <Tag color=\"green\">平均学分:{averagecountcredit}</Tag> */}\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"课程成绩信息表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(PersonalGradeTableEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personanl\\index.tsx",["442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LikeOutlined, ReloadOutlined } from \"@ant-design/icons\";\r\nimport { updateStudent, StudentUserid } from \"@/redux/actions\";\r\nconst cookicedata: any = [];\r\nfunction StudentPerson(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    realName: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n    affiliation: \"\",\r\n    IDcard: \"\",\r\n    cname: \"\",\r\n    classno: \"\",\r\n    years: \"\",\r\n    term: \"\",\r\n    department: \"\",\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    address: \"\",\r\n    recommend: \"\",\r\n  });\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.StudentUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        realName: cookiceuserid[i].realName,\r\n        age: cookiceuserid[i].age,\r\n        sex: cookiceuserid[i].sex,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        cname: cookiceuserid[i].cname,\r\n        classno: cookiceuserid[i].classno,\r\n        years: cookiceuserid[i].years,\r\n        term: cookiceuserid[i].term,\r\n        department: cookiceuserid[i].department,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        address: cookiceuserid[i].address,\r\n        recommend: cookiceuserid[i].recommend,\r\n      });\r\n    }\r\n  }\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      username: (state.username = cookicedata[0].username),\r\n      password: (state.password = values.password || cookicedata[0].password),\r\n      realName: (state.realName = cookicedata[0].realName),\r\n      sex: (state.sex = cookicedata[0].sex),\r\n      affiliation: (state.affiliation = cookicedata[0].affiliation),\r\n      IDcard: (state.IDcard = cookicedata[0].IDcard),\r\n      cname: (state.cname = cookicedata[0].cname),\r\n      classno: (state.classno = cookicedata[0].classno),\r\n      years: (state.years = cookicedata[0].years),\r\n      age: (state.age = cookicedata[0].age),\r\n      term: (state.term = cookicedata[0].term),\r\n      department: (state.department = cookicedata[0].department),\r\n      nation: (state.nation = cookicedata[0].nation),\r\n      region: (state.region = values.region || cookicedata[0].region),\r\n      phone: (state.phone = values.phone || cookicedata[0].phone),\r\n      eMail: (state.eMail = values.eMail || cookicedata[0].eMail),\r\n      street: (state.street = values.street || cookicedata[0].street),\r\n      address: (state.address = values.address || cookicedata[0].address),\r\n      recommend: (state.recommend =\r\n        values.recommend || cookicedata[0].recommend),\r\n    });\r\n    console.log(\"values\", state);\r\n\r\n    props.updateStudent(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{\r\n            margin: \"17px auto\",\r\n          }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item name={\"username\"} label=\"学号\">\r\n            {cookicedata[0].username}\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            {cookicedata[0].realName}\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\">\r\n            {cookicedata[0].sex}\r\n          </Form.Item>\r\n          <Form.Item name={\"password\"} label=\"密码\">\r\n            <Input defaultValue={cookicedata[0].password} />\r\n          </Form.Item>\r\n          <Form.Item name={\"affiliation\"} label=\"政治面貌\">\r\n            {cookicedata[0].affiliation === \"DY\" ? \"党员\" : \"群众\"}\r\n          </Form.Item>\r\n          <Form.Item name={\"age\"} label=\"年龄\">\r\n            {cookicedata[0].age}\r\n          </Form.Item>\r\n          <Form.Item name={\"years\"} label=\"学年\">\r\n            {cookicedata[0].years}\r\n          </Form.Item>\r\n          <Form.Item name={\"term\"} label=\"学期\">\r\n            {cookicedata[0].term}\r\n          </Form.Item>\r\n          <Form.Item name={\"department\"} label=\"学院\" hasFeedback>\r\n            {cookicedata[0].department}\r\n          </Form.Item>\r\n          <Form.Item name={\"cname\"} label=\"专业名\" hasFeedback>\r\n            {cookicedata[0].cname}\r\n          </Form.Item>\r\n          <Form.Item name={\"classno\"} label=\"班级\" hasFeedback>\r\n            {cookicedata[0].classno}\r\n          </Form.Item>\r\n          <Form.Item name={\"nation\"} label=\"民族\" hasFeedback>\r\n            {cookicedata[0].nation}\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select\r\n                  style={{ width: 310 }}\r\n                  defaultValue={cookicedata[0].region}\r\n                >\r\n                  <Option value=\"河北\">河北</Option>\r\n                  <Option value=\"山西\">山西</Option>\r\n                  <Option value=\"辽宁\">辽宁</Option>\r\n                  <Option value=\"吉林\">吉林</Option>\r\n                  <Option value=\"黑龙江\">黑龙江</Option>\r\n                  <Option value=\"江苏\">江苏</Option>\r\n                  <Option value=\"浙江\">浙江</Option>\r\n                  <Option value=\"安徽\">安徽</Option>\r\n                  <Option value=\"福建\">福建</Option>\r\n                  <Option value=\"江西\">江西</Option>\r\n                  <Option value=\"山东\">山东</Option>\r\n                  <Option value=\"河南\">河南</Option>\r\n                  <Option value=\"湖北\">湖北</Option>\r\n                  <Option value=\"湖南\">湖南</Option>\r\n                  <Option value=\"广东\">广东</Option>\r\n                  <Option value=\"海南\">海南</Option>\r\n                  <Option value=\"四川\">四川</Option>\r\n                  <Option value=\"贵州\">贵州</Option>\r\n                  <Option value=\"内蒙古\">内蒙古</Option>\r\n                  <Option value=\"广西壮族\">广西壮族</Option>\r\n                  <Option value=\"西藏\">西藏</Option>\r\n                  <Option value=\"宁夏回族\">宁夏回族</Option>\r\n                  <Option value=\"新疆维吾尔\">新疆维吾尔</Option>\r\n                  <Option value=\"北京\">北京</Option>\r\n                  <Option value=\"天津\">天津</Option>\r\n                  <Option value=\"上海\">上海</Option>\r\n                  <Option value=\"重庆\">重庆</Option>\r\n                  <Option value=\"香港\">香港</Option>\r\n                  <Option value=\"澳门\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name={\"street\"} label=\"地区\" noStyle>\r\n                <Input\r\n                  style={{ width: \"50%\" }}\r\n                  defaultValue={cookicedata[0].street}\r\n                />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item name={\"phone\"} label=\"手机号码\">\r\n            <Input defaultValue={cookicedata[0].phone} />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\">\r\n            <Input defaultValue={cookicedata[0].eMail} />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"address\"} label=\"家庭地址\">\r\n            <Input.TextArea\r\n              defaultValue={cookicedata[0].address}\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"recommend\"} label=\"个人简介\">\r\n            <Input.TextArea\r\n              defaultValue={cookicedata[0].recommend}\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              icon={<LikeOutlined />}\r\n              onClick={refresh}\r\n              style={{ marginRight: 30 }}\r\n            >\r\n              信息更改\r\n            </Button>\r\n            <Button type=\"primary\" icon={<ReloadOutlined />} onClick={refresh}>\r\n              刷新\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  {\r\n    updateStudent,\r\n    StudentUserid,\r\n  }\r\n)(StudentPerson);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\index.tsx",["456","457","458","459","460","461","462","463","464","465","466"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Tooltip,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { AdminSearchstu, AdminUserid, addstudent } from \"@/redux/actions\";\r\nimport DeleteStudentModel from \"@/containers/teacher/components/deletestudentmodel\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport EditStudentModal from \"./components/modal\";\r\nimport {\r\n  RequestData,\r\n  UseFetchDataAction,\r\n} from \"@ant-design/pro-table/lib/typing\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\n\r\nlet flag = 0;\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst Studentinfomation = (props) => {\r\n  const actionRef = useRef<ActionType>();\r\n  const [form] = Form.useForm();\r\n  const [data, setData]: any[] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      console.log(\"cookiceuserid\", cookiceuserid);\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    props.addstudent({ id: userid });\r\n  }, []);\r\n\r\n  const formatedata = props.stuSearch;\r\n  const { Option } = Select;\r\n  const temp = formatedata.length;\r\n\r\n  console.log(\"props\", formatedata);\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        department: formatedata[i].department,\r\n        cname: formatedata[i].cname,\r\n        classno: formatedata[i].classno,\r\n        sex: formatedata[i].sex,\r\n        phone: formatedata[i].phone,\r\n        years: formatedata[i].years,\r\n        term: formatedata[i].term,\r\n      });\r\n    }\r\n  }\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      username: \"\",\r\n      realName: \"\",\r\n      cname: \"\",\r\n      classno: \"\",\r\n      phone: \"\",\r\n\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  const [tempsearch, settempsearch]: any = useState([]);\r\n\r\n  const [tempdata, settempdata] = useState();\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学年\",\r\n      dataIndex: \"years\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学期\",\r\n      dataIndex: \"term\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"sex\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"电话\",\r\n      dataIndex: \"phone\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      align: \"center\",\r\n      render: (_, record) => {\r\n        return (\r\n          <Typography.Link\r\n            onClick={() => {\r\n              settempdata(record);\r\n            }}\r\n          >\r\n            <DeleteStudentModel tempdata={tempdata}></DeleteStudentModel>\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.AdminSearchstu(e);\r\n    flag = 1;\r\n  };\r\n\r\n  const search = props.stuSearch;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        department: search[i].department,\r\n        classno: search[i].classno,\r\n        sex: search[i].sex,\r\n        phone: search[i].phone,\r\n        years: search[i].years,\r\n        term: search[i].term,\r\n      });\r\n    }\r\n  }\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        actionRef={actionRef}\r\n        search={false}\r\n        options={{ fullScreen: true, reload: false }}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered={true}\r\n        headerTitle=\"学生信息表\"\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"years\"} label=\"学年\">\r\n              <Select placeholder=\"请选择学年\">\r\n                <Option value=\"20202021\">2020-2021</Option>\r\n                <Option value=\"20192020\">2019-2020</Option>\r\n                <Option value=\"20182019\">2018-2019</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"term\"} label=\"学期\">\r\n              <Select placeholder=\"请选择学期\">\r\n                <Option value=\"第一学期\">第一学期</Option>\r\n                <Option value=\"第二学期\">第二学期</Option>\r\n                <Option value=\"第三学期\">第三学期</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"department\"} label=\"学院\">\r\n              <Select placeholder=\"请选择学院\">\r\n                <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n                <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n                <Option value=\"机械工程学院\">机械工程学院</Option>\r\n                <Option value=\"交通学院\">交通学院</Option>\r\n                <Option value=\"化学工程学院\">化学工程学院</Option>\r\n                <Option value=\"材料学院\">材料学院</Option>\r\n                <Option value=\"理学院\">理学院</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <EditStudentModal></EditStudentModal>,\r\n\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={\r\n          flag === 0\r\n            ? [...data]\r\n            : [...searchdata] || (flag === 2 && [...tempsearch])\r\n        }\r\n        columns={columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n    stuSearch: state.stuSearch,\r\n  }),\r\n\r\n  { AdminSearchstu, AdminUserid, addstudent }\r\n)(Studentinfomation);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\modal\\index.tsx",["467","468"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport StudentRegister from \"../addstu\";\r\nconst EditStudentModal = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<FormOutlined />} onClick={showModal}>\r\n        注册\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"注册\"\r\n        width={600}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <StudentRegister></StudentRegister>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditStudentModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\addstu\\index.tsx",["469","470","471","472","473","474","475","476"],"//教职工注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { studentRegister } from \"@/redux/actions\";\r\nfunction StudentRegister(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"student\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: state.type,\r\n    });\r\n    props.studentRegister(state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  console.log(\"props\", props);\r\n\r\n  const { msg } = props.user;\r\n  console.log(\"msg\", msg);\r\n\r\n  return (\r\n    <Form onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"学号不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          // onChange={val => { this.handleChange('username', val) }}\r\n          placeholder=\"学号\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n          // onChange={val => { this.handleChange('password', val) }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password2\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"确认密码\"\r\n          // onChange={val => { this.handleChange('password2', val) }}\r\n        />\r\n      </Form.Item>\r\n      {JSON.stringify(msg) != \"{}\" && msg !== \"用户名或密码不正确!\" ? (\r\n        <span className=\"errorMsg\">{msg}</span>\r\n      ) : (\r\n        JSON.stringify(msg) != \"{}\" && (\r\n          <span style={{ color: \"green\", fontWeight: \"bold\" }}>录入成功！</span>\r\n        )\r\n      )}\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          注册\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { studentRegister }\r\n)(StudentRegister);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\index.tsx",["477","478","479","480","481","482","483","484","485","486","487"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Tooltip,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { AdminSearchtea, AdminUserid, addTeacher } from \"@/redux/actions\";\r\nimport DeleteTeacherModel from \"./components/deleteteacher\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport EditTeacherModal from \"./components/modal\";\r\nimport {\r\n  RequestData,\r\n  UseFetchDataAction,\r\n} from \"@ant-design/pro-table/lib/typing\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\n\r\nlet flag = 0;\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst Teacherinfomation = (props) => {\r\n  const actionRef = useRef<ActionType>();\r\n  const [form] = Form.useForm();\r\n  const [data, setData]: any[] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      console.log(\"cookiceuserid\", cookiceuserid);\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    props.addTeacher({ id: userid });\r\n  }, []);\r\n\r\n  const formatedata = props.stuSearchtea;\r\n  const { Option } = Select;\r\n  const temp = formatedata.length;\r\n\r\n  console.log(\"props\", formatedata);\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        username: formatedata[i].username,\r\n        password: formatedata[i].password,\r\n        type: formatedata[i].type,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        sex: formatedata[i].sex,\r\n        department: formatedata[i].department,\r\n        affiliation: formatedata[i].affiliation,\r\n        age: formatedata[i].age,\r\n        duty: formatedata[i].duty,\r\n        IDcard: formatedata[i].IDcard,\r\n        nation: formatedata[i].nation,\r\n        region: formatedata[i].region,\r\n        phone: formatedata[i].phone,\r\n        eMail: formatedata[i].eMail,\r\n        street: formatedata[i].street,\r\n        diploma: formatedata[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      username: \"\",\r\n      realName: \"\",\r\n      cname: \"\",\r\n      classno: \"\",\r\n      phone: \"\",\r\n\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  const [tempsearch, settempsearch]: any = useState([]);\r\n\r\n  const [tempdata, settempdata] = useState();\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"教工号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"sex\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n    },\r\n    // {\r\n    //   title: \"专业名\",\r\n    //   dataIndex: \"cname\",\r\n    //   width: \"7%\",\r\n    // },\r\n\r\n    {\r\n      title: \"电话\",\r\n      dataIndex: \"phone\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"邮件\",\r\n      dataIndex: \"eMail\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      align: \"center\",\r\n      render: (_, record) => {\r\n        return (\r\n          <Typography.Link\r\n            onClick={() => {\r\n              settempdata(record);\r\n            }}\r\n          >\r\n            <DeleteTeacherModel tempdata={tempdata}></DeleteTeacherModel>\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.AdminSearchtea(e);\r\n    flag = 1;\r\n  };\r\n\r\n  const search = props.stuSearch;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        realName: search[i].realName,\r\n        username: search[i].username,\r\n        password: search[i].password,\r\n        type: search[i].realName,\r\n        cname: search[i].cname,\r\n        sex: search[i].sex,\r\n        department: search[i].department,\r\n        affiliation: search[i].affiliation,\r\n        age: search[i].age,\r\n        duty: search[i].duty,\r\n        IDcard: search[i].IDcard,\r\n        nation: search[i].nation,\r\n        region: search[i].region,\r\n        phone: search[i].phone,\r\n        eMail: search[i].eMail,\r\n        street: search[i].street,\r\n        diploma: search[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        actionRef={actionRef}\r\n        search={false}\r\n        options={{ fullScreen: true, reload: false }}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered={true}\r\n        headerTitle=\"教师信息表\"\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"cname\"} label=\"专业名\">\r\n              <Select placeholder=\"请选择专业\">\r\n                <Option value={formatedata[0]?.cname}>\r\n                  {formatedata[0]?.cname}\r\n                </Option>\r\n                <Option value={formatedata[1]?.cname}>\r\n                  {formatedata[1]?.cname}\r\n                </Option>\r\n                <Option value={formatedata[2]?.cname}>\r\n                  {formatedata[2]?.cname}\r\n                </Option>\r\n                <Option value={formatedata[3]?.cname}>\r\n                  {formatedata[3]?.cname}\r\n                </Option>\r\n                <Option value={formatedata[4]?.cname}>\r\n                  {formatedata[4]?.cname}\r\n                </Option>\r\n                <Option value={formatedata[5]?.cname}>\r\n                  {formatedata[5]?.cname}\r\n                </Option>\r\n                <Option value={formatedata[6]?.cname}>\r\n                  {formatedata[6]?.cname}\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <EditTeacherModal></EditTeacherModal>,\r\n\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={\r\n          flag === 0\r\n            ? [...data]\r\n            : [...searchdata] || (flag === 2 && [...tempsearch])\r\n        }\r\n        columns={columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n    stuSearch: state.stuSearch,\r\n    stuSearchtea: state.stuSearchtea,\r\n  }),\r\n\r\n  { AdminSearchtea, AdminUserid, addTeacher }\r\n)(Teacherinfomation);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\modal\\index.tsx",["488","489"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport TeacherRegister from \"../addtea\";\r\nconst EditTeacherModal = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<FormOutlined />} onClick={showModal}>\r\n        注册\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"注册\"\r\n        width={600}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <TeacherRegister></TeacherRegister>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditTeacherModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\addtea\\index.tsx",["490","491","492","493","494","495","496","497"],"//教职工注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { teacherRegister } from \"@/redux/actions\";\r\nfunction TeacherRegister(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"teacher\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: state.type,\r\n    });\r\n    props.teacherRegister(state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  console.log(\"props\", props);\r\n\r\n  const { msg } = props.user;\r\n  console.log(\"msg\", msg);\r\n\r\n  return (\r\n    <Form onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"账号不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          // onChange={val => { this.handleChange('username', val) }}\r\n          placeholder=\"账号\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n          // onChange={val => { this.handleChange('password', val) }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password2\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"确认密码\"\r\n          // onChange={val => { this.handleChange('password2', val) }}\r\n        />\r\n      </Form.Item>\r\n      {JSON.stringify(msg) != \"{}\" && msg !== \"用户名或密码不正确!\" ? (\r\n        <span className=\"errorMsg\">{msg}</span>\r\n      ) : (\r\n        JSON.stringify(msg) != \"{}\" && (\r\n          <span style={{ color: \"green\", fontWeight: \"bold\" }}>录入成功！</span>\r\n        )\r\n      )}\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          注册\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { teacherRegister }\r\n)(TeacherRegister);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\deleteteacher\\index.tsx",["498","499","500"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteTeacher } from \"@/redux/actions\";\r\nimport { DeleteOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nconst DeleteTeacherModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    props.DeleteTeacher(tempdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  }),\r\n  //  函数确定\r\n  { DeleteTeacher }\r\n)(DeleteTeacherModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\course\\index.tsx",["501","502","503","504","505","506","507","508","509","510","511","512"],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\index.tsx",["513","514","515","516","517","518","519","520","521","522","523","524","525"],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\components\\deleteadmin\\index.tsx",["526","527","528"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteAdmin } from \"@/redux/actions\";\r\nimport { DeleteOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nconst DeleteTeacherModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n  console.log(\"zzzzzzzzzzzzzzzz\", tempdata);\r\n\r\n  const handleOk = () => {\r\n    props.DeleteAdmin(tempdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  }),\r\n  //  函数确定\r\n  { DeleteAdmin }\r\n)(DeleteTeacherModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\components\\modal\\index.tsx",["529","530"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport AdminRegister from \"../addadmin\";\r\nconst EditAdminModal = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<FormOutlined />} onClick={showModal}>\r\n        注册\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"注册\"\r\n        width={600}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <AdminRegister></AdminRegister>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditAdminModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addadmin\\components\\addadmin\\index.tsx",["531","532","533","534","535","536","537"],"//教职工注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { adminRegister } from \"@/redux/actions\";\r\nfunction AdminRegister(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"admin\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: state.type,\r\n    });\r\n    props.adminRegister(state);\r\n  };\r\n  // 点击注册调用\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"账号不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          // onChange={val => { this.handleChange('username', val) }}\r\n          placeholder=\"账号\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n          // onChange={val => { this.handleChange('password', val) }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password2\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"确认密码\"\r\n          // onChange={val => { this.handleChange('password2', val) }}\r\n        />\r\n      </Form.Item>\r\n      {JSON.stringify(msg) != \"{}\" && msg !== \"用户名或密码不正确!\" ? (\r\n        <span className=\"errorMsg\">{msg}</span>\r\n      ) : (\r\n        JSON.stringify(msg) != \"{}\" && (\r\n          <span style={{ color: \"green\", fontWeight: \"bold\" }}>录入成功！</span>\r\n        )\r\n      )}\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          注册\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminRegister }\r\n)(AdminRegister);\r\n",{"ruleId":"538","severity":1,"message":"539","line":5,"column":37,"nodeType":"540","messageId":"541","endLine":5,"endColumn":45},{"ruleId":"542","replacedBy":"543"},{"ruleId":"544","replacedBy":"545"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"544","replacedBy":"545"},{"ruleId":"546","severity":1,"message":"547","line":2,"column":27,"nodeType":"540","messageId":"541","endLine":2,"endColumn":36},{"ruleId":"548","severity":1,"message":"549","line":168,"column":19,"nodeType":"550","endLine":168,"endColumn":40},{"ruleId":"548","severity":1,"message":"549","line":285,"column":19,"nodeType":"550","endLine":285,"endColumn":40},{"ruleId":"548","severity":1,"message":"549","line":402,"column":19,"nodeType":"550","endLine":402,"endColumn":40},{"ruleId":"548","severity":1,"message":"549","line":519,"column":19,"nodeType":"550","endLine":519,"endColumn":40},{"ruleId":"546","severity":1,"message":"551","line":36,"column":10,"nodeType":"540","messageId":"541","endLine":36,"endColumn":19},{"ruleId":"552","severity":1,"message":"553","line":76,"column":15,"nodeType":"554","messageId":"555","endLine":76,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":77,"column":14,"nodeType":"554","messageId":"555","endLine":77,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":78,"column":10,"nodeType":"554","messageId":"555","endLine":78,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":80,"column":14,"nodeType":"554","messageId":"555","endLine":80,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":81,"column":15,"nodeType":"554","messageId":"555","endLine":81,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":84,"column":14,"nodeType":"554","messageId":"555","endLine":84,"endColumn":45},{"ruleId":"546","severity":1,"message":"556","line":3,"column":8,"nodeType":"540","messageId":"541","endLine":3,"endColumn":14},{"ruleId":"552","severity":1,"message":"553","line":94,"column":15,"nodeType":"554","messageId":"555","endLine":94,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":95,"column":14,"nodeType":"554","messageId":"555","endLine":95,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":96,"column":10,"nodeType":"554","messageId":"555","endLine":96,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":98,"column":14,"nodeType":"554","messageId":"555","endLine":98,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":99,"column":15,"nodeType":"554","messageId":"555","endLine":99,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":102,"column":14,"nodeType":"554","messageId":"555","endLine":102,"endColumn":45},{"ruleId":"552","severity":1,"message":"553","line":54,"column":15,"nodeType":"554","messageId":"555","endLine":54,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":55,"column":14,"nodeType":"554","messageId":"555","endLine":55,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":56,"column":10,"nodeType":"554","messageId":"555","endLine":56,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":58,"column":14,"nodeType":"554","messageId":"555","endLine":58,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":59,"column":15,"nodeType":"554","messageId":"555","endLine":59,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":62,"column":14,"nodeType":"554","messageId":"555","endLine":62,"endColumn":45},{"ruleId":"546","severity":1,"message":"557","line":20,"column":33,"nodeType":"540","messageId":"541","endLine":20,"endColumn":39},{"ruleId":"546","severity":1,"message":"558","line":21,"column":7,"nodeType":"540","messageId":"541","endLine":21,"endColumn":23},{"ruleId":"546","severity":1,"message":"559","line":33,"column":9,"nodeType":"540","messageId":"541","endLine":33,"endColumn":23},{"ruleId":"560","severity":1,"message":"561","line":54,"column":6,"nodeType":"562","endLine":54,"endColumn":8,"suggestions":"563"},{"ruleId":"564","severity":1,"message":"565","line":65,"column":24,"nodeType":"566","messageId":"567","endLine":65,"endColumn":26},{"ruleId":"546","severity":1,"message":"568","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":19},{"ruleId":"546","severity":1,"message":"569","line":7,"column":3,"nodeType":"540","messageId":"541","endLine":7,"endColumn":17},{"ruleId":"546","severity":1,"message":"570","line":13,"column":8,"nodeType":"540","messageId":"541","endLine":13,"endColumn":28},{"ruleId":"546","severity":1,"message":"571","line":22,"column":8,"nodeType":"540","messageId":"541","endLine":22,"endColumn":15},{"ruleId":"546","severity":1,"message":"557","line":24,"column":33,"nodeType":"540","messageId":"541","endLine":24,"endColumn":39},{"ruleId":"560","severity":1,"message":"572","line":30,"column":6,"nodeType":"562","endLine":30,"endColumn":8,"suggestions":"573"},{"ruleId":"546","severity":1,"message":"559","line":68,"column":9,"nodeType":"540","messageId":"541","endLine":68,"endColumn":23},{"ruleId":"564","severity":1,"message":"565","line":84,"column":40,"nodeType":"566","messageId":"567","endLine":84,"endColumn":42},{"ruleId":"546","severity":1,"message":"574","line":11,"column":27,"nodeType":"540","messageId":"541","endLine":11,"endColumn":32},{"ruleId":"560","severity":1,"message":"561","line":30,"column":6,"nodeType":"562","endLine":30,"endColumn":8,"suggestions":"575"},{"ruleId":"564","severity":1,"message":"565","line":46,"column":24,"nodeType":"566","messageId":"567","endLine":46,"endColumn":26},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"560","severity":1,"message":"572","line":72,"column":6,"nodeType":"562","endLine":72,"endColumn":8,"suggestions":"578"},{"ruleId":"560","severity":1,"message":"572","line":103,"column":6,"nodeType":"562","endLine":103,"endColumn":8,"suggestions":"579"},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"581","line":11,"column":3,"nodeType":"540","messageId":"541","endLine":11,"endColumn":6},{"ruleId":"546","severity":1,"message":"556","line":20,"column":8,"nodeType":"540","messageId":"541","endLine":20,"endColumn":14},{"ruleId":"546","severity":1,"message":"582","line":22,"column":24,"nodeType":"540","messageId":"541","endLine":22,"endColumn":36},{"ruleId":"546","severity":1,"message":"583","line":82,"column":9,"nodeType":"540","messageId":"541","endLine":82,"endColumn":13},{"ruleId":"560","severity":1,"message":"584","line":98,"column":6,"nodeType":"562","endLine":98,"endColumn":8,"suggestions":"585"},{"ruleId":"560","severity":1,"message":"572","line":102,"column":6,"nodeType":"562","endLine":102,"endColumn":8,"suggestions":"586"},{"ruleId":"548","severity":1,"message":"587","line":263,"column":13,"nodeType":"550","endLine":269,"endColumn":14},{"ruleId":"588","severity":1,"message":"589","line":264,"column":20,"nodeType":"554","messageId":"590","endLine":264,"endColumn":34},{"ruleId":"548","severity":1,"message":"549","line":273,"column":15,"nodeType":"550","endLine":273,"endColumn":18},{"ruleId":"564","severity":1,"message":"565","line":313,"column":19,"nodeType":"566","messageId":"567","endLine":313,"endColumn":21},{"ruleId":"546","severity":1,"message":"591","line":344,"column":10,"nodeType":"540","messageId":"541","endLine":344,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"539","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":18},{"ruleId":"546","severity":1,"message":"592","line":6,"column":44,"nodeType":"540","messageId":"541","endLine":6,"endColumn":49},{"ruleId":"546","severity":1,"message":"556","line":7,"column":8,"nodeType":"540","messageId":"541","endLine":7,"endColumn":14},{"ruleId":"546","severity":1,"message":"593","line":8,"column":8,"nodeType":"540","messageId":"541","endLine":8,"endColumn":17},{"ruleId":"546","severity":1,"message":"594","line":9,"column":8,"nodeType":"540","messageId":"541","endLine":9,"endColumn":18},{"ruleId":"546","severity":1,"message":"551","line":28,"column":10,"nodeType":"540","messageId":"541","endLine":28,"endColumn":19},{"ruleId":"546","severity":1,"message":"595","line":28,"column":21,"nodeType":"540","messageId":"541","endLine":28,"endColumn":34},{"ruleId":"546","severity":1,"message":"596","line":29,"column":10,"nodeType":"540","messageId":"541","endLine":29,"endColumn":23},{"ruleId":"546","severity":1,"message":"597","line":29,"column":25,"nodeType":"540","messageId":"541","endLine":29,"endColumn":41},{"ruleId":"552","severity":1,"message":"553","line":60,"column":15,"nodeType":"554","messageId":"555","endLine":60,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":61,"column":14,"nodeType":"554","messageId":"555","endLine":61,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":62,"column":10,"nodeType":"554","messageId":"555","endLine":62,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":64,"column":14,"nodeType":"554","messageId":"555","endLine":64,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":65,"column":15,"nodeType":"554","messageId":"555","endLine":65,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":68,"column":14,"nodeType":"554","messageId":"555","endLine":68,"endColumn":45},{"ruleId":"546","severity":1,"message":"598","line":2,"column":10,"nodeType":"540","messageId":"541","endLine":2,"endColumn":15},{"ruleId":"546","severity":1,"message":"599","line":5,"column":26,"nodeType":"540","messageId":"541","endLine":5,"endColumn":51},{"ruleId":"546","severity":1,"message":"591","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":24},{"ruleId":"546","severity":1,"message":"598","line":2,"column":10,"nodeType":"540","messageId":"541","endLine":2,"endColumn":15},{"ruleId":"546","severity":1,"message":"591","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":24},{"ruleId":"546","severity":1,"message":"576","line":2,"column":3,"nodeType":"540","messageId":"541","endLine":2,"endColumn":8},{"ruleId":"546","severity":1,"message":"600","line":4,"column":3,"nodeType":"540","messageId":"541","endLine":4,"endColumn":8},{"ruleId":"546","severity":1,"message":"581","line":7,"column":3,"nodeType":"540","messageId":"541","endLine":7,"endColumn":6},{"ruleId":"560","severity":1,"message":"572","line":31,"column":6,"nodeType":"562","endLine":31,"endColumn":8,"suggestions":"601"},{"ruleId":"560","severity":1,"message":"602","line":62,"column":6,"nodeType":"562","endLine":62,"endColumn":8,"suggestions":"603"},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"604","line":8,"column":3,"nodeType":"540","messageId":"541","endLine":8,"endColumn":13},{"ruleId":"546","severity":1,"message":"571","line":16,"column":8,"nodeType":"540","messageId":"541","endLine":16,"endColumn":15},{"ruleId":"546","severity":1,"message":"583","line":78,"column":9,"nodeType":"540","messageId":"541","endLine":78,"endColumn":13},{"ruleId":"560","severity":1,"message":"605","line":93,"column":6,"nodeType":"562","endLine":93,"endColumn":8,"suggestions":"606"},{"ruleId":"546","severity":1,"message":"607","line":122,"column":9,"nodeType":"540","messageId":"541","endLine":122,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":248,"column":19,"nodeType":"566","messageId":"567","endLine":248,"endColumn":21},{"ruleId":"546","severity":1,"message":"591","line":282,"column":10,"nodeType":"540","messageId":"541","endLine":282,"endColumn":24},{"ruleId":"546","severity":1,"message":"608","line":284,"column":9,"nodeType":"540","messageId":"541","endLine":284,"endColumn":21},{"ruleId":"546","severity":1,"message":"609","line":290,"column":9,"nodeType":"540","messageId":"541","endLine":290,"endColumn":17},{"ruleId":"546","severity":1,"message":"539","line":6,"column":10,"nodeType":"540","messageId":"541","endLine":6,"endColumn":18},{"ruleId":"546","severity":1,"message":"610","line":7,"column":23,"nodeType":"540","messageId":"541","endLine":7,"endColumn":34},{"ruleId":"546","severity":1,"message":"592","line":7,"column":44,"nodeType":"540","messageId":"541","endLine":7,"endColumn":49},{"ruleId":"560","severity":1,"message":"572","line":42,"column":6,"nodeType":"562","endLine":42,"endColumn":8,"suggestions":"611"},{"ruleId":"552","severity":1,"message":"553","line":104,"column":15,"nodeType":"554","messageId":"555","endLine":104,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":105,"column":14,"nodeType":"554","messageId":"555","endLine":105,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":106,"column":10,"nodeType":"554","messageId":"555","endLine":106,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":108,"column":14,"nodeType":"554","messageId":"555","endLine":108,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":109,"column":15,"nodeType":"554","messageId":"555","endLine":109,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":112,"column":14,"nodeType":"554","messageId":"555","endLine":112,"endColumn":45},{"ruleId":"546","severity":1,"message":"539","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":18},{"ruleId":"546","severity":1,"message":"592","line":6,"column":44,"nodeType":"540","messageId":"541","endLine":6,"endColumn":49},{"ruleId":"560","severity":1,"message":"572","line":28,"column":6,"nodeType":"562","endLine":28,"endColumn":8,"suggestions":"612"},{"ruleId":"552","severity":1,"message":"553","line":84,"column":15,"nodeType":"554","messageId":"555","endLine":84,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":85,"column":14,"nodeType":"554","messageId":"555","endLine":85,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":86,"column":10,"nodeType":"554","messageId":"555","endLine":86,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":88,"column":14,"nodeType":"554","messageId":"555","endLine":88,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":89,"column":15,"nodeType":"554","messageId":"555","endLine":89,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":92,"column":14,"nodeType":"554","messageId":"555","endLine":92,"endColumn":45},{"ruleId":"546","severity":1,"message":"576","line":2,"column":3,"nodeType":"540","messageId":"541","endLine":2,"endColumn":8},{"ruleId":"546","severity":1,"message":"600","line":4,"column":3,"nodeType":"540","messageId":"541","endLine":4,"endColumn":8},{"ruleId":"546","severity":1,"message":"581","line":7,"column":3,"nodeType":"540","messageId":"541","endLine":7,"endColumn":6},{"ruleId":"560","severity":1,"message":"572","line":31,"column":6,"nodeType":"562","endLine":31,"endColumn":8,"suggestions":"613"},{"ruleId":"546","severity":1,"message":"614","line":62,"column":10,"nodeType":"540","messageId":"541","endLine":62,"endColumn":21},{"ruleId":"546","severity":1,"message":"615","line":62,"column":23,"nodeType":"540","messageId":"541","endLine":62,"endColumn":37},{"ruleId":"546","severity":1,"message":"616","line":97,"column":9,"nodeType":"540","messageId":"541","endLine":97,"endColumn":21},{"ruleId":"546","severity":1,"message":"617","line":101,"column":9,"nodeType":"540","messageId":"541","endLine":101,"endColumn":17},{"ruleId":"546","severity":1,"message":"618","line":108,"column":9,"nodeType":"540","messageId":"541","endLine":108,"endColumn":19},{"ruleId":"542","replacedBy":"619"},{"ruleId":"544","replacedBy":"620"},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"604","line":8,"column":3,"nodeType":"540","messageId":"541","endLine":8,"endColumn":13},{"ruleId":"546","severity":1,"message":"571","line":16,"column":8,"nodeType":"540","messageId":"541","endLine":16,"endColumn":15},{"ruleId":"546","severity":1,"message":"583","line":79,"column":9,"nodeType":"540","messageId":"541","endLine":79,"endColumn":13},{"ruleId":"560","severity":1,"message":"605","line":94,"column":6,"nodeType":"562","endLine":94,"endColumn":8,"suggestions":"621"},{"ruleId":"546","severity":1,"message":"607","line":123,"column":9,"nodeType":"540","messageId":"541","endLine":123,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":249,"column":19,"nodeType":"566","messageId":"567","endLine":249,"endColumn":21},{"ruleId":"546","severity":1,"message":"591","line":284,"column":10,"nodeType":"540","messageId":"541","endLine":284,"endColumn":24},{"ruleId":"546","severity":1,"message":"608","line":286,"column":9,"nodeType":"540","messageId":"541","endLine":286,"endColumn":21},{"ruleId":"546","severity":1,"message":"609","line":292,"column":9,"nodeType":"540","messageId":"541","endLine":292,"endColumn":17},{"ruleId":"546","severity":1,"message":"539","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":18},{"ruleId":"546","severity":1,"message":"610","line":6,"column":23,"nodeType":"540","messageId":"541","endLine":6,"endColumn":34},{"ruleId":"546","severity":1,"message":"592","line":6,"column":44,"nodeType":"540","messageId":"541","endLine":6,"endColumn":49},{"ruleId":"560","severity":1,"message":"572","line":34,"column":6,"nodeType":"562","endLine":34,"endColumn":8,"suggestions":"622"},{"ruleId":"546","severity":1,"message":"551","line":57,"column":10,"nodeType":"540","messageId":"541","endLine":57,"endColumn":19},{"ruleId":"546","severity":1,"message":"595","line":57,"column":21,"nodeType":"540","messageId":"541","endLine":57,"endColumn":34},{"ruleId":"546","severity":1,"message":"596","line":58,"column":10,"nodeType":"540","messageId":"541","endLine":58,"endColumn":23},{"ruleId":"546","severity":1,"message":"597","line":58,"column":25,"nodeType":"540","messageId":"541","endLine":58,"endColumn":41},{"ruleId":"546","severity":1,"message":"623","line":84,"column":11,"nodeType":"540","messageId":"541","endLine":84,"endColumn":17},{"ruleId":"552","severity":1,"message":"553","line":86,"column":15,"nodeType":"554","messageId":"555","endLine":86,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":87,"column":14,"nodeType":"554","messageId":"555","endLine":87,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":88,"column":10,"nodeType":"554","messageId":"555","endLine":88,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":90,"column":14,"nodeType":"554","messageId":"555","endLine":90,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":91,"column":15,"nodeType":"554","messageId":"555","endLine":91,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":94,"column":14,"nodeType":"554","messageId":"555","endLine":94,"endColumn":45},{"ruleId":"546","severity":1,"message":"576","line":2,"column":3,"nodeType":"540","messageId":"541","endLine":2,"endColumn":8},{"ruleId":"546","severity":1,"message":"600","line":4,"column":3,"nodeType":"540","messageId":"541","endLine":4,"endColumn":8},{"ruleId":"546","severity":1,"message":"581","line":7,"column":3,"nodeType":"540","messageId":"541","endLine":7,"endColumn":6},{"ruleId":"546","severity":1,"message":"624","line":9,"column":3,"nodeType":"540","messageId":"541","endLine":9,"endColumn":7},{"ruleId":"546","severity":1,"message":"625","line":21,"column":24,"nodeType":"540","messageId":"541","endLine":21,"endColumn":38},{"ruleId":"560","severity":1,"message":"572","line":31,"column":6,"nodeType":"562","endLine":31,"endColumn":8,"suggestions":"626"},{"ruleId":"546","severity":1,"message":"623","line":32,"column":11,"nodeType":"540","messageId":"541","endLine":32,"endColumn":17},{"ruleId":"546","severity":1,"message":"616","line":102,"column":9,"nodeType":"540","messageId":"541","endLine":102,"endColumn":21},{"ruleId":"546","severity":1,"message":"617","line":106,"column":9,"nodeType":"540","messageId":"541","endLine":106,"endColumn":17},{"ruleId":"546","severity":1,"message":"618","line":113,"column":9,"nodeType":"540","messageId":"541","endLine":113,"endColumn":19},{"ruleId":"546","severity":1,"message":"627","line":253,"column":9,"nodeType":"540","messageId":"541","endLine":253,"endColumn":17},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"604","line":8,"column":3,"nodeType":"540","messageId":"541","endLine":8,"endColumn":13},{"ruleId":"546","severity":1,"message":"571","line":16,"column":8,"nodeType":"540","messageId":"541","endLine":16,"endColumn":15},{"ruleId":"546","severity":1,"message":"583","line":78,"column":9,"nodeType":"540","messageId":"541","endLine":78,"endColumn":13},{"ruleId":"560","severity":1,"message":"605","line":93,"column":6,"nodeType":"562","endLine":93,"endColumn":8,"suggestions":"628"},{"ruleId":"546","severity":1,"message":"607","line":122,"column":9,"nodeType":"540","messageId":"541","endLine":122,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":248,"column":19,"nodeType":"566","messageId":"567","endLine":248,"endColumn":21},{"ruleId":"546","severity":1,"message":"591","line":282,"column":10,"nodeType":"540","messageId":"541","endLine":282,"endColumn":24},{"ruleId":"546","severity":1,"message":"608","line":284,"column":9,"nodeType":"540","messageId":"541","endLine":284,"endColumn":21},{"ruleId":"546","severity":1,"message":"609","line":290,"column":9,"nodeType":"540","messageId":"541","endLine":290,"endColumn":17},{"ruleId":"546","severity":1,"message":"539","line":5,"column":10,"nodeType":"540","messageId":"541","endLine":5,"endColumn":18},{"ruleId":"546","severity":1,"message":"610","line":6,"column":23,"nodeType":"540","messageId":"541","endLine":6,"endColumn":34},{"ruleId":"546","severity":1,"message":"592","line":6,"column":44,"nodeType":"540","messageId":"541","endLine":6,"endColumn":49},{"ruleId":"560","severity":1,"message":"572","line":37,"column":6,"nodeType":"562","endLine":37,"endColumn":8,"suggestions":"629"},{"ruleId":"546","severity":1,"message":"551","line":66,"column":10,"nodeType":"540","messageId":"541","endLine":66,"endColumn":19},{"ruleId":"546","severity":1,"message":"595","line":66,"column":21,"nodeType":"540","messageId":"541","endLine":66,"endColumn":34},{"ruleId":"546","severity":1,"message":"596","line":67,"column":10,"nodeType":"540","messageId":"541","endLine":67,"endColumn":23},{"ruleId":"546","severity":1,"message":"597","line":67,"column":25,"nodeType":"540","messageId":"541","endLine":67,"endColumn":41},{"ruleId":"552","severity":1,"message":"553","line":102,"column":15,"nodeType":"554","messageId":"555","endLine":102,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":103,"column":14,"nodeType":"554","messageId":"555","endLine":103,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":104,"column":10,"nodeType":"554","messageId":"555","endLine":104,"endColumn":27},{"ruleId":"552","severity":1,"message":"553","line":106,"column":14,"nodeType":"554","messageId":"555","endLine":106,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":107,"column":15,"nodeType":"554","messageId":"555","endLine":107,"endColumn":34},{"ruleId":"552","severity":1,"message":"553","line":110,"column":14,"nodeType":"554","messageId":"555","endLine":110,"endColumn":45},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"571","line":21,"column":8,"nodeType":"540","messageId":"541","endLine":21,"endColumn":15},{"ruleId":"546","severity":1,"message":"630","line":24,"column":3,"nodeType":"540","messageId":"541","endLine":24,"endColumn":14},{"ruleId":"546","severity":1,"message":"631","line":25,"column":3,"nodeType":"540","messageId":"541","endLine":25,"endColumn":21},{"ruleId":"546","severity":1,"message":"632","line":70,"column":16,"nodeType":"540","messageId":"541","endLine":70,"endColumn":23},{"ruleId":"546","severity":1,"message":"633","line":73,"column":9,"nodeType":"540","messageId":"541","endLine":73,"endColumn":18},{"ruleId":"560","severity":1,"message":"572","line":77,"column":6,"nodeType":"562","endLine":77,"endColumn":8,"suggestions":"634"},{"ruleId":"560","severity":1,"message":"572","line":106,"column":6,"nodeType":"562","endLine":106,"endColumn":8,"suggestions":"635"},{"ruleId":"546","severity":1,"message":"583","line":129,"column":9,"nodeType":"540","messageId":"541","endLine":129,"endColumn":13},{"ruleId":"546","severity":1,"message":"636","line":145,"column":22,"nodeType":"540","messageId":"541","endLine":145,"endColumn":35},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"547","line":2,"column":27,"nodeType":"540","messageId":"541","endLine":2,"endColumn":36},{"ruleId":"546","severity":1,"message":"637","line":5,"column":8,"nodeType":"540","messageId":"541","endLine":5,"endColumn":10},{"ruleId":"546","severity":1,"message":"592","line":6,"column":31,"nodeType":"540","messageId":"541","endLine":6,"endColumn":36},{"ruleId":"546","severity":1,"message":"638","line":8,"column":8,"nodeType":"540","messageId":"541","endLine":8,"endColumn":14},{"ruleId":"546","severity":1,"message":"639","line":9,"column":8,"nodeType":"540","messageId":"541","endLine":9,"endColumn":14},{"ruleId":"546","severity":1,"message":"539","line":14,"column":10,"nodeType":"540","messageId":"541","endLine":14,"endColumn":18},{"ruleId":"564","severity":1,"message":"565","line":110,"column":28,"nodeType":"566","messageId":"567","endLine":110,"endColumn":30},{"ruleId":"564","severity":1,"message":"565","line":113,"column":29,"nodeType":"566","messageId":"567","endLine":113,"endColumn":31},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"571","line":21,"column":8,"nodeType":"540","messageId":"541","endLine":21,"endColumn":15},{"ruleId":"546","severity":1,"message":"630","line":24,"column":3,"nodeType":"540","messageId":"541","endLine":24,"endColumn":14},{"ruleId":"546","severity":1,"message":"631","line":25,"column":3,"nodeType":"540","messageId":"541","endLine":25,"endColumn":21},{"ruleId":"546","severity":1,"message":"632","line":70,"column":16,"nodeType":"540","messageId":"541","endLine":70,"endColumn":23},{"ruleId":"546","severity":1,"message":"633","line":73,"column":9,"nodeType":"540","messageId":"541","endLine":73,"endColumn":18},{"ruleId":"560","severity":1,"message":"572","line":77,"column":6,"nodeType":"562","endLine":77,"endColumn":8,"suggestions":"640"},{"ruleId":"560","severity":1,"message":"572","line":106,"column":6,"nodeType":"562","endLine":106,"endColumn":8,"suggestions":"641"},{"ruleId":"546","severity":1,"message":"583","line":137,"column":9,"nodeType":"540","messageId":"541","endLine":137,"endColumn":13},{"ruleId":"546","severity":1,"message":"636","line":153,"column":22,"nodeType":"540","messageId":"541","endLine":153,"endColumn":35},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"547","line":2,"column":27,"nodeType":"540","messageId":"541","endLine":2,"endColumn":36},{"ruleId":"546","severity":1,"message":"637","line":5,"column":8,"nodeType":"540","messageId":"541","endLine":5,"endColumn":10},{"ruleId":"546","severity":1,"message":"592","line":6,"column":31,"nodeType":"540","messageId":"541","endLine":6,"endColumn":36},{"ruleId":"546","severity":1,"message":"638","line":8,"column":8,"nodeType":"540","messageId":"541","endLine":8,"endColumn":14},{"ruleId":"546","severity":1,"message":"639","line":9,"column":8,"nodeType":"540","messageId":"541","endLine":9,"endColumn":14},{"ruleId":"546","severity":1,"message":"539","line":14,"column":10,"nodeType":"540","messageId":"541","endLine":14,"endColumn":18},{"ruleId":"564","severity":1,"message":"565","line":110,"column":28,"nodeType":"566","messageId":"567","endLine":110,"endColumn":30},{"ruleId":"564","severity":1,"message":"565","line":113,"column":29,"nodeType":"566","messageId":"567","endLine":113,"endColumn":31},{"ruleId":"546","severity":1,"message":"598","line":2,"column":10,"nodeType":"540","messageId":"541","endLine":2,"endColumn":15},{"ruleId":"546","severity":1,"message":"599","line":5,"column":26,"nodeType":"540","messageId":"541","endLine":5,"endColumn":51},{"ruleId":"546","severity":1,"message":"591","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":24},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"604","line":8,"column":3,"nodeType":"540","messageId":"541","endLine":8,"endColumn":13},{"ruleId":"546","severity":1,"message":"581","line":11,"column":3,"nodeType":"540","messageId":"541","endLine":11,"endColumn":6},{"ruleId":"546","severity":1,"message":"571","line":17,"column":8,"nodeType":"540","messageId":"541","endLine":17,"endColumn":15},{"ruleId":"546","severity":1,"message":"642","line":68,"column":11,"nodeType":"540","messageId":"541","endLine":68,"endColumn":20},{"ruleId":"546","severity":1,"message":"583","line":69,"column":9,"nodeType":"540","messageId":"541","endLine":69,"endColumn":13},{"ruleId":"560","severity":1,"message":"572","line":86,"column":6,"nodeType":"562","endLine":86,"endColumn":8,"suggestions":"643"},{"ruleId":"560","severity":1,"message":"602","line":117,"column":6,"nodeType":"562","endLine":117,"endColumn":8,"suggestions":"644"},{"ruleId":"546","severity":1,"message":"607","line":137,"column":9,"nodeType":"540","messageId":"541","endLine":137,"endColumn":13},{"ruleId":"546","severity":1,"message":"591","line":250,"column":10,"nodeType":"540","messageId":"541","endLine":250,"endColumn":24},{"ruleId":"546","severity":1,"message":"608","line":252,"column":9,"nodeType":"540","messageId":"541","endLine":252,"endColumn":21},{"ruleId":"546","severity":1,"message":"576","line":3,"column":3,"nodeType":"540","messageId":"541","endLine":3,"endColumn":8},{"ruleId":"546","severity":1,"message":"577","line":6,"column":3,"nodeType":"540","messageId":"541","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"625","line":13,"column":10,"nodeType":"540","messageId":"541","endLine":13,"endColumn":24},{"ruleId":"546","severity":1,"message":"571","line":21,"column":8,"nodeType":"540","messageId":"541","endLine":21,"endColumn":15},{"ruleId":"546","severity":1,"message":"630","line":24,"column":3,"nodeType":"540","messageId":"541","endLine":24,"endColumn":14},{"ruleId":"546","severity":1,"message":"631","line":25,"column":3,"nodeType":"540","messageId":"541","endLine":25,"endColumn":21},{"ruleId":"546","severity":1,"message":"632","line":70,"column":16,"nodeType":"540","messageId":"541","endLine":70,"endColumn":23},{"ruleId":"546","severity":1,"message":"633","line":73,"column":9,"nodeType":"540","messageId":"541","endLine":73,"endColumn":18},{"ruleId":"560","severity":1,"message":"572","line":77,"column":6,"nodeType":"562","endLine":77,"endColumn":8,"suggestions":"645"},{"ruleId":"560","severity":1,"message":"602","line":106,"column":6,"nodeType":"562","endLine":106,"endColumn":8,"suggestions":"646"},{"ruleId":"546","severity":1,"message":"623","line":109,"column":11,"nodeType":"540","messageId":"541","endLine":109,"endColumn":17},{"ruleId":"546","severity":1,"message":"583","line":137,"column":9,"nodeType":"540","messageId":"541","endLine":137,"endColumn":13},{"ruleId":"546","severity":1,"message":"636","line":153,"column":22,"nodeType":"540","messageId":"541","endLine":153,"endColumn":35},{"ruleId":"546","severity":1,"message":"598","line":2,"column":10,"nodeType":"540","messageId":"541","endLine":2,"endColumn":15},{"ruleId":"546","severity":1,"message":"599","line":5,"column":26,"nodeType":"540","messageId":"541","endLine":5,"endColumn":51},{"ruleId":"546","severity":1,"message":"591","line":7,"column":10,"nodeType":"540","messageId":"541","endLine":7,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":4,"column":17,"nodeType":"540","messageId":"541","endLine":4,"endColumn":26},{"ruleId":"546","severity":1,"message":"580","line":4,"column":28,"nodeType":"540","messageId":"541","endLine":4,"endColumn":34},{"ruleId":"546","severity":1,"message":"547","line":2,"column":27,"nodeType":"540","messageId":"541","endLine":2,"endColumn":36},{"ruleId":"546","severity":1,"message":"637","line":5,"column":8,"nodeType":"540","messageId":"541","endLine":5,"endColumn":10},{"ruleId":"546","severity":1,"message":"592","line":6,"column":31,"nodeType":"540","messageId":"541","endLine":6,"endColumn":36},{"ruleId":"546","severity":1,"message":"638","line":8,"column":8,"nodeType":"540","messageId":"541","endLine":8,"endColumn":14},{"ruleId":"546","severity":1,"message":"639","line":9,"column":8,"nodeType":"540","messageId":"541","endLine":9,"endColumn":14},{"ruleId":"564","severity":1,"message":"565","line":110,"column":28,"nodeType":"566","messageId":"567","endLine":110,"endColumn":30},{"ruleId":"564","severity":1,"message":"565","line":113,"column":29,"nodeType":"566","messageId":"567","endLine":113,"endColumn":31},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["647"],"no-negated-in-lhs",["648"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'seletdata' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'styles' is defined but never used.","'Footer' is assigned a value but never used.","'cookicedata' is assigned a value but never used.","'btnclearcookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.","ArrayExpression",["649"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CalendarOutlined' is defined but never used.","'MediumOutlined' is defined but never used.","'DepartmentGradeTable' is defined but never used.","'request' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'userid'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["650"],"'Sider' is assigned a value but never used.",["651"],"'Table' is defined but never used.","'Popconfirm' is defined but never used.",["652"],["653"],"'useRef' is defined but never used.","'Tag' is defined but never used.","'FormOutlined' is defined but never used.","'edit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'tempdata'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["654"],["655"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'isModalVisible' is assigned a value but never used.","'Radio' is defined but never used.","'GlobalTab' is defined but never used.","'selfStyles' is defined but never used.","'setselectdata' is assigned a value but never used.","'deparmentdata' is assigned a value but never used.","'setdeparmentdata' is assigned a value but never used.","'Modal' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'Space' is defined but never used.",["656"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["657"],"'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'clickdata' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["658"],"'save' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'InputNumber' is defined but never used.",["659"],["660"],["661"],"'classnodata' is assigned a value but never used.","'setclassnodata' is assigned a value but never used.","'clearFilters' is assigned a value but never used.","'clearAll' is assigned a value but never used.","'setAgeSort' is assigned a value but never used.",["647"],["648"],["662"],["663"],"'Option' is assigned a value but never used.","'Form' is defined but never used.","'SearchOutlined' is defined but never used.",["664"],"'onFinish' is assigned a value but never used.",["665"],["666"],"'RequestData' is defined but never used.","'UseFetchDataAction' is defined but never used.","'setData' is assigned a value but never used.","'isEditing' is assigned a value but never used.",["667"],["668"],"'settempsearch' is assigned a value but never used.","'bj' is defined but never used.","'Header' is defined but never used.","'Fonter' is defined but never used.",["669"],["670"],"'clickdata' is assigned a value but never used.",["671"],["672"],["673"],["674"],"no-global-assign","no-unsafe-negation",{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"675","fix":"679"},{"desc":"677","fix":"680"},{"desc":"677","fix":"681"},{"desc":"682","fix":"683"},{"desc":"677","fix":"684"},{"desc":"677","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"677","fix":"690"},{"desc":"677","fix":"691"},{"desc":"677","fix":"692"},{"desc":"688","fix":"693"},{"desc":"677","fix":"694"},{"desc":"677","fix":"695"},{"desc":"688","fix":"696"},{"desc":"677","fix":"697"},{"desc":"677","fix":"698"},{"desc":"677","fix":"699"},{"desc":"677","fix":"700"},{"desc":"677","fix":"701"},{"desc":"677","fix":"702"},{"desc":"686","fix":"703"},{"desc":"677","fix":"704"},{"desc":"686","fix":"705"},"Update the dependencies array to be: [userid]",{"range":"706","text":"707"},"Update the dependencies array to be: [props, userid]",{"range":"708","text":"709"},{"range":"710","text":"707"},{"range":"711","text":"709"},{"range":"712","text":"709"},"Update the dependencies array to be: [props, tempdata]",{"range":"713","text":"714"},{"range":"715","text":"709"},{"range":"716","text":"709"},"Update the dependencies array to be: [props]",{"range":"717","text":"718"},"Update the dependencies array to be: [clickdata, props]",{"range":"719","text":"720"},{"range":"721","text":"709"},{"range":"722","text":"709"},{"range":"723","text":"709"},{"range":"724","text":"720"},{"range":"725","text":"709"},{"range":"726","text":"709"},{"range":"727","text":"720"},{"range":"728","text":"709"},{"range":"729","text":"709"},{"range":"730","text":"709"},{"range":"731","text":"709"},{"range":"732","text":"709"},{"range":"733","text":"709"},{"range":"734","text":"718"},{"range":"735","text":"709"},{"range":"736","text":"718"},[1465,1467],"[userid]",[994,996],"[props, userid]",[960,962],[1640,1642],[2757,2759],[2244,2246],"[props, tempdata]",[2359,2361],[825,827],[1971,1973],"[props]",[1984,1986],"[clickdata, props]",[1007,1009],[817,819],[846,848],[2013,2015],[897,899],[844,846],[1992,1994],[1018,1020],[1941,1943],[2849,2851],[1917,1919],[2825,2827],[1957,1959],[3051,3053],[1909,1911],[2801,2803]]