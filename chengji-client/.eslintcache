[{"D:\\web\\bysj\\chengji-client\\src\\index.js":"1","D:\\web\\bysj\\chengji-client\\src\\containers\\register\\register.jsx":"2","D:\\web\\bysj\\chengji-client\\src\\containers\\login\\login.jsx":"3","D:\\web\\bysj\\chengji-client\\src\\containers\\main\\main.jsx":"4","D:\\web\\bysj\\chengji-client\\src\\redux\\store.js":"5","D:\\web\\bysj\\chengji-client\\src\\redux\\reducers.js":"6","D:\\web\\bysj\\chengji-client\\src\\redux\\actions.js":"7","D:\\web\\bysj\\chengji-client\\src\\components\\fonter\\fonter.jsx":"8","D:\\web\\bysj\\chengji-client\\src\\components\\header\\header.jsx":"9","D:\\web\\bysj\\chengji-client\\src\\redux\\action-types.js":"10","D:\\web\\bysj\\chengji-client\\src\\api\\index.js":"11","D:\\web\\bysj\\chengji-client\\src\\api\\ajax.js":"12","D:\\web\\bysj\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.jsx":"13","D:\\web\\bysj\\chengji-client\\src\\containers\\studentInfo\\studentInfo.jsx":"14","D:\\web\\bysj\\chengji-client\\src\\utils\\index.js":"15"},{"size":812,"mtime":1607249206941,"results":"16","hashOfConfig":"17"},{"size":5224,"mtime":1608364276208,"results":"18","hashOfConfig":"17"},{"size":4076,"mtime":1608364320986,"results":"19","hashOfConfig":"17"},{"size":538,"mtime":1608555763139,"results":"20","hashOfConfig":"17"},{"size":406,"mtime":1607843281209,"results":"21","hashOfConfig":"17"},{"size":874,"mtime":1608726227864,"results":"22","hashOfConfig":"17"},{"size":2441,"mtime":1608553716756,"results":"23","hashOfConfig":"17"},{"size":307,"mtime":1607308876839,"results":"24","hashOfConfig":"17"},{"size":307,"mtime":1607308779886,"results":"25","hashOfConfig":"17"},{"size":191,"mtime":1608359987634,"results":"26","hashOfConfig":"17"},{"size":402,"mtime":1607691099659,"results":"27","hashOfConfig":"17"},{"size":735,"mtime":1607834046065,"results":"28","hashOfConfig":"17"},{"size":1046,"mtime":1608364760326,"results":"29","hashOfConfig":"17"},{"size":3319,"mtime":1608729625656,"results":"30","hashOfConfig":"17"},{"size":332,"mtime":1608726089452,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xg5pzh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":3,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\web\\bysj\\chengji-client\\src\\index.js",[],["67","68"],"D:\\web\\bysj\\chengji-client\\src\\containers\\register\\register.jsx",["69"],"//注册的路由组件\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header\";\r\nimport Fonter from \"@/components/fonter/fonter\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { register } from \"@/redux/actions\";\r\nclass Register extends React.Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"\", // 用户类型名称   dashen/laoban\r\n  };\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    this.setState({\r\n      username: (this.username = values.username),\r\n      password: (this.username = values.password),\r\n      password2: (this.username = values.password2),\r\n      type: (this.username = values.type),\r\n    });\r\n    //调用redux action中的register方法，判断是否可以注册\r\n    this.props.register(this.state);\r\n    console.log(\" this.props\", this.props.register);\r\n    console.log(\"state\", this.state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  toLogin = () => {\r\n    this.props.history.replace(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { msg, redirectTo } = this.props.user;\r\n    // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* 头部部分 */}\r\n        <Header></Header>\r\n        {/* 中间主体部分 */}\r\n        <div className={bj.logo}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n              <div className=\"login-form-title\">用户注册</div>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                // onChange={val => { this.handleChange('username', val) }}\r\n                placeholder=\"学号/职工号/教工号\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n                // onChange={val => { this.handleChange('password', val) }}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password2\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请重新输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"确认密码\"\r\n                // onChange={val => { this.handleChange('password2', val) }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"type\" label=\" 用户类型：\">\r\n              <Radio.Group>\r\n                <Radio value=\"student\">学生</Radio>\r\n                <Radio value=\"teacher\">老师</Radio>\r\n                <Radio value=\"administer\">教务员</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n              </Button>\r\n              <p className=\"login-form-registerLogin\">\r\n                已有账号？ <a onClick={this.toLogin}>点击登入!</a>\r\n              </p>\r\n              <div className=\"login-form-registerLogin\">\r\n                <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n                学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {/* 底部部分 */}\r\n        <Fonter></Fonter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state) => ({ user: state.user }),\r\n  //  函数确定\r\n  { register }\r\n)(Register);\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\login\\login.jsx",["70","71"],"//注册的路由组件\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header\";\r\nimport Fonter from \"@/components/fonter/fonter\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"@/redux/actions\";\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  };\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    this.setState({\r\n      username: (this.username = values.username),\r\n      password: (this.username = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n    this.props.login(this.state);\r\n  };\r\n  // 点击登入调用\r\n\r\n  toRegister = () => {\r\n    this.props.history.replace(\"/register\");\r\n  };\r\n\r\n  render() {\r\n    const { msg, redirectTo } = this.props.user;\r\n    // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* 头部部分 */}\r\n        <Header></Header>\r\n        {/* 中间主体部分 */}\r\n        <div className={bj.logo}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n              <div className=\"login-form-title\">用户登入</div>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                // onChange={val => { this.handleChange('username', val) }}\r\n                placeholder=\"学号/职工号/教工号\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n                // onChange={val => { this.handleChange('password', val) }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n              </Button>\r\n              <p className=\"login-form-registerLogin\">\r\n                没有账号？ <a onClick={this.toRegister}>点击注册!</a>\r\n              </p>\r\n              <div className=\"login-form-registerLogin\">\r\n                <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n                学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {/* 底部部分 */}\r\n        <Fonter></Fonter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state) => ({ user: state.user }),\r\n  //  函数确定\r\n  { login }\r\n)(Login);\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\main\\main.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\store.js",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\reducers.js",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\actions.js",[],"D:\\web\\bysj\\chengji-client\\src\\components\\fonter\\fonter.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\components\\header\\header.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\action-types.js",[],"D:\\web\\bysj\\chengji-client\\src\\api\\index.js",[],"D:\\web\\bysj\\chengji-client\\src\\api\\ajax.js",[],"D:\\web\\bysj\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.jsx",["72"],"//学生信息完善的路由容器组件\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import HeaderSelector from \"../../components/header-selector/header-selector\";\r\n// import { updateUser } from \"../../redux/actions\";\r\n\r\nexport default class TeacherInfo extends React.Component {\r\n  state = {\r\n    header: \"\",\r\n    post: \"\",\r\n    info: \"\",\r\n  };\r\n\r\n  // 更新header状态\r\n  setHeader = (header) => {\r\n    this.setState({\r\n      header,\r\n    });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    // debugger\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    this.props.updateUser(this.state);\r\n  };\r\n\r\n  render() {\r\n    // 如果信息已经完善, 自动重定向到对应主界面\r\n    const { header, type } = this.props.user;\r\n    if (header) {\r\n      // 说明信息已经完善\r\n      const path = type === \"dashen\" ? \"/dashen\" : \"/laoban\";\r\n      return <Redirect to={path} />;\r\n    }\r\n\r\n    return <div>teacher</div>;\r\n  }\r\n}\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\studentInfo\\studentInfo.jsx",["73","74","75","76","77","78","79","80","81"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio } from \"antd\";\r\n// import { updateUser } from \"../../redux/actions\";\r\n\r\nclass StudentInfo extends Component {\r\n  state = {\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    startDate: \"\",\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    recommend: \"\",\r\n    eMail: \"\",\r\n  };\r\n\r\n  save = () => {\r\n    this.props.updateUser(this.state);\r\n  };\r\n\r\n  render() {\r\n    // 如果信息已经完善, 自动重定向到对应主界面\r\n    // const { header, type } = this.props.user;\r\n    // if (header) {\r\n    //   // 说明信息已经完善\r\n    //   const path = type === \"dashen\" ? \"/dashen\" : \"/laoban\";\r\n    //   return <Redirect to={path} />;\r\n    // }\r\n    const layout = {\r\n      labelCol: { span: 8 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n\r\n    const validateMessages = {\r\n      required: \"${label} is required!\",\r\n      message: \"Please select your ${label}!\",\r\n      types: {\r\n        email: \"${label} is not a valid email!\",\r\n        number: \"${label} is not a valid number!\",\r\n      },\r\n      number: {\r\n        range: \"${label} must be between ${min} and ${max}\",\r\n      },\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n      console.log(values);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Form\r\n          {...layout}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item\r\n            name={[\"realName\", \"name\"]}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={[\"sex\", \"sex\"]} label=\" 用户类型：\">\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"select\"\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的籍贯!\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的籍贯!\">\r\n              <Option value=\"\">浙江</Option>\r\n              <Option value=\"usa\"></Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[\"user\", \"email\"]}\r\n            label=\"Email\"\r\n            rules={[{ type: \"email\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[\"user\", \"age\"]}\r\n            label=\"Age\"\r\n            rules={[{ type: \"number\", min: 0, max: 99 }]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={[\"user\", \"introduction\"]} label=\"Introduction\">\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//updateUser\r\nexport default connect((state) => ({ user: state.user }), {})(StudentInfo);\r\n","D:\\web\\bysj\\chengji-client\\src\\utils\\index.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":134,"column":23,"nodeType":"88","endLine":134,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":6,"column":31,"nodeType":"91","messageId":"92","endLine":6,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":103,"column":23,"nodeType":"88","endLine":103,"endColumn":52},{"ruleId":"89","severity":1,"message":"93","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":41,"column":17,"nodeType":"97","messageId":"98","endLine":41,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":42,"column":16,"nodeType":"97","messageId":"98","endLine":42,"endColumn":46},{"ruleId":"95","severity":1,"message":"96","line":44,"column":16,"nodeType":"97","messageId":"98","endLine":44,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":45,"column":17,"nodeType":"97","messageId":"98","endLine":45,"endColumn":50},{"ruleId":"95","severity":1,"message":"96","line":48,"column":16,"nodeType":"97","messageId":"98","endLine":48,"endColumn":60},{"ruleId":"99","severity":2,"message":"100","line":83,"column":14,"nodeType":"101","endLine":83,"endColumn":20},{"ruleId":"99","severity":2,"message":"102","line":84,"column":16,"nodeType":"101","endLine":84,"endColumn":22},{"ruleId":"99","severity":2,"message":"102","line":85,"column":16,"nodeType":"101","endLine":85,"endColumn":22},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'Redirect' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react/jsx-no-undef","'Select' is not defined.","JSXIdentifier","'Option' is not defined.","no-global-assign","no-unsafe-negation"]