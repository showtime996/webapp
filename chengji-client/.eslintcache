[{"D:\\web\\bysj\\chengji-client\\src\\index.js":"1","D:\\web\\bysj\\chengji-client\\src\\containers\\main\\main.tsx":"2","D:\\web\\bysj\\chengji-client\\src\\containers\\adminRegister\\adminRegister.tsx":"3","D:\\web\\bysj\\chengji-client\\src\\containers\\login\\login.tsx":"4","D:\\web\\bysj\\chengji-client\\src\\containers\\adminInfo\\adminInfo.tsx":"5","D:\\web\\bysj\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.tsx":"6","D:\\web\\bysj\\chengji-client\\src\\containers\\studentInfo\\studentInfo.tsx":"7","D:\\web\\bysj\\chengji-client\\src\\components\\fonter\\fonter.tsx":"8","D:\\web\\bysj\\chengji-client\\src\\components\\header\\header.tsx":"9","D:\\web\\bysj\\chengji-client\\src\\redux\\store.ts":"10","D:\\web\\bysj\\chengji-client\\src\\redux\\actions.ts":"11","D:\\web\\bysj\\chengji-client\\src\\redux\\reducers.ts":"12","D:\\web\\bysj\\chengji-client\\src\\redux\\action-types.ts":"13","D:\\web\\bysj\\chengji-client\\src\\api\\index.ts":"14","D:\\web\\bysj\\chengji-client\\src\\utils\\path.ts":"15","D:\\web\\bysj\\chengji-client\\src\\api\\ajax.ts":"16","D:\\web\\bysj\\chengji-client\\src\\containers\\student\\index.tsx":"17","D:\\web\\bysj\\chengji-client\\src\\layout\\common\\common.tsx":"18","D:\\web\\bysj\\chengji-client\\src\\containers\\admin\\index.tsx":"19","D:\\web\\bysj\\chengji-client\\src\\layout\\admin\\admin.tsx":"20","D:\\web\\bysj\\chengji-client\\src\\containers\\teacher\\index.tsx":"21","D:\\web\\bysj\\chengji-client\\src\\components\\tabNav\\global.tsx":"22"},{"size":886,"mtime":1609668422051,"results":"23","hashOfConfig":"24"},{"size":900,"mtime":1614866971999,"results":"25","hashOfConfig":"24"},{"size":5362,"mtime":1615032367557,"results":"26","hashOfConfig":"24"},{"size":4882,"mtime":1609673453823,"results":"27","hashOfConfig":"24"},{"size":7459,"mtime":1609679160255,"results":"28","hashOfConfig":"24"},{"size":8448,"mtime":1609679191820,"results":"29","hashOfConfig":"24"},{"size":8460,"mtime":1609679183352,"results":"30","hashOfConfig":"24"},{"size":234,"mtime":1609667584365,"results":"31","hashOfConfig":"24"},{"size":236,"mtime":1609667591867,"results":"32","hashOfConfig":"24"},{"size":403,"mtime":1609667828330,"results":"33","hashOfConfig":"24"},{"size":7914,"mtime":1609675611833,"results":"34","hashOfConfig":"24"},{"size":1087,"mtime":1609672471503,"results":"35","hashOfConfig":"24"},{"size":309,"mtime":1609667791265,"results":"36","hashOfConfig":"24"},{"size":1201,"mtime":1609675691516,"results":"37","hashOfConfig":"24"},{"size":388,"mtime":1609672489319,"results":"38","hashOfConfig":"24"},{"size":748,"mtime":1609672612145,"results":"39","hashOfConfig":"24"},{"size":167,"mtime":1614867037391,"results":"40","hashOfConfig":"24"},{"size":1035,"mtime":1609678819468,"results":"41","hashOfConfig":"24"},{"size":159,"mtime":1614869446585,"results":"42","hashOfConfig":"24"},{"size":1773,"mtime":1609678788549,"results":"43","hashOfConfig":"24"},{"size":155,"mtime":1614867483808,"results":"44","hashOfConfig":"24"},{"size":171,"mtime":1609671204371,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1omls4r",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\web\\bysj\\chengji-client\\src\\index.js",["100"],"// 入口的js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react-router-dom比react-router功能更多\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Register from \"@/containers/adminRegister/adminRegister.tsx\";\r\nimport Main from \"@/containers/main/main.tsx\";\r\nimport Login from \"@/containers/login/login.tsx\";\r\nimport store from \"./redux/store\";\r\nconst app = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/adminRegister\" component={Register}></Route>\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        {/* 默认的组件 */}\r\n        <Route component={Main}></Route>\r\n        {/* <Redirect to=\"/login\"></Redirect> */}\r\n      </Switch>\r\n    </HashRouter>\r\n  </Provider>,\r\n  app\r\n);\r\n",["101","102"],"D:\\web\\bysj\\chengji-client\\src\\containers\\main\\main.tsx",[],["103","104"],"D:\\web\\bysj\\chengji-client\\src\\containers\\adminRegister\\adminRegister.tsx",["105","106","107"],"D:\\web\\bysj\\chengji-client\\src\\containers\\login\\login.tsx",["108","109"],"//注册的路由组件\r\nimport React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header.tsx\";\r\nimport Fonter from \"@/components/fonter/fonter.tsx\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { adminLogin, studentLogin, teacherLogin } from \"../../redux/actions\";\r\nfunction Login(props: {\r\n    adminLogin: (arg0: {\r\n      username: string; // 用户名\r\n      password: string;\r\n    }) => void; studentLogin: (arg0: {\r\n      username: string; // 用户名\r\n      password: string;\r\n    }) => void; teacherLogin: (arg0: {\r\n      username: string; // 用户名\r\n      password: string;\r\n    }) => void; history: { replace: (arg0: string) => void; }; user: { msg: any; redirectTo: any; };\r\n  }) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: { username: string; password: string; }) => {\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n    props.adminLogin(state);\r\n    props.studentLogin(state);\r\n    props.teacherLogin(state);\r\n    console.log(\"Success:\", values);\r\n  };\r\n  // 点击登入调用\r\n\r\n  const toRegister = () => {\r\n    props.history.replace(\"/adminRegister\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  return (\r\n    <div>\r\n      {/* 头部部分 */}\r\n      <Header></Header>\r\n      {/* 中间主体部分 */}\r\n      <div className={bj.logo}>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item>\r\n            {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n            <div className=\"login-form-title\">用户登入</div>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入用户名!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              // onChange={val => { this.handleChange('username', val) }}\r\n              placeholder=\"学号/职工号/教工号\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入密码!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              // onChange={val => { this.handleChange('password', val) }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n            </Button>\r\n\r\n            <p\r\n              className=\"login-form-registerLogin\"\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              教务员没有账号？ <a onClick={toRegister}>请点击注册!</a>\r\n            </p>\r\n\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{\r\n                backgroundColor: \"#CCC\",\r\n                width: \"100%\",\r\n                height: \"42px\",\r\n                position: \"absolute\",\r\n                bottom: \"-26px\",\r\n              }}\r\n            >\r\n              <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n              学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      {/* 底部部分 */}\r\n      <Fonter></Fonter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state:RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminLogin, studentLogin, teacherLogin }\r\n)(Login);\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\adminInfo\\adminInfo.tsx",["110","111","112","113","114","115","116","117"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  connect,\r\n  DefaultRootState,\r\n  RootStateOrAny,\r\n  useSelector,\r\n} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav/global.tsx\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateAdmin } from \"../../redux/actions\";\r\n\r\nfunction AdminInfo(props: {\r\n  user: { IDcard: any; type: any };\r\n  updateAdmin: (arg0: {\r\n    realName: string;\r\n    affiliation: string;\r\n    age: string;\r\n    startDate: string;\r\n    phone: string;\r\n    IDcard: string;\r\n    eMail: string;\r\n    address: string;\r\n    department: string;\r\n    duty: string;\r\n  }) => void;\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    startDate: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    eMail: \"\",\r\n    address: \"\",\r\n    department: \"\",\r\n    duty: \"\",\r\n  });\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"admin\" ? \"/admin\" : \"/adminInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const onFinish = (values: {\r\n    realName: string;\r\n    affiliation: string;\r\n    age: string;\r\n    startDate: string;\r\n    phone: string;\r\n    IDcard: string;\r\n    eMail: string;\r\n    address: string;\r\n    department: string;\r\n    duty: string;\r\n  }) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      startDate: (state.startDate = values.startDate),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n      address: (state.address = values.address),\r\n      department: (state.department = values.department),\r\n      duty: (state.duty = values.duty),\r\n    });\r\n    props.updateAdmin(state);\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教务员基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100 }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"DXG\">电子信息与工程学院</Option>\r\n              <Option value=\"JZG\">建筑工程学院</Option>\r\n              <Option value=\"JXG\">机械工程学院</Option>\r\n              <Option value=\"JT\">交通学院</Option>\r\n              <Option value=\"HG\">化学工程学院</Option>\r\n              <Option value=\"CL\">材料学院</Option>\r\n              <Option value=\"LI\">理学院</Option>\r\n              <Option value=\"JIG\">经济管理学院</Option>\r\n              <Option value=\"WG\">外国语学院</Option>\r\n              <Option value=\"RW\">人文学院</Option>\r\n              <Option value=\"GJ\">国际交流学院</Option>\r\n              <Option value=\"CJ\">成人教育学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n          <Form.Item name={\"startDate\"} label=\"开始日期\">\r\n            <Input placeholder=\"根据系统时间\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"address\"}\r\n            label=\"家庭地址\"\r\n            rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"请输入家庭地址\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateAdmin,\r\n})(AdminInfo);\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.tsx",["118","119","120","121","122","123","124"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav/global.tsx\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateTeacher } from \"../../redux/actions\";\r\n\r\nfunction TeacherInfo(props: {\r\n  updateUser: (arg0: any) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n    salary: \"\",\r\n    endSchool: \"\",\r\n    experience: \"\",\r\n    IDcard: \"\",\r\n    startDate: \"\",\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(values);\r\n    props.updateUser(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"teacher\" ? \"/teacher\" : \"/teacherInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教师基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"endSchool\"}\r\n            label=\"毕业学校\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入毕业学校\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"salary\"}\r\n            label=\"薪资\"\r\n            rules={[{ type: \"number\", required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"薪资\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n          <Form.Item name={\"startDate\"} label=\"上班日期\">\r\n            <Input placeholder=\"根据系统时间\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"hb\">河北</Option>\r\n                  <Option value=\"sx\">山西</Option>\r\n                  <Option value=\"ln\">辽宁</Option>\r\n                  <Option value=\"jl\">吉林</Option>\r\n                  <Option value=\"hlj\">黑龙江</Option>\r\n                  <Option value=\"js\">江苏</Option>\r\n                  <Option value=\"zj\">浙江</Option>\r\n                  <Option value=\"ah\">安徽</Option>\r\n                  <Option value=\"fj\">福建</Option>\r\n                  <Option value=\"jx\">江西</Option>\r\n                  <Option value=\"sd\">山东</Option>\r\n                  <Option value=\"hna\">河南</Option>\r\n                  <Option value=\"hb\">湖北</Option>\r\n                  <Option value=\"hnb\">湖南</Option>\r\n                  <Option value=\"gd\">广东</Option>\r\n                  <Option value=\"hnc\">海南</Option>\r\n                  <Option value=\"sc\">四川</Option>\r\n                  <Option value=\"gz\">贵州</Option>\r\n                  <Option value=\"nmg\">内蒙古</Option>\r\n                  <Option value=\"gx\">广西壮族</Option>\r\n                  <Option value=\"xz\">西藏</Option>\r\n                  <Option value=\"nx\">宁夏回族</Option>\r\n                  <Option value=\"xj\">新疆维吾尔</Option>\r\n                  <Option value=\"bj\">北京</Option>\r\n                  <Option value=\"tj\">天津</Option>\r\n                  <Option value=\"sh\">上海</Option>\r\n                  <Option value=\"cq\">重庆</Option>\r\n                  <Option value=\"xg\">香港</Option>\r\n                  <Option value=\"am\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"address\"}\r\n            label=\"家庭地址\"\r\n            rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"请输入家庭地址\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"experience\"} label=\"工作经历\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入工作经历\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateTeacher,\r\n})(TeacherInfo);\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\studentInfo\\studentInfo.tsx",["125","126","127","128","129","130","131"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav/global.tsx\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateStudent } from \"../../redux/actions\";\r\n\r\nfunction StudentInfo(props: {\r\n  updateUser: (arg0: {\r\n    realName: string;\r\n    sex: string;\r\n    affiliation: string;\r\n    age: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    nation: string;\r\n    region: string;\r\n    phone: string;\r\n    IDcard: string;\r\n    recommend: string;\r\n    eMail: string;\r\n    street: string;\r\n    address: string;\r\n  }) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    sex: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    recommend: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(values);\r\n    props.updateUser(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"student\" ? \"/student\" : \"/studentInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>学生基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n          <Form.Item name={\"startDate\"} label=\"开学日期\">\r\n            <Input placeholder=\"根据系统时间\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n          <Form.Item name={\"endDate\"} label=\"毕业日期\">\r\n            <Input placeholder=\"根据系统时间\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"hb\">河北</Option>\r\n                  <Option value=\"sx\">山西</Option>\r\n                  <Option value=\"ln\">辽宁</Option>\r\n                  <Option value=\"jl\">吉林</Option>\r\n                  <Option value=\"hlj\">黑龙江</Option>\r\n                  <Option value=\"js\">江苏</Option>\r\n                  <Option value=\"zj\">浙江</Option>\r\n                  <Option value=\"ah\">安徽</Option>\r\n                  <Option value=\"fj\">福建</Option>\r\n                  <Option value=\"jx\">江西</Option>\r\n                  <Option value=\"sd\">山东</Option>\r\n                  <Option value=\"hna\">河南</Option>\r\n                  <Option value=\"hb\">湖北</Option>\r\n                  <Option value=\"hnb\">湖南</Option>\r\n                  <Option value=\"gd\">广东</Option>\r\n                  <Option value=\"hnc\">海南</Option>\r\n                  <Option value=\"sc\">四川</Option>\r\n                  <Option value=\"gz\">贵州</Option>\r\n                  <Option value=\"nmg\">内蒙古</Option>\r\n                  <Option value=\"gx\">广西壮族</Option>\r\n                  <Option value=\"xz\">西藏</Option>\r\n                  <Option value=\"nx\">宁夏回族</Option>\r\n                  <Option value=\"xj\">新疆维吾尔</Option>\r\n                  <Option value=\"bj\">北京</Option>\r\n                  <Option value=\"tj\">天津</Option>\r\n                  <Option value=\"sh\">上海</Option>\r\n                  <Option value=\"cq\">重庆</Option>\r\n                  <Option value=\"xg\">香港</Option>\r\n                  <Option value=\"am\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"address\"}\r\n            label=\"家庭地址\"\r\n            rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"请输入家庭地址\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"recommend\"} label=\"自我简介\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入自我简介\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//updateUser\r\nexport default connect((state:RootStateOrAny) => ({ user: state.user }), { updateStudent })(\r\n  StudentInfo\r\n);\r\n","D:\\web\\bysj\\chengji-client\\src\\components\\fonter\\fonter.tsx",[],"D:\\web\\bysj\\chengji-client\\src\\components\\header\\header.tsx",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\store.ts",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\actions.ts",["132","133"],"// 包含n个action creator\r\n// 异步action\r\n// 同步action\r\nimport {\r\n  AUTH_SUCCESS,\r\n  ERROR_MSG,\r\n  RECEIVE_USER,\r\n  RESET_USER,\r\n} from \"./action-types\";\r\nimport {\r\n  reqteacherRegister,\r\n  reqstudentRegister,\r\n  reqadminRegister,\r\n  reqadminLogin,\r\n  reqstudentLogin,\r\n  reqteacherLogin,\r\n  reqStudentUpdate,\r\n  reqTeacherUpdate,\r\n  reqAdminUpdate,\r\n} from \"../api/index\";\r\n\r\n// 授权成功的同步action\r\nconst authSuccess = (user: any) => ({ type: AUTH_SUCCESS, data: user });\r\n// 错误提示信息的同步action\r\nconst errorMsg = (msg: string) => ({ type: ERROR_MSG, data: msg });\r\n// 接收用户的同步action\r\nconst receive = (user: any) => ({ type: RECEIVE_USER, data: user });\r\n// 重置用户的同步action\r\nexport const reset = (msg: any) => ({ type: RESET_USER, data: msg });\r\n\r\n// 注册教务员异步action\r\nexport const adminRegister = (user: { username: any; password: any; password2: any; type: any; }) => {\r\n  const { username, password, password2, type } = user;\r\n  console.log(\"password\", password);\r\n  console.log(\"password2\", password2);\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (password !== password2) {\r\n    return errorMsg(\"2次密码要一致!\");\r\n  }\r\n  // 表单数据合法, 返回一个发ajax请求的异步action函数\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqadminRegister({ username, password, type });\r\n    const result = response.data; //  {code: 0/1, data: user, msg: ''}\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n// 等待教务员注册完成 接口已经封装完成\r\n\r\n// // 注册老师异步action\r\n// export const teacherRegister = (user) => {\r\n//   const { username, password, password2, type } = user;\r\n//   console.log(\"password\", password);\r\n//   console.log(\"password2\", password2);\r\n//   // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n\r\n//   if (!username) {\r\n//     return errorMsg(\"用户名必须指定!\");\r\n//   } else if (password !== password2) {\r\n//     return errorMsg(\"2次密码要一致!\");\r\n//   }\r\n//   // 表单数据合法, 返回一个发ajax请求的异步action函数\r\n//   return async (dispatch) => {\r\n//     // 发送注册的异步ajax请求\r\n//     const response = await reqteacherRegister({ username, password, type });\r\n//     const result = response.data; //  {code: 0/1, data: user, msg: ''}\r\n//     if (result.code === 0) {\r\n//       // 成功\r\n//       // 分发授权成功的同步action\r\n//       dispatch(authSuccess(result.data));\r\n//     } else {\r\n//       // 失败\r\n//       // 分发错误提示信息的同步action\r\n//       dispatch(errorMsg(result.msg));\r\n//     }\r\n//   };\r\n// };\r\n\r\n// // 注册学生异步action\r\n// export const studentRegister = (user) => {\r\n//   const { username, password, password2, type } = user;\r\n//   console.log(\"password\", password);\r\n//   console.log(\"password2\", password2);\r\n//   // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n\r\n//   if (!username) {\r\n//     return errorMsg(\"用户名必须指定!\");\r\n//   } else if (password !== password2) {\r\n//     return errorMsg(\"2次密码要一致!\");\r\n//   }\r\n//   // 表单数据合法, 返回一个发ajax请求的异步action函数\r\n//   return async (dispatch) => {\r\n//     // 发送注册的异步ajax请求\r\n//     const response = await reqstudentRegister({ username, password, type });\r\n//     const result = response.data; //  {code: 0/1, data: user, msg: ''}\r\n//     if (result.code === 0) {\r\n//       // 成功\r\n//       // 分发授权成功的同步action\r\n//       dispatch(authSuccess(result.data));\r\n//     } else {\r\n//       // 失败\r\n//       // 分发错误提示信息的同步action\r\n//       dispatch(errorMsg(result.msg));\r\n//     }\r\n//   };\r\n// };\r\n\r\n// 登陆异步action\r\nexport const adminLogin = (user: { username: any; password: any; }) => {\r\n  const { username, password } = user;\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码必须指定!\");\r\n  }\r\n  return async (\r\n    dispatch: (arg0: { type: string; data: any }) => void\r\n  ) => {\r\n    const response = await reqadminLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\nexport const studentLogin = (user: { username: any; password: any; }) => {\r\n  const { username, password } = user;\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码必须指定!\");\r\n  }\r\n  return async (\r\n    dispatch: (arg0: { type: string; data: any }) => void\r\n  ) => {\r\n    const response = await reqstudentLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\nexport const teacherLogin = (user: { username: any; password: any; }) => {\r\n  const { username, password } = user;\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码必须指定!\");\r\n  }\r\n  return async (\r\n    dispatch: (arg0: { type: string; data: any }) => void\r\n  ) => {\r\n    const response = await reqteacherLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// 更新用户异步action\r\nexport const updateStudent = (user: any) => {\r\n  return async (\r\n    dispatch: (arg0: { type: string; data: any }) => void\r\n  ) => {\r\n    const response = await reqStudentUpdate(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(receive(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(reset(result.msg));\r\n    }\r\n  };\r\n};\r\n// 更新用户异步action\r\nexport const updateTeacher = (user: any) => {\r\n  return async (\r\n    dispatch: (arg0: { type: string; data: any }) => void\r\n  ) => {\r\n    const response = await reqTeacherUpdate(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(receive(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(reset(result.msg));\r\n    }\r\n  };\r\n};\r\n// 更新用户异步action\r\nexport const updateAdmin = (user: any) => {\r\n  return async (\r\n    dispatch: (arg0: { type: string; data: any}) => void\r\n  ) => {\r\n    const response = await reqAdminUpdate(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(receive(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(reset(result.msg));\r\n    }\r\n  };\r\n};\r\n","D:\\web\\bysj\\chengji-client\\src\\redux\\reducers.ts",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\action-types.ts",[],"D:\\web\\bysj\\chengji-client\\src\\api\\index.ts",[],"D:\\web\\bysj\\chengji-client\\src\\utils\\path.ts",[],"D:\\web\\bysj\\chengji-client\\src\\api\\ajax.ts",[],"D:\\web\\bysj\\chengji-client\\src\\containers\\student\\index.tsx",[],"D:\\web\\bysj\\chengji-client\\src\\layout\\common\\common.tsx",["134"],"import { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./common.less\";\r\n\r\nexport default function CommonLayout() {\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\r\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>List</Breadcrumb.Item>\r\n          <Breadcrumb.Item>App</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-content\">Content</div>\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        Ant Design ©2018 Created by Ant UED\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n}\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\admin\\index.tsx",[],"D:\\web\\bysj\\chengji-client\\src\\layout\\admin\\admin.tsx",["135"],"import { Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"./admin.less\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nexport default class Administer extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n              nav 1\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n              nav 2\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n              nav 3\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement(\r\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n              {\r\n                className: \"trigger\",\r\n                onClick: this.toggle,\r\n              }\r\n            )}\r\n          </Header>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            Content\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\teacher\\index.tsx",[],"D:\\web\\bysj\\chengji-client\\src\\components\\tabNav\\global.tsx",[],{"ruleId":"136","severity":1,"message":"137","line":5,"column":37,"nodeType":"138","messageId":"139","endLine":5,"endColumn":45},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"144","severity":1,"message":"146","line":6,"column":31,"nodeType":"138","messageId":"139","endLine":6,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":141,"column":15,"nodeType":"149","endLine":141,"endColumn":36},{"ruleId":"144","severity":1,"message":"146","line":6,"column":31,"nodeType":"138","messageId":"139","endLine":6,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":119,"column":24,"nodeType":"149","endLine":119,"endColumn":48},{"ruleId":"144","severity":1,"message":"150","line":6,"column":3,"nodeType":"138","messageId":"139","endLine":6,"endColumn":19},{"ruleId":"144","severity":1,"message":"151","line":8,"column":3,"nodeType":"138","messageId":"139","endLine":8,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":58,"column":15,"nodeType":"154","messageId":"155","endLine":58,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":59,"column":14,"nodeType":"154","messageId":"155","endLine":59,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":60,"column":10,"nodeType":"154","messageId":"155","endLine":60,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":62,"column":14,"nodeType":"154","messageId":"155","endLine":62,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":63,"column":15,"nodeType":"154","messageId":"155","endLine":63,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":66,"column":14,"nodeType":"154","messageId":"155","endLine":66,"endColumn":45},{"ruleId":"144","severity":1,"message":"156","line":16,"column":17,"nodeType":"138","messageId":"139","endLine":16,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":52,"column":15,"nodeType":"154","messageId":"155","endLine":52,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":53,"column":14,"nodeType":"154","messageId":"155","endLine":53,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":54,"column":10,"nodeType":"154","messageId":"155","endLine":54,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":56,"column":14,"nodeType":"154","messageId":"155","endLine":56,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":57,"column":15,"nodeType":"154","messageId":"155","endLine":57,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":60,"column":14,"nodeType":"154","messageId":"155","endLine":60,"endColumn":45},{"ruleId":"144","severity":1,"message":"156","line":31,"column":17,"nodeType":"138","messageId":"139","endLine":31,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":66,"column":15,"nodeType":"154","messageId":"155","endLine":66,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":67,"column":14,"nodeType":"154","messageId":"155","endLine":67,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":68,"column":10,"nodeType":"154","messageId":"155","endLine":68,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":70,"column":14,"nodeType":"154","messageId":"155","endLine":70,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":71,"column":15,"nodeType":"154","messageId":"155","endLine":71,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":74,"column":14,"nodeType":"154","messageId":"155","endLine":74,"endColumn":45},{"ruleId":"144","severity":1,"message":"157","line":11,"column":3,"nodeType":"138","messageId":"139","endLine":11,"endColumn":21},{"ruleId":"144","severity":1,"message":"158","line":12,"column":3,"nodeType":"138","messageId":"139","endLine":12,"endColumn":21},{"ruleId":"144","severity":1,"message":"159","line":6,"column":27,"nodeType":"138","messageId":"139","endLine":6,"endColumn":32},{"ruleId":"144","severity":1,"message":"160","line":9,"column":17,"nodeType":"138","messageId":"139","endLine":9,"endColumn":25},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","'Radio' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DefaultRootState' is defined but never used.","'useSelector' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'setState' is assigned a value but never used.","'reqteacherRegister' is defined but never used.","'reqstudentRegister' is defined but never used.","'Sider' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]