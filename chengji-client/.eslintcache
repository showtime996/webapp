[{"D:\\web\\bysj\\chengji-client\\src\\index.js":"1","D:\\web\\bysj\\chengji-client\\src\\redux\\store.js":"2","D:\\web\\bysj\\chengji-client\\src\\containers\\main\\main.jsx":"3","D:\\web\\bysj\\chengji-client\\src\\containers\\login\\login.jsx":"4","D:\\web\\bysj\\chengji-client\\src\\redux\\reducers.js":"5","D:\\web\\bysj\\chengji-client\\src\\redux\\actions.js":"6","D:\\web\\bysj\\chengji-client\\src\\containers\\adminInfo\\adminInfo.jsx":"7","D:\\web\\bysj\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.jsx":"8","D:\\web\\bysj\\chengji-client\\src\\containers\\studentInfo\\studentInfo.jsx":"9","D:\\web\\bysj\\chengji-client\\src\\components\\fonter\\fonter.jsx":"10","D:\\web\\bysj\\chengji-client\\src\\redux\\action-types.js":"11","D:\\web\\bysj\\chengji-client\\src\\components\\header\\header.jsx":"12","D:\\web\\bysj\\chengji-client\\src\\utils\\index.js":"13","D:\\web\\bysj\\chengji-client\\src\\api\\index.js":"14","D:\\web\\bysj\\chengji-client\\src\\api\\ajax.js":"15","D:\\web\\bysj\\chengji-client\\src\\components\\layout\\global.jsx":"16","D:\\web\\bysj\\chengji-client\\src\\containers\\adminRegister\\adminRegister.jsx":"17"},{"size":889,"mtime":1609062713896,"results":"18","hashOfConfig":"19"},{"size":406,"mtime":1607843281209,"results":"20","hashOfConfig":"19"},{"size":664,"mtime":1609046976491,"results":"21","hashOfConfig":"19"},{"size":4601,"mtime":1609061477946,"results":"22","hashOfConfig":"19"},{"size":1036,"mtime":1609070156417,"results":"23","hashOfConfig":"19"},{"size":7335,"mtime":1609073280335,"results":"24","hashOfConfig":"19"},{"size":7245,"mtime":1609074229983,"results":"25","hashOfConfig":"19"},{"size":8941,"mtime":1609074707917,"results":"26","hashOfConfig":"19"},{"size":8631,"mtime":1609074742007,"results":"27","hashOfConfig":"19"},{"size":307,"mtime":1607308876839,"results":"28","hashOfConfig":"19"},{"size":309,"mtime":1609050976424,"results":"29","hashOfConfig":"19"},{"size":288,"mtime":1609046976437,"results":"30","hashOfConfig":"19"},{"size":375,"mtime":1609046976638,"results":"31","hashOfConfig":"19"},{"size":1121,"mtime":1609061467727,"results":"32","hashOfConfig":"19"},{"size":735,"mtime":1607834046065,"results":"33","hashOfConfig":"19"},{"size":211,"mtime":1608813482640,"results":"34","hashOfConfig":"19"},{"size":5178,"mtime":1609074235603,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xg5pzh",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},"D:\\web\\bysj\\chengji-client\\src\\index.js",["74"],"D:\\web\\bysj\\chengji-client\\src\\redux\\store.js",[],["75","76"],"D:\\web\\bysj\\chengji-client\\src\\containers\\main\\main.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\containers\\login\\login.jsx",["77","78"],"//注册的路由组件\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header\";\r\nimport Fonter from \"@/components/fonter/fonter\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect } from \"react-redux\";\r\nimport { adminLogin, studentLogin, teacherLogin } from \"@/redux/actions\";\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  };\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  onFinish = (values) => {\r\n    this.setState({\r\n      username: (this.username = values.username),\r\n      password: (this.username = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n    this.props.adminLogin(this.state);\r\n    this.props.studentLogin(this.state);\r\n    this.props.teacherLogin(this.state);\r\n    console.log(\"Success:\", values);\r\n  };\r\n  // 点击登入调用\r\n\r\n  toRegister = () => {\r\n    this.props.history.replace(\"/adminRegister\");\r\n  };\r\n\r\n  render() {\r\n    const { msg, redirectTo } = this.props.user;\r\n    // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* 头部部分 */}\r\n        <Header></Header>\r\n        {/* 中间主体部分 */}\r\n        <div className={bj.logo}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n              <div className=\"login-form-title\">用户登入</div>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                // onChange={val => { this.handleChange('username', val) }}\r\n                placeholder=\"学号/职工号/教工号\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n                // onChange={val => { this.handleChange('password', val) }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n              </Button>\r\n\r\n              <p\r\n                className=\"login-form-registerLogin\"\r\n                style={{ marginTop: \"10px\" }}\r\n              >\r\n                教务员没有账号？ <a onClick={this.toRegister}>请点击注册!</a>\r\n              </p>\r\n\r\n              <div\r\n                className=\"login-form-registerLogin\"\r\n                style={{\r\n                  backgroundColor: \"#CCC\",\r\n                  width: \"100%\",\r\n                  height: \"42px\",\r\n                  position: \"absolute\",\r\n                  bottom: \"-26px\",\r\n                }}\r\n              >\r\n                <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n                学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {/* 底部部分 */}\r\n        <Fonter></Fonter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminLogin, studentLogin, teacherLogin }\r\n)(Login);\r\n","D:\\web\\bysj\\chengji-client\\src\\redux\\reducers.js",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\actions.js",["79","80"],"D:\\web\\bysj\\chengji-client\\src\\containers\\adminInfo\\adminInfo.jsx",["81","82","83","84","85","86"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/layout/global\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateAdmin } from \"@/redux/actions\";\r\n\r\nclass AdminInfo extends Component {\r\n  state = {\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    startDate: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    eMail: \"\",\r\n    address: \"\",\r\n    department: \"\",\r\n    duty: \"\",\r\n  };\r\n\r\n  render() {\r\n    // 如果信息已经完善, 自动重定向到对应主界面\r\n    const { IDcard, type } = this.props.user;\r\n    if (IDcard) {\r\n      // 说明信息已经完善\r\n      const path = type === \"admin\" ? \"/admin\" : \"/adminInfo\";\r\n      return <Redirect to={path} />;\r\n    }\r\n    const layout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    const { Option } = Select;\r\n    const validateMessages = {\r\n      required: \"${label} 必须填写!\",\r\n      message: \"请输入你的${label}!\",\r\n      len: \"${label}长度必须18位\",\r\n      types: {\r\n        email: \"${label} 不是有效的邮箱!\",\r\n        number: \"${label} 不是有效的数字!\",\r\n      },\r\n      number: {\r\n        range: \"${label} 范围必须在${min} 和 ${max}\",\r\n      },\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n      this.setState({\r\n        realName: (this.realName = values.realName),\r\n        affiliation: (this.affiliation = values.affiliation),\r\n        age: (this.age = values.age),\r\n        startDate: (this.startDate = values.startDate),\r\n        phone: (this.phone = values.phone),\r\n        IDcard: (this.IDcard = values.IDcard),\r\n        eMail: (this.eMail = values.eMail),\r\n        address: (this.address = values.address),\r\n        department: (this.department = values.department),\r\n        duty: (this.duty = values.duty),\r\n      });\r\n      this.props.updateAdmin(this.state);\r\n      console.log(\"Success:\", values);\r\n    };\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <GlobalTab></GlobalTab>\r\n        <div className={styles.formContainer}>\r\n          <Form\r\n            {...layout}\r\n            style={{ margin: \"17px auto\" }}\r\n            name=\"nest-messages\"\r\n            onFinish={onFinish}\r\n            validateMessages={validateMessages}\r\n          >\r\n            <Form.Item>\r\n              <h2 className={selfStyles.title}>教务员基本信息</h2>\r\n            </Form.Item>\r\n            <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n              <Input placeholder=\"请输入姓名\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"sex\"}\r\n              label=\" 性别：\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Radio.Group>\r\n                <Radio value=\"man\">男</Radio>\r\n                <Radio value=\"women\">女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"affiliation\"}\r\n              label=\"政治面貌\"\r\n              hasFeedback\r\n              rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n            >\r\n              <Select placeholder=\"请输入你的政治面貌\">\r\n                <Option value=\"DY\">党员</Option>\r\n                <Option value=\"TY\">团员</Option>\r\n                <Option value=\"SXDY\">少先队员</Option>\r\n                <Option value=\"QZ\">群众</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"age\"}\r\n              label=\"年龄\"\r\n              rules={[{ type: \"number\", min: 1, max: 100 }]}\r\n            >\r\n              <InputNumber placeholder=\"年龄\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={\"department\"}\r\n              label=\"学院\"\r\n              hasFeedback\r\n              rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n            >\r\n              <Select placeholder=\"请输入你负责的学院\">\r\n                <Option value=\"DXG\">电子信息与工程学院</Option>\r\n                <Option value=\"JZG\">建筑工程学院</Option>\r\n                <Option value=\"JXG\">机械工程学院</Option>\r\n                <Option value=\"JT\">交通学院</Option>\r\n                <Option value=\"HG\">化学工程学院</Option>\r\n                <Option value=\"CL\">材料学院</Option>\r\n                <Option value=\"LI\">理学院</Option>\r\n                <Option value=\"JIG\">经济管理学院</Option>\r\n                <Option value=\"WG\">外国语学院</Option>\r\n                <Option value=\"RW\">人文学院</Option>\r\n                <Option value=\"GJ\">国际交流学院</Option>\r\n                <Option value=\"CJ\">成人教育学院</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={\"IDcard\"}\r\n              label=\"身份证号码\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  len: 18,\r\n                  message: \"请输入18位有效数字!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"请输入有效的身份证号码\" />\r\n            </Form.Item>\r\n            {/* 系统获取时间 */}\r\n            <Form.Item name={\"startDate\"} label=\"开始日期\">\r\n              <Input placeholder=\"根据系统时间\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name={\"phone\"}\r\n              label=\"手机号码\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  len: 11,\r\n                  message: \"请输入11位有效数字!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"请输入手机号码\" />\r\n            </Form.Item>\r\n            <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n              <Input placeholder=\"请输入电子邮箱\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"address\"}\r\n              label=\"家庭地址\"\r\n              rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n            >\r\n              <Input.TextArea\r\n                placeholder=\"请输入家庭地址\"\r\n                style={{ resize: \"none\" }}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name={\"duty\"} label=\"职责\">\r\n              <Input.TextArea\r\n                placeholder=\"请输入职责\"\r\n                style={{ resize: \"none\" }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                信息提交\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { updateAdmin })(\r\n  AdminInfo\r\n);\r\n","D:\\web\\bysj\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.jsx",["87","88","89","90","91","92"],"D:\\web\\bysj\\chengji-client\\src\\containers\\studentInfo\\studentInfo.jsx",["93","94","95","96","97","98"],"D:\\web\\bysj\\chengji-client\\src\\components\\fonter\\fonter.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\redux\\action-types.js",[],"D:\\web\\bysj\\chengji-client\\src\\components\\header\\header.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\utils\\index.js",[],"D:\\web\\bysj\\chengji-client\\src\\api\\index.js",[],"D:\\web\\bysj\\chengji-client\\src\\api\\ajax.js",[],"D:\\web\\bysj\\chengji-client\\src\\components\\layout\\global.jsx",[],"D:\\web\\bysj\\chengji-client\\src\\containers\\adminRegister\\adminRegister.jsx",["99","100"],"//教务员注册的路由组件\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header\";\r\nimport Fonter from \"@/components/fonter/fonter\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { adminRegister } from \"@/redux/actions\";\r\nclass AdminRegister extends React.Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"\",\r\n  };\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  onFinish = (values) => {\r\n    this.setState({\r\n      username: (this.username = values.username),\r\n      password: (this.password = values.password),\r\n      password2: (this.password2 = values.password2),\r\n      type: (this.type = \"admin\"),\r\n    });\r\n    //调用redux action中的register方法，判断是否可以注册\r\n    this.props.adminRegister(this.state);\r\n    // console.log(\" this.props\", this.props.adminRegister);\r\n    // console.log(\"state\", this.state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  toLogin = () => {\r\n    this.props.history.replace(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { msg, redirectTo } = this.props.user;\r\n    // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* 头部部分 */}\r\n        <Header></Header>\r\n        {/* 中间主体部分 */}\r\n        <div className={bj.logo}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n              <div className=\"login-form-title\">教务员注册</div>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                // onChange={val => { this.handleChange('username', val) }}\r\n                placeholder=\"教工号\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n                // onChange={val => { this.handleChange('password', val) }}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password2\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请重新输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"确认密码\"\r\n                // onChange={val => { this.handleChange('password2', val) }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n              </Button>\r\n              <p\r\n                className=\"login-form-registerLogin\"\r\n                style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n              >\r\n                已有账号？ <a onClick={this.toLogin}>点击登入!</a>\r\n              </p>\r\n\r\n              <div\r\n                className=\"login-form-registerLogin\"\r\n                style={{\r\n                  backgroundColor: \"#CCC\",\r\n                  width: \"100%\",\r\n                  height: \"32px\",\r\n                  position: \"absolute\",\r\n                  bottom: \"-24px\",\r\n                }}\r\n              >\r\n                <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n                教务员账号为教工号！\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {/* 底部部分 */}\r\n        <Fonter></Fonter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminRegister }\r\n)(AdminRegister);\r\n",{"ruleId":"101","severity":1,"message":"102","line":5,"column":37,"nodeType":"103","messageId":"104","endLine":5,"endColumn":45},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":6,"column":31,"nodeType":"103","messageId":"104","endLine":6,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":109,"column":26,"nodeType":"112","endLine":109,"endColumn":55},{"ruleId":"101","severity":1,"message":"113","line":11,"column":3,"nodeType":"103","messageId":"104","endLine":11,"endColumn":21},{"ruleId":"101","severity":1,"message":"114","line":12,"column":3,"nodeType":"103","messageId":"104","endLine":12,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":40,"column":17,"nodeType":"117","messageId":"118","endLine":40,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":41,"column":16,"nodeType":"117","messageId":"118","endLine":41,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":42,"column":12,"nodeType":"117","messageId":"118","endLine":42,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":44,"column":16,"nodeType":"117","messageId":"118","endLine":44,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":45,"column":17,"nodeType":"117","messageId":"118","endLine":45,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":48,"column":16,"nodeType":"117","messageId":"118","endLine":48,"endColumn":47},{"ruleId":"115","severity":1,"message":"116","line":49,"column":17,"nodeType":"117","messageId":"118","endLine":49,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":50,"column":16,"nodeType":"117","messageId":"118","endLine":50,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":51,"column":12,"nodeType":"117","messageId":"118","endLine":51,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":53,"column":16,"nodeType":"117","messageId":"118","endLine":53,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":54,"column":17,"nodeType":"117","messageId":"118","endLine":54,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":57,"column":16,"nodeType":"117","messageId":"118","endLine":57,"endColumn":47},{"ruleId":"115","severity":1,"message":"116","line":48,"column":17,"nodeType":"117","messageId":"118","endLine":48,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":49,"column":16,"nodeType":"117","messageId":"118","endLine":49,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":50,"column":12,"nodeType":"117","messageId":"118","endLine":50,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":52,"column":16,"nodeType":"117","messageId":"118","endLine":52,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":53,"column":17,"nodeType":"117","messageId":"118","endLine":53,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":56,"column":16,"nodeType":"117","messageId":"118","endLine":56,"endColumn":47},{"ruleId":"101","severity":1,"message":"109","line":6,"column":31,"nodeType":"103","messageId":"104","endLine":6,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":129,"column":23,"nodeType":"112","endLine":129,"endColumn":49},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'Radio' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'reqteacherRegister' is defined but never used.","'reqstudentRegister' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]