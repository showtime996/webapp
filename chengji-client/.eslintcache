[{"D:\\web\\webapp\\chengji-client\\src\\index.js":"1","D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts":"2","D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx":"3","D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx":"4","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx":"5","D:\\web\\webapp\\chengji-client\\src\\components\\header\\index.tsx":"6","D:\\web\\webapp\\chengji-client\\src\\components\\fonter\\index.tsx":"7","D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts":"8","D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts":"9","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx":"10","D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx":"11","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx":"12","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx":"13","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx":"14","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx":"15","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts":"16","D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts":"17","D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx":"18","D:\\web\\webapp\\chengji-client\\src\\api\\index.ts":"19","D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts":"20","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx":"21","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx":"22","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx":"23","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx":"24","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx":"25","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx":"26","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx":"27","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx":"28","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletestudentmodel\\index.tsx":"29","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletegrademodel\\index.tsx":"30","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\index.tsx":"31","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\model\\index.tsx":"32","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\gradesearch\\index.tsx":"33"},{"size":802,"mtime":1617259800788,"results":"34","hashOfConfig":"35"},{"size":403,"mtime":1617259800803,"results":"36","hashOfConfig":"35"},{"size":1084,"mtime":1617263188562,"results":"37","hashOfConfig":"35"},{"size":5839,"mtime":1617456400319,"results":"38","hashOfConfig":"35"},{"size":4425,"mtime":1617259800788,"results":"39","hashOfConfig":"35"},{"size":236,"mtime":1617259800773,"results":"40","hashOfConfig":"35"},{"size":236,"mtime":1617259800773,"results":"41","hashOfConfig":"35"},{"size":3127,"mtime":1617594581629,"results":"42","hashOfConfig":"35"},{"size":13816,"mtime":1617594498854,"results":"43","hashOfConfig":"35"},{"size":160,"mtime":1617260515814,"results":"44","hashOfConfig":"35"},{"size":14654,"mtime":1617548258812,"results":"45","hashOfConfig":"35"},{"size":168,"mtime":1617260450833,"results":"46","hashOfConfig":"35"},{"size":211,"mtime":1617260469423,"results":"47","hashOfConfig":"35"},{"size":15362,"mtime":1617455395924,"results":"48","hashOfConfig":"35"},{"size":6711,"mtime":1617283989284,"results":"49","hashOfConfig":"35"},{"size":1044,"mtime":1617594430291,"results":"50","hashOfConfig":"35"},{"size":388,"mtime":1617259800803,"results":"51","hashOfConfig":"35"},{"size":171,"mtime":1617259800773,"results":"52","hashOfConfig":"35"},{"size":2199,"mtime":1617594326040,"results":"53","hashOfConfig":"35"},{"size":748,"mtime":1617259800803,"results":"54","hashOfConfig":"35"},{"size":3349,"mtime":1617538811156,"results":"55","hashOfConfig":"35"},{"size":2165,"mtime":1617266514329,"results":"56","hashOfConfig":"35"},{"size":1428,"mtime":1617265217971,"results":"57","hashOfConfig":"35"},{"size":9189,"mtime":1617535828706,"results":"58","hashOfConfig":"35"},{"size":1463,"mtime":1617534876329,"results":"59","hashOfConfig":"35"},{"size":9359,"mtime":1617592325245,"results":"60","hashOfConfig":"35"},{"size":1567,"mtime":1617543041389,"results":"61","hashOfConfig":"35"},{"size":5107,"mtime":1617591550183,"results":"62","hashOfConfig":"35"},{"size":1246,"mtime":1617535538876,"results":"63","hashOfConfig":"35"},{"size":1260,"mtime":1617589593108,"results":"64","hashOfConfig":"35"},{"size":10858,"mtime":1617637432855,"results":"65","hashOfConfig":"35"},{"size":1493,"mtime":1617637466190,"results":"66","hashOfConfig":"35"},{"size":8019,"mtime":1617637581601,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1fav7u2",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\web\\webapp\\chengji-client\\src\\index.js",["153"],"// 入口的js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react-router-dom比react-router功能更多\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Register from \"@/containers/register\";\r\nimport Main from \"@/containers/main\";\r\nimport Login from \"@/containers/login\";\r\nimport store from \"./redux/store\";\r\nconst app = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/adminRegister\" component={Register}></Route>\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        {/* 默认的组件 */}\r\n        <Route component={Main}></Route>\r\n       \r\n      </Switch>\r\n    </HashRouter>\r\n  </Provider>,\r\n  app\r\n);\r\n",["154","155"],"D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts",[],["156","157"],"D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx",["158","159"],"//教务员注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  adminRegister,\r\n  teacherRegister,\r\n  studentRegister,\r\n} from \"../../redux/actions\";\r\nfunction Register(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: (state.type = values.type),\r\n    });\r\n    //调用redux action中的register方法，判断是否可以注册\r\n    if (state.type === \"student\") {\r\n      props.studentRegister(state);\r\n    } else if (state.type === \"admin\") {\r\n      props.adminRegister(state);\r\n    } else {\r\n      props.teacherRegister(state);\r\n    }\r\n  };\r\n  // 点击注册调用\r\n\r\n  const toLogin = () => {\r\n    props.history.replace(\"/login\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  return (\r\n    <div>\r\n      {/* 头部部分 */}\r\n      <Header></Header>\r\n      {/* 中间主体部分 */}\r\n      <div className={bj.logo}>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n            <div className=\"login-form-title\">用户注册</div>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                \r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              // onChange={val => { this.handleChange('username', val) }}\r\n              placeholder=\"学号/职工号/教工号\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"密码不允许少于6位大于11位\",\r\n               \r\n                min: 6,\r\n                max: 11,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              // onChange={val => { this.handleChange('password', val) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password2\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"密码不允许少于6位大于11位\",\r\n\r\n                min: 6,\r\n                max: 11,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"确认密码\"\r\n              // onChange={val => { this.handleChange('password2', val) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"type\">\r\n            <Radio.Group>\r\n              <Radio value=\"admin\">教务员</Radio>\r\n              <Radio value=\"student\">学生</Radio>\r\n              <Radio value=\"teacher\">老师</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n            </Button>\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n            >\r\n              <a onClick={toLogin}>已是账号---请点击登入!</a>\r\n            </div>\r\n\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{\r\n                backgroundColor: \"#CCC\",\r\n                width: \"100%\",\r\n                height: \"32px\",\r\n                position: \"absolute\",\r\n                bottom: \"-24px\",\r\n              }}\r\n            >\r\n              <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n              教务员账号为教工号！\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      {/* 底部部分 */}\r\n      <Fonter></Fonter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminRegister, teacherRegister, studentRegister }\r\n)(Register);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx",["160","161"],"//注册的路由组件\r\nimport React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header\";\r\nimport Fonter from \"@/components/fonter\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { adminLogin, studentLogin, teacherLogin } from \"../../redux/actions\";\r\nfunction Login(props: any) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: { username: string; password: string }) => {\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n\r\n    props.adminLogin(state);\r\n    props.studentLogin(state);\r\n    props.teacherLogin(state);\r\n  };\r\n  // 点击登入调用\r\n\r\n  const toRegister = () => {\r\n    props.history.replace(\"/adminRegister\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  return (\r\n    <div>\r\n      {/* 头部部分 */}\r\n      <Header></Header>\r\n      {/* 中间主体部分 */}\r\n      <div className={bj.logo}>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item>\r\n            {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n            <div className=\"login-form-title\">用户登入</div>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入用户名!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              // onChange={val => { this.handleChange('username', val) }}\r\n              placeholder=\"学号/职工号/教工号\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入密码!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              // onChange={val => { this.handleChange('password', val) }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n            </Button>\r\n\r\n            <p\r\n              className=\"login-form-registerLogin\"\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              教务员没有账号？ <a onClick={toRegister}>请点击注册!</a>\r\n            </p>\r\n\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{\r\n                backgroundColor: \"#CCC\",\r\n                width: \"100%\",\r\n                height: \"42px\",\r\n                position: \"absolute\",\r\n                bottom: \"-26px\",\r\n              }}\r\n            >\r\n              <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n              学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      {/* 底部部分 */}\r\n      <Fonter></Fonter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminLogin, studentLogin, teacherLogin }\r\n)(Login);\r\n","D:\\web\\webapp\\chengji-client\\src\\components\\header\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\components\\fonter\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts",[],"D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx",["162","163","164","165","166","167","168"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateTeacher } from \"../../redux/actions\";\r\n\r\nfunction TeacherInfo(props: {\r\n  updateTeacher: (arg0: any) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n    years: \"\",\r\n    term: \"\",\r\n    duty: \"\",\r\n    IDcard: \"\",\r\n    startDate: \"\",\r\n    cname: \"\",\r\n    classno: \"\",\r\n    nation: \"\",\r\n    department: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    diploma: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      sex: (state.sex = values.sex),\r\n      diploma: (state.diploma = values.diploma),\r\n      duty: (state.duty = values.duty),\r\n      cname: (state.cname = values.cname),\r\n      classno: (state.classno = values.classno),\r\n      startDate: (state.startDate = values.startDate),\r\n      nation: (state.nation = values.nation),\r\n      region: (state.region = values.region),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n      department: (state.department = values.department),\r\n      street: (state.street = values.street),\r\n      years: (state.years = values.years),\r\n      term: (state.term = values.term),\r\n    });\r\n\r\n    props.updateTeacher(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"teacher\" ? \"/teacher\" : \"/teacherInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const cnameselect = (e) => {\r\n    setselectdata(e);\r\n  };\r\n  const deparmentselect = (e) => {\r\n    setdeparmentdata(e);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教师基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"男\">男</Radio>\r\n              <Radio value=\"女\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"学年\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"years\"} noStyle>\r\n                <Select placeholder=\"请选择\">\r\n                  <Option value=\"20202021\">2020-2021</Option>\r\n                  <Option value=\"20192020\">2019-2020</Option>\r\n                  <Option value=\"20182019\">2018-2019</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name={\"term\"} label=\"学期\" noStyle>\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value=\"第一学期\">第一学期</Option>\r\n                  <Option value=\"第二学期\">第二学期</Option>\r\n                  <Option value=\"第三学期\">第三学期</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select onChange={deparmentselect} placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            <Select placeholder=\"请输入你的学历\">\r\n              <Option value=\"博士\">博士</Option>\r\n              <Option value=\"研究生\">研究生</Option>\r\n              <Option value=\"本科\">本科</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"专业名\">\r\n            {deparmentdata === \"电子信息与工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"网络工程\">网络工程</Option>\r\n                  <Option value=\"计算机技术\">计算机技术</Option>\r\n                  <Option value=\"电子信息工程\">电子信息工程</Option>\r\n                  <Option value=\"人工智能\">人工智能</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"建筑工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"建筑学\">建筑学</Option>\r\n                  <Option value=\"土木工程\">土木工程</Option>\r\n                  <Option value=\"工程管理\">工程管理</Option>\r\n                  <Option value=\"交通工程\">交通工程</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"机械工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"材料成型及控制工程\">材料成型及控制工程</Option>\r\n                  <Option value=\"车辆工程\">车辆工程</Option>\r\n                  <Option value=\"化学工程与工艺\">化学工程与工艺</Option>\r\n                  <Option value=\"油气储运工程\">油气储运工程</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"交通学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"金融工程\">金融工程</Option>\r\n                  <Option value=\"会计学\">会计学</Option>\r\n                  <Option value=\"国际经济与贸易\">国际经济与贸易</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"化学工程学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"应用统计学\">应用统计学</Option>\r\n                  <Option value=\"物流管理\">物流管理</Option>\r\n                  <Option value=\"材料物理\">材料物理</Option>\r\n                  <Option value=\"应用化学\">应用化学</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"材料学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"英语\">英语</Option>\r\n                  <Option value=\"日语\">日语</Option>\r\n                  <Option value=\"德语\">德语</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            {deparmentdata === \"理学院\" && (\r\n              <Form.Item name={\"cname\"} noStyle>\r\n                <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                  <Option value=\"工业设计\">工业设计</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n\r\n            {/* <Form.Item\r\n                name={\"classno\"}\r\n                label=\"班级\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"班级信息必须输入！\" }]}\r\n              >\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value={seletdata + \"1\"}>{seletdata + \"1\"}</Option>\r\n                  <Option value={seletdata + \"2\"}>{seletdata + \"2\"}</Option>\r\n                  <Option value={seletdata + \"3\"}>{seletdata + \"3\"}</Option>\r\n                </Select>\r\n              </Form.Item> */}\r\n          </Form.Item>\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"hb\">河北</Option>\r\n                  <Option value=\"sx\">山西</Option>\r\n                  <Option value=\"ln\">辽宁</Option>\r\n                  <Option value=\"jl\">吉林</Option>\r\n                  <Option value=\"hlj\">黑龙江</Option>\r\n                  <Option value=\"js\">江苏</Option>\r\n                  <Option value=\"zj\">浙江</Option>\r\n                  <Option value=\"ah\">安徽</Option>\r\n                  <Option value=\"fj\">福建</Option>\r\n                  <Option value=\"jx\">江西</Option>\r\n                  <Option value=\"sd\">山东</Option>\r\n                  <Option value=\"hna\">河南</Option>\r\n                  <Option value=\"hb\">湖北</Option>\r\n                  <Option value=\"hnb\">湖南</Option>\r\n                  <Option value=\"gd\">广东</Option>\r\n                  <Option value=\"hnc\">海南</Option>\r\n                  <Option value=\"sc\">四川</Option>\r\n                  <Option value=\"gz\">贵州</Option>\r\n                  <Option value=\"nmg\">内蒙古</Option>\r\n                  <Option value=\"gx\">广西壮族</Option>\r\n                  <Option value=\"xz\">西藏</Option>\r\n                  <Option value=\"nx\">宁夏回族</Option>\r\n                  <Option value=\"xj\">新疆维吾尔</Option>\r\n                  <Option value=\"bj\">北京</Option>\r\n                  <Option value=\"tj\">天津</Option>\r\n                  <Option value=\"sh\">上海</Option>\r\n                  <Option value=\"cq\">重庆</Option>\r\n                  <Option value=\"xg\">香港</Option>\r\n                  <Option value=\"am\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入工作职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateTeacher,\r\n})(TeacherInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx",["169"],"import Administer from \"@/containers/admin/components/admin\";\r\nimport React from \"react\";\r\nimport styles from \"./index.module.less\";\r\n\r\nexport default function Admin() {\r\n  return <Administer></Administer>;\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx",["170","171","172","173","174","175"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateStudent } from \"../../redux/actions\";\r\n\r\nfunction StudentInfo(props: {\r\n  updateStudent: (arg0: {\r\n    realName: string;\r\n    sex: string;\r\n    affiliation: string;\r\n    age: string;\r\n    years: string;\r\n    term: string;\r\n    nation: string;\r\n    cname: string;\r\n    classno: string;\r\n    region: string;\r\n    phone: string;\r\n    department: string;\r\n    IDcard: string;\r\n    recommend: string;\r\n    eMail: string;\r\n    street: string;\r\n    address: string;\r\n  }) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    sex: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    years: \"\",\r\n    term: \"\",\r\n    cname: \"\",\r\n    classno: \"\",\r\n\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    recommend: \"\",\r\n    department: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    address: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      sex: (state.sex = values.sex),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      cname: (state.cname = values.cname),\r\n      classno: (state.classno = values.classno),\r\n      age: (state.age = values.age),\r\n\r\n      region: (state.region = values.region),\r\n      phone: (state.phone = values.phone),\r\n      nation: (state.nation = values.nation),\r\n      department: (state.department = values.department),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      recommend: (state.recommend = values.recommend),\r\n      eMail: (state.eMail = values.eMail),\r\n      street: (state.street = values.street),\r\n      address: (state.address = values.address),\r\n      years: (state.years = values.years),\r\n      term: (state.term = values.term),\r\n    });\r\n    props.updateStudent(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"student\" ? \"/student\" : \"/studentInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const cnameselect = (e) => {\r\n    setselectdata(e);\r\n  };\r\n  const deparmentselect = (e) => {\r\n    setdeparmentdata(e);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>学生基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"男\">男</Radio>\r\n              <Radio value=\"女\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select onChange={deparmentselect} placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"学年\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"years\"} noStyle>\r\n                <Select placeholder=\"请选择\">\r\n                  <Option value=\"20202021\">2020-2021</Option>\r\n                  <Option value=\"20192020\">2019-2020</Option>\r\n                  <Option value=\"20182019\">2018-2019</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name={\"term\"} label=\"学期\" noStyle>\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value=\"第一学期\">第一学期</Option>\r\n                  <Option value=\"第二学期\">第二学期</Option>\r\n                  <Option value=\"第三学期\">第三学期</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"专业名\">\r\n            <Input.Group compact>\r\n              {deparmentdata === \"电子信息与工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"网络工程\">网络工程</Option>\r\n                    <Option value=\"计算机技术\">计算机技术</Option>\r\n                    <Option value=\"电子信息工程\">电子信息工程</Option>\r\n                    <Option value=\"人工智能\">人工智能</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"建筑工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"建筑学\">建筑学</Option>\r\n                    <Option value=\"土木工程\">土木工程</Option>\r\n                    <Option value=\"工程管理\">工程管理</Option>\r\n                    <Option value=\"交通工程\">交通工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"机械工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"材料成型及控制工程\">\r\n                      材料成型及控制工程\r\n                    </Option>\r\n                    <Option value=\"车辆工程\">车辆工程</Option>\r\n                    <Option value=\"化学工程与工艺\">化学工程与工艺</Option>\r\n                    <Option value=\"油气储运工程\">油气储运工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"交通学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"金融工程\">金融工程</Option>\r\n                    <Option value=\"会计学\">会计学</Option>\r\n                    <Option value=\"国际经济与贸易\">国际经济与贸易</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"化学工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"应用统计学\">应用统计学</Option>\r\n                    <Option value=\"物流管理\">物流管理</Option>\r\n                    <Option value=\"材料物理\">材料物理</Option>\r\n                    <Option value=\"应用化学\">应用化学</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"材料学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"英语\">英语</Option>\r\n                    <Option value=\"日语\">日语</Option>\r\n                    <Option value=\"德语\">德语</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"理学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"工业设计\">工业设计</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n\r\n              <Form.Item\r\n                name={\"classno\"}\r\n                label=\"班级\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"班级信息必须输入！\" }]}\r\n              >\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value={seletdata + \"1\"}>{seletdata + \"1\"}</Option>\r\n                  <Option value={seletdata + \"2\"}>{seletdata + \"2\"}</Option>\r\n                  <Option value={seletdata + \"3\"}>{seletdata + \"3\"}</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"hb\">河北</Option>\r\n                  <Option value=\"sx\">山西</Option>\r\n                  <Option value=\"ln\">辽宁</Option>\r\n                  <Option value=\"jl\">吉林</Option>\r\n                  <Option value=\"hlj\">黑龙江</Option>\r\n                  <Option value=\"js\">江苏</Option>\r\n                  <Option value=\"zj\">浙江</Option>\r\n                  <Option value=\"ah\">安徽</Option>\r\n                  <Option value=\"fj\">福建</Option>\r\n                  <Option value=\"jx\">江西</Option>\r\n                  <Option value=\"sd\">山东</Option>\r\n                  <Option value=\"hna\">河南</Option>\r\n                  <Option value=\"hb\">湖北</Option>\r\n                  <Option value=\"hnb\">湖南</Option>\r\n                  <Option value=\"gd\">广东</Option>\r\n                  <Option value=\"hnc\">海南</Option>\r\n                  <Option value=\"sc\">四川</Option>\r\n                  <Option value=\"gz\">贵州</Option>\r\n                  <Option value=\"nmg\">内蒙古</Option>\r\n                  <Option value=\"gx\">广西壮族</Option>\r\n                  <Option value=\"xz\">西藏</Option>\r\n                  <Option value=\"nx\">宁夏回族</Option>\r\n                  <Option value=\"xj\">新疆维吾尔</Option>\r\n                  <Option value=\"bj\">北京</Option>\r\n                  <Option value=\"tj\">天津</Option>\r\n                  <Option value=\"sh\">上海</Option>\r\n                  <Option value=\"cq\">重庆</Option>\r\n                  <Option value=\"xg\">香港</Option>\r\n                  <Option value=\"am\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"address\"}\r\n            label=\"家庭地址\"\r\n            rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"请输入家庭地址\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"recommend\"} label=\"自我简介\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入自我简介\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateStudent,\r\n})(StudentInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx",["176","177","178","179","180","181","182","183"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  connect,\r\n  DefaultRootState,\r\n  RootStateOrAny,\r\n  useSelector,\r\n} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav/index.tsx\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateAdmin } from \"../../redux/actions\";\r\n\r\nfunction AdminInfo(props: {\r\n  user: { IDcard: any; type: any };\r\n  updateAdmin: (arg0: {\r\n    realName: string;\r\n    affiliation: string;\r\n    age: string;\r\n\r\n    phone: string;\r\n    IDcard: string;\r\n    eMail: string;\r\n    diploma: string;\r\n    department: string;\r\n    duty: string;\r\n  }) => void;\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    diploma: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    eMail: \"\",\r\n\r\n    department: \"\",\r\n    duty: \"\",\r\n  });\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"admin\" ? \"/admin\" : \"/adminInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      diploma: (state.diploma = values.diploma),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n\r\n      department: (state.department = values.department),\r\n      duty: (state.duty = values.duty),\r\n    });\r\n    props.updateAdmin(state);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教务员基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"男\">男</Radio>\r\n              <Radio value=\"女\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100 }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            <Select placeholder=\"请输入你的学历\">\r\n              <Option value=\"博士\">博士</Option>\r\n              <Option value=\"研究生\">研究生</Option>\r\n              <Option value=\"本科\">本科</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateAdmin,\r\n})(AdminInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts",[],"D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\api\\index.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx",["184","185","186"],"import { Button, Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./index.less\";\r\n\r\nimport { TeacherUserid } from \"@/redux/actions\";\r\nimport Cookies from \"js-cookie\";\r\nimport GradeTable from \"../gradetable\";\r\nimport StuInfo from \"@/containers/teacher/components/stuinfo\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nconst { Header, Sider, Content, Footer } = Layout;\r\nconst cookicedata: any = [];\r\nfunction Teachers(props) {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n  });\r\n  const [clickkey, setclickkey] = useState(\"1\");\r\n  // useEffect(() => {\r\n  //   props.getUser();\r\n  // }, [StuInfo]);\r\n\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  const menuclick = (e) => {\r\n    setclickkey(e.key);\r\n  };\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        style={{ backgroundColor: \"#fff\" }}\r\n        collapsed={state.collapsed}\r\n      >\r\n        <div className=\"logo\">\r\n          {props.cooikeuserid[0]?.realName &&\r\n            props.cooikeuserid[0].realName + \"老师你好！\"}\r\n        </div>\r\n        <Menu\r\n          selectable\r\n          theme=\"light\"\r\n          onClick={menuclick}\r\n          mode=\"inline\"\r\n          selectedKeys={[clickkey]}\r\n          defaultSelectedKeys={[clickkey]}\r\n        >\r\n          <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n            成绩管理\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n            成绩表\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n            个人信息\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: toggle,\r\n            }\r\n          )}\r\n          <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n            退出\r\n          </Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 618,\r\n          }}\r\n        >\r\n          {clickkey === \"1\" && <StuInfo></StuInfo>}\r\n          {clickkey === \"2\" && <GradeTable></GradeTable>}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  //  函数确定\r\n  { TeacherUserid }\r\n)(Teachers);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx",["187"],"import { Button, Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"./index.less\";\r\nimport Cookies from \"js-cookie\";\r\nconst { Header, Sider, Content, Footer } = Layout;\r\nexport default function Teachers() {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n  });\r\n\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        style={{ backgroundColor: \"#fff\" }}\r\n        collapsed={state.collapsed}\r\n      >\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n          <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n            成绩管理\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n            成绩表\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n            个人信息\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: toggle,\r\n            }\r\n          )}\r\n          <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n            退出\r\n          </Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 618,\r\n          }}\r\n        >\r\n          Content\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx",["188"],"import { Layout, Menu, Breadcrumb, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./index.less\";\r\nimport Cookies from \"js-cookie\";\r\nexport default function CommonLayout() {\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        <div className=\"logo\" />\r\n\r\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\r\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n        </Menu>\r\n        <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n          退出\r\n        </Button>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>List</Breadcrumb.Item>\r\n          <Breadcrumb.Item>App</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-content\">Content</div>\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        Ant Design ©2018 Created by Ant UED\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx",["189","190","191","192","193","194","195","196","197","198","199"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Tooltip,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Searchstu, TeacherUserid, InfoStu } from \"@/redux/actions\";\r\nimport DeleteStudentModel from \"../deletestudentmodel\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport EditModal from \"../modal\";\r\nimport {\r\n  RequestData,\r\n  UseFetchDataAction,\r\n} from \"@ant-design/pro-table/lib/typing\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\n\r\nlet flag = 0;\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst StuInfo = (props) => {\r\n  const actionRef = useRef<ActionType>();\r\n  const [form] = Form.useForm();\r\n  const [data, setData]: any[] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      console.log(\"cookiceuserid\", cookiceuserid);\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        cname: cookiceuserid[i].cname,\r\n        classno: cookiceuserid[i].classno,\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    props.InfoStu({ id: userid });\r\n  }, []);\r\n\r\n  const formatedata = props.user;\r\n  const { Option } = Select;\r\n  const temp = formatedata.length;\r\n\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        classno: formatedata[i].classno,\r\n        sex: formatedata[i].sex,\r\n        phone: formatedata[i].phone,\r\n        years: formatedata[i].years,\r\n        term: formatedata[i].term,\r\n      });\r\n    }\r\n  }\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      username: \"\",\r\n      realName: \"\",\r\n      cname: \"\",\r\n      classno: \"\",\r\n      phone: \"\",\r\n\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  const [tempsearch, settempsearch]: any = useState([]);\r\n\r\n  const [tempdata, settempdata] = useState();\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学年\",\r\n      dataIndex: \"years\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学期\",\r\n      dataIndex: \"term\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"sex\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"电话\",\r\n      dataIndex: \"phone\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Typography.Link\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => {\r\n                settempdata(record);\r\n              }}\r\n            >\r\n              <EditModal tempdata={tempdata}></EditModal>\r\n            </Typography.Link>\r\n            <Typography.Link\r\n              onClick={() => {\r\n                settempdata(record);\r\n              }}\r\n            >\r\n              <DeleteStudentModel tempdata={tempdata}></DeleteStudentModel>\r\n            </Typography.Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.Searchstu(e);\r\n    flag = 1;\r\n  };\r\n\r\n  const search = props.stuSearch;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        classno: search[i].classno,\r\n        sex: search[i].sex,\r\n        phone: search[i].phone,\r\n        years: search[i].years,\r\n        term: search[i].term,\r\n      });\r\n    }\r\n  }\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        actionRef={actionRef}\r\n        search={false}\r\n        options={{ fullScreen: true, reload: false }}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered={true}\r\n        headerTitle=\"学生信息表\"\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"years\"} label=\"学年\">\r\n              <Select placeholder=\"请选择学年\">\r\n                <Option value=\"20202021\">2020-2021</Option>\r\n                <Option value=\"20192020\">2019-2020</Option>\r\n                <Option value=\"20182019\">2018-2019</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"term\"} label=\"学期\">\r\n              <Select placeholder=\"请选择学期\">\r\n                <Option value=\"第一学期\">第一学期</Option>\r\n                <Option value=\"第二学期\">第二学期</Option>\r\n                <Option value=\"第三学期\">第三学期</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"classno\"} label=\"班级\">\r\n              <Select placeholder=\"请选择班级\">\r\n                <Option value={cookicedata[0]?.cname + \"1\"}>\r\n                  {cookicedata[0]?.cname + \"1\"}\r\n                </Option>\r\n                <Option value={cookicedata[0]?.cname + \"2\"}>\r\n                  {cookicedata[0]?.cname + \"2\"}\r\n                </Option>\r\n                <Option value={cookicedata[0]?.cname + \"3\"}>\r\n                  {cookicedata[0]?.cname + \"3\"}\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={\r\n          flag === 0\r\n            ? [...data]\r\n            : [...searchdata] || (flag === 2 && [...tempsearch])\r\n        }\r\n        columns={columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n    stuSearch: state.stuSearch,\r\n  }),\r\n  //  函数确定\r\n  { Searchstu, TeacherUserid, InfoStu }\r\n)(StuInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx",["200","201"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nconst EditModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<FormOutlined />} onClick={showModal}>\r\n        编辑\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"编辑成绩表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <GradeEdit tempdata={tempdata}></GradeEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx",["202","203","204","205","206","207","208","209"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport AddGrade from \"../addgrade\";\r\nimport request from \"umi-request\";\r\nimport { GradeInfo, AddGradeCount } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport DeleteGradeModel from \"../deletegrademodel\";\r\nimport { SyncOutlined, FormOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GradeEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { tempdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(tempdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (tempdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </a>\r\n            <Popconfirm title=\"确定取消?\" onConfirm={cancel}>\r\n              <a>取消</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <Typography.Link\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => edit(record)}\r\n            >\r\n              <Button type=\"link\" icon={<FormOutlined />}>\r\n                编辑\r\n              </Button>\r\n            </Typography.Link>\r\n            <Typography.Link>\r\n              <DeleteGradeModel clickdata={record}></DeleteGradeModel>\r\n            </Typography.Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average = 0;\r\n  let countgpa = 0;\r\n  let averagegpa = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = count / n;\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = countgpa / n;\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = countcredit / n;\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <AddGrade tempdata={tempdata}></AddGrade>,\r\n          <Popconfirm\r\n            title=\"同步信息\"\r\n            onConfirm={handleOk}\r\n            onCancel={handleCancel}\r\n          >\r\n            <Tooltip title=\"同步\">\r\n              <Button\r\n                style={{ border: 0 }}\r\n                shape=\"circle\"\r\n                icon={<SyncOutlined />}\r\n              ></Button>\r\n            </Tooltip>\r\n          </Popconfirm>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"学生成绩信息表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo, AddGradeCount }\r\n)(GradeEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx",["210","211","212"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nimport AddDetail from \"./components/adddetail\";\r\nconst AddGrade = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const { tempdata } = props;\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        录入\r\n      </Button>\r\n      <Modal\r\n        title=\"录入成绩表\"\r\n        width={700}\r\n        // afterClose={() => {\r\n        //   window.history.go(0);\r\n        // }}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <AddDetail  tempdata={tempdata}></AddDetail>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(AddGrade);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { addGrade } from \"@/redux/actions\";\r\nfunction AddDetail(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    realName: \"\",\r\n    courseNo: \"\",\r\n    classno: \"\",\r\n    credit: \"\",\r\n    courseType: \"\",\r\n    courseName: \"\",\r\n    grade: Number,\r\n    cheat: \"\",\r\n    cname: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const { tempdata } = props;\r\n  const onFinish = async (values: any) => {\r\n    setState({\r\n      username: (state.username = tempdata.username),\r\n      realName: (state.realName = tempdata.realName),\r\n      cname: (state.cname = tempdata.cname),\r\n      classno: (state.classno = tempdata.classno),\r\n      courseNo: (state.courseNo = values.courseNo),\r\n      credit: (state.credit = values.credit),\r\n      courseType: (state.courseType = values.courseType),\r\n      courseName: (state.courseName = values.courseName),\r\n      grade: (state.grade = values.cheat === \"作弊\" ? 0 : values.grade),\r\n      cheat: (state.cheat = values.cheat),\r\n    });\r\n\r\n    await props.addGrade(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const btnclick = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      style={{ margin: \"17px auto\" }}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name={\"username\"} label=\"学号\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学号\"\r\n          defaultValue={tempdata.username}\r\n          value={tempdata.username}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"realName\"} label=\"姓名\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入姓名\"\r\n          defaultValue={tempdata.realName}\r\n          value={tempdata.realName}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"cname\"} label=\"专业\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入专业\"\r\n          defaultValue={tempdata.cname}\r\n          value={tempdata.cname}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"classno\"} label=\"班级\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入班级\"\r\n          defaultValue={tempdata.classno}\r\n          value={tempdata.classno}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseNo\"} label=\"课程号\" rules={[{ required: true }]}>\r\n        <Input placeholder=\"请输入课程号\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"courseName\"}\r\n        label=\"课程名称\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input placeholder=\"请输入课程名称\" />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseType\"} label=\"课程类型\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"公共课\">公共课</Option>\r\n          <Option value=\"选修课\">选修课</Option>\r\n          <Option value=\"必修课\">必修课</Option>\r\n          <Option value=\"辅修课\">辅修课</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"grade\"} label=\"成绩\">\r\n        <InputNumber style={{ width: 435 }} placeholder=\"请输入成绩\" />\r\n      </Form.Item>\r\n      <Form.Item name={\"credit\"} label=\"学分\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"1.0\">1.0</Option>\r\n          <Option value=\"1.5\">1.5</Option>\r\n          <Option value=\"2.0\">2.0</Option>\r\n          <Option value=\"2.5\">2.5</Option>\r\n          <Option value=\"3.0\">3.0</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"cheat\"} label=\"作弊\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"作弊\">作弊</Option>\r\n          <Option value=\"正常\">正常</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <Button type=\"primary\" onClick={btnclick} htmlType=\"submit\">\r\n          信息提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ grade: state.grade }), {\r\n  addGrade,\r\n})(AddDetail);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletestudentmodel\\index.tsx",["228","229","230"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteStudent } from \"@/redux/actions\";\r\nimport { DeleteOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nconst DeleteStudentModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    props.DeleteStudent(tempdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  }),\r\n  //  函数确定\r\n  { DeleteStudent }\r\n)(DeleteStudentModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletegrademodel\\index.tsx",["231","232"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteGrade } from \"@/redux/actions\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst DeleteGradeModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    // console.log(\"clickdata\", clickdata);\r\n\r\n    props.DeleteGrade(clickdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n  }),\r\n  //  函数确定\r\n  { DeleteGrade }\r\n)(DeleteGradeModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\index.tsx",["233","234","235","236","237","238","239","240"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\model\\index.tsx",["241","242"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\gradesearch\\index.tsx",["243","244","245","246","247","248","249","250","251","252","253"],{"ruleId":"254","severity":1,"message":"255","line":5,"column":37,"nodeType":"256","messageId":"257","endLine":5,"endColumn":45},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":2,"column":27,"nodeType":"256","messageId":"257","endLine":2,"endColumn":36},{"ruleId":"264","severity":1,"message":"265","line":159,"column":15,"nodeType":"266","endLine":159,"endColumn":36},{"ruleId":"262","severity":1,"message":"267","line":6,"column":31,"nodeType":"256","messageId":"257","endLine":6,"endColumn":36},{"ruleId":"264","severity":1,"message":"265","line":108,"column":24,"nodeType":"266","endLine":108,"endColumn":48},{"ruleId":"262","severity":1,"message":"268","line":36,"column":10,"nodeType":"256","messageId":"257","endLine":36,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":76,"column":15,"nodeType":"271","messageId":"272","endLine":76,"endColumn":31},{"ruleId":"269","severity":1,"message":"270","line":77,"column":14,"nodeType":"271","messageId":"272","endLine":77,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":78,"column":10,"nodeType":"271","messageId":"272","endLine":78,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":80,"column":14,"nodeType":"271","messageId":"272","endLine":80,"endColumn":33},{"ruleId":"269","severity":1,"message":"270","line":81,"column":15,"nodeType":"271","messageId":"272","endLine":81,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":84,"column":14,"nodeType":"271","messageId":"272","endLine":84,"endColumn":45},{"ruleId":"262","severity":1,"message":"273","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":94,"column":15,"nodeType":"271","messageId":"272","endLine":94,"endColumn":31},{"ruleId":"269","severity":1,"message":"270","line":95,"column":14,"nodeType":"271","messageId":"272","endLine":95,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":96,"column":10,"nodeType":"271","messageId":"272","endLine":96,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":98,"column":14,"nodeType":"271","messageId":"272","endLine":98,"endColumn":33},{"ruleId":"269","severity":1,"message":"270","line":99,"column":15,"nodeType":"271","messageId":"272","endLine":99,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":102,"column":14,"nodeType":"271","messageId":"272","endLine":102,"endColumn":45},{"ruleId":"262","severity":1,"message":"274","line":6,"column":3,"nodeType":"256","messageId":"257","endLine":6,"endColumn":19},{"ruleId":"262","severity":1,"message":"275","line":8,"column":3,"nodeType":"256","messageId":"257","endLine":8,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":58,"column":15,"nodeType":"271","messageId":"272","endLine":58,"endColumn":31},{"ruleId":"269","severity":1,"message":"270","line":59,"column":14,"nodeType":"271","messageId":"272","endLine":59,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":60,"column":10,"nodeType":"271","messageId":"272","endLine":60,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":62,"column":14,"nodeType":"271","messageId":"272","endLine":62,"endColumn":33},{"ruleId":"269","severity":1,"message":"270","line":63,"column":15,"nodeType":"271","messageId":"272","endLine":63,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":66,"column":14,"nodeType":"271","messageId":"272","endLine":66,"endColumn":45},{"ruleId":"262","severity":1,"message":"276","line":17,"column":33,"nodeType":"256","messageId":"257","endLine":17,"endColumn":39},{"ruleId":"262","severity":1,"message":"277","line":18,"column":7,"nodeType":"256","messageId":"257","endLine":18,"endColumn":23},{"ruleId":"278","severity":1,"message":"279","line":42,"column":6,"nodeType":"280","endLine":42,"endColumn":8,"suggestions":"281"},{"ruleId":"262","severity":1,"message":"276","line":12,"column":33,"nodeType":"256","messageId":"257","endLine":12,"endColumn":39},{"ruleId":"262","severity":1,"message":"282","line":6,"column":27,"nodeType":"256","messageId":"257","endLine":6,"endColumn":32},{"ruleId":"262","severity":1,"message":"283","line":3,"column":3,"nodeType":"256","messageId":"257","endLine":3,"endColumn":8},{"ruleId":"262","severity":1,"message":"284","line":6,"column":3,"nodeType":"256","messageId":"257","endLine":6,"endColumn":13},{"ruleId":"262","severity":1,"message":"285","line":21,"column":8,"nodeType":"256","messageId":"257","endLine":21,"endColumn":15},{"ruleId":"262","severity":1,"message":"286","line":24,"column":3,"nodeType":"256","messageId":"257","endLine":24,"endColumn":14},{"ruleId":"262","severity":1,"message":"287","line":25,"column":3,"nodeType":"256","messageId":"257","endLine":25,"endColumn":21},{"ruleId":"262","severity":1,"message":"288","line":70,"column":16,"nodeType":"256","messageId":"257","endLine":70,"endColumn":23},{"ruleId":"262","severity":1,"message":"289","line":73,"column":9,"nodeType":"256","messageId":"257","endLine":73,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":77,"column":6,"nodeType":"280","endLine":77,"endColumn":8,"suggestions":"290"},{"ruleId":"278","severity":1,"message":"279","line":108,"column":6,"nodeType":"280","endLine":108,"endColumn":8,"suggestions":"291"},{"ruleId":"262","severity":1,"message":"292","line":129,"column":9,"nodeType":"256","messageId":"257","endLine":129,"endColumn":13},{"ruleId":"262","severity":1,"message":"293","line":145,"column":22,"nodeType":"256","messageId":"257","endLine":145,"endColumn":35},{"ruleId":"262","severity":1,"message":"263","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":26},{"ruleId":"262","severity":1,"message":"294","line":4,"column":28,"nodeType":"256","messageId":"257","endLine":4,"endColumn":34},{"ruleId":"262","severity":1,"message":"283","line":3,"column":3,"nodeType":"256","messageId":"257","endLine":3,"endColumn":8},{"ruleId":"262","severity":1,"message":"285","line":16,"column":8,"nodeType":"256","messageId":"257","endLine":16,"endColumn":15},{"ruleId":"278","severity":1,"message":"295","line":93,"column":6,"nodeType":"280","endLine":93,"endColumn":8,"suggestions":"296"},{"ruleId":"264","severity":1,"message":"297","line":223,"column":13,"nodeType":"266","endLine":229,"endColumn":14},{"ruleId":"298","severity":1,"message":"299","line":224,"column":20,"nodeType":"271","messageId":"300","endLine":224,"endColumn":34},{"ruleId":"264","severity":1,"message":"265","line":233,"column":15,"nodeType":"266","endLine":233,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":279,"column":19,"nodeType":"303","messageId":"304","endLine":279,"endColumn":21},{"ruleId":"262","severity":1,"message":"305","line":313,"column":10,"nodeType":"256","messageId":"257","endLine":313,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":26},{"ruleId":"262","severity":1,"message":"294","line":4,"column":28,"nodeType":"256","messageId":"257","endLine":4,"endColumn":34},{"ruleId":"262","severity":1,"message":"306","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":17},{"ruleId":"262","severity":1,"message":"255","line":5,"column":10,"nodeType":"256","messageId":"257","endLine":5,"endColumn":18},{"ruleId":"262","severity":1,"message":"267","line":6,"column":44,"nodeType":"256","messageId":"257","endLine":6,"endColumn":49},{"ruleId":"262","severity":1,"message":"273","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":14},{"ruleId":"262","severity":1,"message":"307","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":17},{"ruleId":"262","severity":1,"message":"308","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":18},{"ruleId":"262","severity":1,"message":"268","line":24,"column":10,"nodeType":"256","messageId":"257","endLine":24,"endColumn":19},{"ruleId":"262","severity":1,"message":"309","line":24,"column":21,"nodeType":"256","messageId":"257","endLine":24,"endColumn":34},{"ruleId":"262","severity":1,"message":"310","line":25,"column":10,"nodeType":"256","messageId":"257","endLine":25,"endColumn":23},{"ruleId":"262","severity":1,"message":"311","line":25,"column":25,"nodeType":"256","messageId":"257","endLine":25,"endColumn":41},{"ruleId":"269","severity":1,"message":"270","line":50,"column":15,"nodeType":"271","messageId":"272","endLine":50,"endColumn":31},{"ruleId":"269","severity":1,"message":"270","line":51,"column":14,"nodeType":"271","messageId":"272","endLine":51,"endColumn":30},{"ruleId":"269","severity":1,"message":"270","line":52,"column":10,"nodeType":"271","messageId":"272","endLine":52,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":54,"column":14,"nodeType":"271","messageId":"272","endLine":54,"endColumn":33},{"ruleId":"269","severity":1,"message":"270","line":55,"column":15,"nodeType":"271","messageId":"272","endLine":55,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":58,"column":14,"nodeType":"271","messageId":"272","endLine":58,"endColumn":45},{"ruleId":"262","severity":1,"message":"312","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":15},{"ruleId":"262","severity":1,"message":"313","line":5,"column":26,"nodeType":"256","messageId":"257","endLine":5,"endColumn":51},{"ruleId":"262","severity":1,"message":"305","line":7,"column":10,"nodeType":"256","messageId":"257","endLine":7,"endColumn":24},{"ruleId":"262","severity":1,"message":"312","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":15},{"ruleId":"262","severity":1,"message":"305","line":7,"column":10,"nodeType":"256","messageId":"257","endLine":7,"endColumn":24},{"ruleId":"262","severity":1,"message":"283","line":2,"column":3,"nodeType":"256","messageId":"257","endLine":2,"endColumn":8},{"ruleId":"262","severity":1,"message":"314","line":4,"column":3,"nodeType":"256","messageId":"257","endLine":4,"endColumn":8},{"ruleId":"262","severity":1,"message":"315","line":7,"column":3,"nodeType":"256","messageId":"257","endLine":7,"endColumn":6},{"ruleId":"278","severity":1,"message":"279","line":31,"column":6,"nodeType":"280","endLine":31,"endColumn":8,"suggestions":"316"},{"ruleId":"278","severity":1,"message":"317","line":63,"column":6,"nodeType":"280","endLine":63,"endColumn":8,"suggestions":"318"},{"ruleId":"262","severity":1,"message":"319","line":100,"column":9,"nodeType":"256","messageId":"257","endLine":100,"endColumn":21},{"ruleId":"262","severity":1,"message":"320","line":104,"column":9,"nodeType":"256","messageId":"257","endLine":104,"endColumn":17},{"ruleId":"262","severity":1,"message":"321","line":111,"column":9,"nodeType":"256","messageId":"257","endLine":111,"endColumn":19},{"ruleId":"262","severity":1,"message":"263","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":26},{"ruleId":"262","severity":1,"message":"294","line":4,"column":28,"nodeType":"256","messageId":"257","endLine":4,"endColumn":34},{"ruleId":"262","severity":1,"message":"283","line":3,"column":3,"nodeType":"256","messageId":"257","endLine":3,"endColumn":8},{"ruleId":"262","severity":1,"message":"284","line":6,"column":3,"nodeType":"256","messageId":"257","endLine":6,"endColumn":13},{"ruleId":"262","severity":1,"message":"322","line":8,"column":3,"nodeType":"256","messageId":"257","endLine":8,"endColumn":13},{"ruleId":"262","severity":1,"message":"285","line":16,"column":8,"nodeType":"256","messageId":"257","endLine":16,"endColumn":15},{"ruleId":"262","severity":1,"message":"292","line":78,"column":9,"nodeType":"256","messageId":"257","endLine":78,"endColumn":13},{"ruleId":"278","severity":1,"message":"323","line":93,"column":6,"nodeType":"280","endLine":93,"endColumn":8,"suggestions":"324"},{"ruleId":"262","severity":1,"message":"325","line":121,"column":9,"nodeType":"256","messageId":"257","endLine":121,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":241,"column":19,"nodeType":"303","messageId":"304","endLine":241,"endColumn":21},{"ruleId":"262","severity":1,"message":"305","line":275,"column":10,"nodeType":"256","messageId":"257","endLine":275,"endColumn":24},{"ruleId":"262","severity":1,"message":"326","line":277,"column":9,"nodeType":"256","messageId":"257","endLine":277,"endColumn":21},{"ruleId":"262","severity":1,"message":"327","line":283,"column":9,"nodeType":"256","messageId":"257","endLine":283,"endColumn":17},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["328"],"no-negated-in-lhs",["329"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Radio' is defined but never used.","'seletdata' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'styles' is defined but never used.","'DefaultRootState' is defined but never used.","'useSelector' is defined but never used.","'Footer' is assigned a value but never used.","'cookicedata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'userid'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["330"],"'Sider' is assigned a value but never used.","'Table' is defined but never used.","'Popconfirm' is defined but never used.","'request' is defined but never used.","'RequestData' is defined but never used.","'UseFetchDataAction' is defined but never used.","'setData' is assigned a value but never used.","'isEditing' is assigned a value but never used.",["331"],["332"],"'edit' is assigned a value but never used.","'settempsearch' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'tempdata'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["333"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isModalVisible' is assigned a value but never used.","'GradeEdit' is defined but never used.","'GlobalTab' is defined but never used.","'selfStyles' is defined but never used.","'setselectdata' is assigned a value but never used.","'deparmentdata' is assigned a value but never used.","'setdeparmentdata' is assigned a value but never used.","'Modal' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'Space' is defined but never used.","'Tag' is defined but never used.",["334"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["335"],"'clearFilters' is assigned a value but never used.","'clearAll' is assigned a value but never used.","'setAgeSort' is assigned a value but never used.","'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'clickdata' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["336"],"'save' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'handleOk' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"337","fix":"340"},{"desc":"341","fix":"342"},{"desc":"337","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [props, userid]",{"range":"348","text":"349"},{"range":"350","text":"349"},{"range":"351","text":"349"},"Update the dependencies array to be: [props, tempdata]",{"range":"352","text":"353"},{"range":"354","text":"349"},"Update the dependencies array to be: [props]",{"range":"355","text":"356"},"Update the dependencies array to be: [clickdata, props]",{"range":"357","text":"358"},[1149,1151],"[props, userid]",[1881,1883],[3040,3042],[2092,2094],"[props, tempdata]",[825,827],[2015,2017],"[props]",[1984,1986],"[clickdata, props]"]