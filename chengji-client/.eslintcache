[{"F:\\webapp\\chengji-client\\src\\index.js":"1","F:\\webapp\\chengji-client\\src\\redux\\store.js":"2","F:\\webapp\\chengji-client\\src\\containers\\register\\register.jsx":"3","F:\\webapp\\chengji-client\\src\\containers\\main\\main.jsx":"4","F:\\webapp\\chengji-client\\src\\containers\\login\\login.jsx":"5","F:\\webapp\\chengji-client\\src\\redux\\reducers.js":"6","F:\\webapp\\chengji-client\\src\\redux\\actions.js":"7","F:\\webapp\\chengji-client\\src\\containers\\studentInfo\\studentInfo.jsx":"8","F:\\webapp\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.jsx":"9","F:\\webapp\\chengji-client\\src\\components\\fonter\\fonter.jsx":"10","F:\\webapp\\chengji-client\\src\\components\\header\\header.jsx":"11","F:\\webapp\\chengji-client\\src\\redux\\action-types.js":"12","F:\\webapp\\chengji-client\\src\\api\\index.js":"13","F:\\webapp\\chengji-client\\src\\api\\ajax.js":"14","F:\\webapp\\chengji-client\\src\\components\\headerIcon\\headerIcon.jsx":"15"},{"size":812,"mtime":1608599043432,"results":"16","hashOfConfig":"17"},{"size":406,"mtime":1608599043432,"results":"18","hashOfConfig":"17"},{"size":5224,"mtime":1608599043430,"results":"19","hashOfConfig":"17"},{"size":538,"mtime":1608599043430,"results":"20","hashOfConfig":"17"},{"size":4076,"mtime":1608599043430,"results":"21","hashOfConfig":"17"},{"size":757,"mtime":1608599043432,"results":"22","hashOfConfig":"17"},{"size":2441,"mtime":1608599043432,"results":"23","hashOfConfig":"17"},{"size":899,"mtime":1608599043430,"results":"24","hashOfConfig":"17"},{"size":1046,"mtime":1608599043431,"results":"25","hashOfConfig":"17"},{"size":307,"mtime":1608599043429,"results":"26","hashOfConfig":"17"},{"size":307,"mtime":1608599043429,"results":"27","hashOfConfig":"17"},{"size":191,"mtime":1608599043432,"results":"28","hashOfConfig":"17"},{"size":402,"mtime":1608599043400,"results":"29","hashOfConfig":"17"},{"size":735,"mtime":1608599043400,"results":"30","hashOfConfig":"17"},{"size":394,"mtime":1608600238877,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"17pc6mt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"F:\\webapp\\chengji-client\\src\\index.js",[],["68","69"],"F:\\webapp\\chengji-client\\src\\redux\\store.js",[],"F:\\webapp\\chengji-client\\src\\containers\\register\\register.jsx",["70"],"//注册的路由组件\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header\";\r\nimport Fonter from \"@/components/fonter/fonter\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { register } from \"@/redux/actions\";\r\nclass Register extends React.Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"\", // 用户类型名称   dashen/laoban\r\n  };\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    this.setState({\r\n      username: (this.username = values.username),\r\n      password: (this.username = values.password),\r\n      password2: (this.username = values.password2),\r\n      type: (this.username = values.type),\r\n    });\r\n    //调用redux action中的register方法，判断是否可以注册\r\n    this.props.register(this.state);\r\n    console.log(\" this.props\", this.props.register);\r\n    console.log(\"state\", this.state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  toLogin = () => {\r\n    this.props.history.replace(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { msg, redirectTo } = this.props.user;\r\n    // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* 头部部分 */}\r\n        <Header></Header>\r\n        {/* 中间主体部分 */}\r\n        <div className={bj.logo}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n              <div className=\"login-form-title\">用户注册</div>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                // onChange={val => { this.handleChange('username', val) }}\r\n                placeholder=\"学号/职工号/教工号\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n                // onChange={val => { this.handleChange('password', val) }}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password2\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请重新输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"确认密码\"\r\n                // onChange={val => { this.handleChange('password2', val) }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"type\" label=\" 用户类型：\">\r\n              <Radio.Group>\r\n                <Radio value=\"student\">学生</Radio>\r\n                <Radio value=\"teacher\">老师</Radio>\r\n                <Radio value=\"administer\">教务员</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n              </Button>\r\n              <p className=\"login-form-registerLogin\">\r\n                已有账号？ <a onClick={this.toLogin}>点击登入!</a>\r\n              </p>\r\n              <div className=\"login-form-registerLogin\">\r\n                <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n                学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {/* 底部部分 */}\r\n        <Fonter></Fonter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state) => ({ user: state.user }),\r\n  //  函数确定\r\n  { register }\r\n)(Register);\r\n","F:\\webapp\\chengji-client\\src\\containers\\main\\main.jsx",[],"F:\\webapp\\chengji-client\\src\\containers\\login\\login.jsx",["71","72"],"//注册的路由组件\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.css\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/header\";\r\nimport Fonter from \"@/components/fonter/fonter\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"@/redux/actions\";\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  };\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    this.setState({\r\n      username: (this.username = values.username),\r\n      password: (this.username = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n    this.props.login(this.state);\r\n  };\r\n  // 点击登入调用\r\n\r\n  toRegister = () => {\r\n    this.props.history.replace(\"/register\");\r\n  };\r\n\r\n  render() {\r\n    const { msg, redirectTo } = this.props.user;\r\n    // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n    if (redirectTo) {\r\n      return <Redirect to={redirectTo} />;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* 头部部分 */}\r\n        <Header></Header>\r\n        {/* 中间主体部分 */}\r\n        <div className={bj.logo}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n              <div className=\"login-form-title\">用户登入</div>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                // onChange={val => { this.handleChange('username', val) }}\r\n                placeholder=\"学号/职工号/教工号\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"密码\"\r\n                // onChange={val => { this.handleChange('password', val) }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n              </Button>\r\n              <p className=\"login-form-registerLogin\">\r\n                没有账号？ <a onClick={this.toRegister}>点击注册!</a>\r\n              </p>\r\n              <div className=\"login-form-registerLogin\">\r\n                <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n                学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        {/* 底部部分 */}\r\n        <Fonter></Fonter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state) => ({ user: state.user }),\r\n  //  函数确定\r\n  { login }\r\n)(Login);\r\n","F:\\webapp\\chengji-client\\src\\redux\\reducers.js",[],"F:\\webapp\\chengji-client\\src\\redux\\actions.js",[],"F:\\webapp\\chengji-client\\src\\containers\\studentInfo\\studentInfo.jsx",["73"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport HeaderIcon from \"@/components/headerIcon/headerIcon\";\r\n// import { updateUser } from \"../../redux/actions\";\r\n\r\nclass StudentInfo extends Component {\r\n  state = {\r\n    header: \"\",\r\n    post: \"\",\r\n    info: \"\",\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // 如果信息已经完善, 自动重定向到对应主界面\r\n    // const { header, type } = this.props.user;\r\n    // if (header) {\r\n    //   // 说明信息已经完善\r\n    //   const path = type === \"dashen\" ? \"/dashen\" : \"/laoban\";\r\n    //   return <Redirect to={path} />;\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n        <HeaderIcon></HeaderIcon>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//updateUser\r\nexport default connect((state) => ({ user: state.user }), {})(StudentInfo);\r\n","F:\\webapp\\chengji-client\\src\\containers\\teacherInfo\\teacherInfo.jsx",["74"],"//学生信息完善的路由容器组件\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import HeaderSelector from \"../../components/header-selector/header-selector\";\r\n// import { updateUser } from \"../../redux/actions\";\r\n\r\nexport default class TeacherInfo extends React.Component {\r\n  state = {\r\n    header: \"\",\r\n    post: \"\",\r\n    info: \"\",\r\n  };\r\n\r\n  // 更新header状态\r\n  setHeader = (header) => {\r\n    this.setState({\r\n      header,\r\n    });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    // debugger\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    this.props.updateUser(this.state);\r\n  };\r\n\r\n  render() {\r\n    // 如果信息已经完善, 自动重定向到对应主界面\r\n    const { header, type } = this.props.user;\r\n    if (header) {\r\n      // 说明信息已经完善\r\n      const path = type === \"dashen\" ? \"/dashen\" : \"/laoban\";\r\n      return <Redirect to={path} />;\r\n    }\r\n\r\n    return <div>teacher</div>;\r\n  }\r\n}\r\n","F:\\webapp\\chengji-client\\src\\components\\fonter\\fonter.jsx",[],"F:\\webapp\\chengji-client\\src\\components\\header\\header.jsx",[],"F:\\webapp\\chengji-client\\src\\redux\\action-types.js",[],"F:\\webapp\\chengji-client\\src\\api\\index.js",[],"F:\\webapp\\chengji-client\\src\\api\\ajax.js",[],"F:\\webapp\\chengji-client\\src\\components\\headerIcon\\headerIcon.jsx",["75","76","77","78"],"/*\r\n选择用户头像的UI组件\r\n */\r\n\r\nimport React from \"react\";\r\nimport { List } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport sIcon1 from \"../../assets/studentIcon/icon1.png\";\r\nimport sIcon2 from \"../../assets/studentIcon/icon2.png\";\r\nexport default class HeaderIcon extends React.Component {\r\n  render() {\r\n    // 头部界面\r\n\r\n    return <diV>studentIcon</diV>;\r\n  }\r\n}\r\n ",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":134,"column":23,"nodeType":"85","endLine":134,"endColumn":49},{"ruleId":"86","severity":1,"message":"87","line":6,"column":31,"nodeType":"88","messageId":"89","endLine":6,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":103,"column":23,"nodeType":"85","endLine":103,"endColumn":52},{"ruleId":"86","severity":1,"message":"90","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":18},{"ruleId":"86","severity":1,"message":"91","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"93","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":17},{"ruleId":"86","severity":1,"message":"94","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":14},{"ruleId":"86","severity":1,"message":"95","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":14},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'connect' is defined but never used.","'List' is defined but never used.","'PropTypes' is defined but never used.","'sIcon1' is defined but never used.","'sIcon2' is defined but never used.","no-global-assign","no-unsafe-negation"]