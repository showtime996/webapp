[{"D:\\web\\webapp\\chengji-client\\src\\index.js":"1","D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts":"2","D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx":"3","D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx":"4","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx":"5","D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts":"6","D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts":"7","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx":"8","D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx":"9","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx":"10","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx":"11","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx":"12","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx":"13","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts":"14","D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts":"15","D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx":"16","D:\\web\\webapp\\chengji-client\\src\\api\\index.ts":"17","D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts":"18","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx":"19","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx":"20","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx":"21","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx":"22","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx":"23","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx":"24","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx":"25","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx":"26","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletestudentmodel\\index.tsx":"27","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletegrademodel\\index.tsx":"28","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\index.tsx":"29","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\model\\index.tsx":"30","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\gradesearch\\index.tsx":"31","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\person\\index.tsx":"32","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\editmodel\\index.tsx":"33","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\updategrade\\index.tsx":"34","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\index.tsx":"35","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\model\\index.tsx":"36","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\gradesearch\\index.tsx":"37","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\personinfo\\index.tsx":"38","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\index.tsx":"39","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\model\\index.tsx":"40","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\gradesearch\\index.tsx":"41","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personanl\\index.tsx":"42","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\index.tsx":"43","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\modal\\index.tsx":"44","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\addstu\\index.tsx":"45","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\index.tsx":"46","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\modal\\index.tsx":"47","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\addtea\\index.tsx":"48","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\deleteteacher\\index.tsx":"49"},{"size":788,"mtime":1617858746194,"results":"50","hashOfConfig":"51"},{"size":403,"mtime":1617259800803,"results":"52","hashOfConfig":"51"},{"size":1084,"mtime":1617263188562,"results":"53","hashOfConfig":"51"},{"size":18380,"mtime":1617955055851,"results":"54","hashOfConfig":"51"},{"size":14043,"mtime":1617955193440,"results":"55","hashOfConfig":"51"},{"size":3267,"mtime":1617954048194,"results":"56","hashOfConfig":"51"},{"size":18473,"mtime":1617953852720,"results":"57","hashOfConfig":"51"},{"size":160,"mtime":1617260515814,"results":"58","hashOfConfig":"51"},{"size":14841,"mtime":1617955302422,"results":"59","hashOfConfig":"51"},{"size":168,"mtime":1617260450833,"results":"60","hashOfConfig":"51"},{"size":211,"mtime":1617696169916,"results":"61","hashOfConfig":"51"},{"size":15549,"mtime":1617949138758,"results":"62","hashOfConfig":"51"},{"size":6781,"mtime":1617955532431,"results":"63","hashOfConfig":"51"},{"size":1216,"mtime":1617953187855,"results":"64","hashOfConfig":"51"},{"size":388,"mtime":1617259800803,"results":"65","hashOfConfig":"51"},{"size":171,"mtime":1617259800773,"results":"66","hashOfConfig":"51"},{"size":3479,"mtime":1617952611248,"results":"67","hashOfConfig":"51"},{"size":767,"mtime":1617951827542,"results":"68","hashOfConfig":"51"},{"size":3570,"mtime":1617957843296,"results":"69","hashOfConfig":"51"},{"size":3980,"mtime":1617957853368,"results":"70","hashOfConfig":"51"},{"size":2564,"mtime":1617957780830,"results":"71","hashOfConfig":"51"},{"size":9358,"mtime":1617865136453,"results":"72","hashOfConfig":"51"},{"size":1463,"mtime":1617534876329,"results":"73","hashOfConfig":"51"},{"size":9742,"mtime":1617701678904,"results":"74","hashOfConfig":"51"},{"size":1653,"mtime":1617689964141,"results":"75","hashOfConfig":"51"},{"size":5566,"mtime":1617701799668,"results":"76","hashOfConfig":"51"},{"size":1246,"mtime":1617535538876,"results":"77","hashOfConfig":"51"},{"size":1544,"mtime":1617639497850,"results":"78","hashOfConfig":"51"},{"size":11274,"mtime":1617716522870,"results":"79","hashOfConfig":"51"},{"size":1493,"mtime":1617695723001,"results":"80","hashOfConfig":"51"},{"size":8073,"mtime":1617694601436,"results":"81","hashOfConfig":"51"},{"size":9562,"mtime":1617957105614,"results":"82","hashOfConfig":"51"},{"size":1805,"mtime":1617695432771,"results":"83","hashOfConfig":"51"},{"size":5500,"mtime":1617701846631,"results":"84","hashOfConfig":"51"},{"size":11747,"mtime":1617715065595,"results":"85","hashOfConfig":"51"},{"size":1564,"mtime":1617715193237,"results":"86","hashOfConfig":"51"},{"size":8320,"mtime":1617706704434,"results":"87","hashOfConfig":"51"},{"size":6003,"mtime":1617861528779,"results":"88","hashOfConfig":"51"},{"size":11204,"mtime":1617714988008,"results":"89","hashOfConfig":"51"},{"size":1533,"mtime":1617710739592,"results":"90","hashOfConfig":"51"},{"size":8089,"mtime":1617710722004,"results":"91","hashOfConfig":"51"},{"size":9799,"mtime":1617949392010,"results":"92","hashOfConfig":"51"},{"size":9012,"mtime":1617866045179,"results":"93","hashOfConfig":"51"},{"size":1455,"mtime":1617861634960,"results":"94","hashOfConfig":"51"},{"size":3838,"mtime":1617864199562,"results":"95","hashOfConfig":"51"},{"size":8690,"mtime":1617950849592,"results":"96","hashOfConfig":"51"},{"size":1455,"mtime":1617864487710,"results":"97","hashOfConfig":"51"},{"size":3838,"mtime":1617864463982,"results":"98","hashOfConfig":"51"},{"size":1246,"mtime":1617865618081,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"1fav7u2",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"106"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"106"},"D:\\web\\webapp\\chengji-client\\src\\index.js",["228"],"// 入口的js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react-router-dom比react-router功能更多\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Register from \"@/containers/register\";\r\nimport Main from \"@/containers/main\";\r\nimport Login from \"@/containers/login\";\r\nimport store from \"./redux/store\";\r\nconst app = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/register\" component={Register}></Route>\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        {/* 默认的组件 */}\r\n        <Route component={Main}></Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  </Provider>,\r\n  app\r\n);\r\n",["229","230"],"D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts",[],["231","232"],"D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx",["233","234","235","236","237"],"D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx",["238","239","240","241","242"],"//注册的路由组件\r\nimport React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { adminLogin, studentLogin, teacherLogin } from \"../../redux/actions\";\r\nimport { Carousel } from \"antd\";\r\nconst contentStyle: any = {\r\n  height: \"100%\",\r\n  color: \"#fff\",\r\n  lineHeight: \"100%\",\r\n  textAlign: \"center\",\r\n  background: \"#364d79\",\r\n};\r\nfunction Login(props: any) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: { username: string; password: string }) => {\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n\r\n    props.adminLogin(state);\r\n    props.studentLogin(state);\r\n    props.teacherLogin(state);\r\n  };\r\n  // 点击登入调用\r\n\r\n  const toRegister = () => {\r\n    props.history.replace(\"/register\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Carousel autoplay effect=\"fade\">\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            <div className={bj.logo}>\r\n              <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n              >\r\n                <Form.Item>\r\n                  {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                  <div className=\"login-form-title\">用户登入</div>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"username\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入用户名!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    // onChange={val => { this.handleChange('username', val) }}\r\n                    placeholder=\"学号/职工号/教工号\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入密码!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                    // onChange={val => { this.handleChange('password', val) }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                  >\r\n                    登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n                  </Button>\r\n\r\n                  <p\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                  >\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;没有账号？{\" \"}\r\n                    <a onClick={toRegister}>请点击注册!</a>\r\n                  </p>\r\n\r\n                  <div\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{\r\n                      backgroundColor: \"#CCC\",\r\n                      width: \"100%\",\r\n                      height: \"42px\",\r\n                      position: \"absolute\",\r\n                      bottom: \"-26px\",\r\n                    }}\r\n                  >\r\n                    <span className=\"login-form-registerLogin-txt\">\r\n                      温馨提示:\r\n                    </span>\r\n                    学生学号老师职工号教务员教工号！\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </h3>\r\n        </div>\r\n\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            <div className={bj.logo1}>\r\n              <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n              >\r\n                <Form.Item>\r\n                  {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                  <div className=\"login-form-title\">用户登入</div>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"username\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入用户名!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    // onChange={val => { this.handleChange('username', val) }}\r\n                    placeholder=\"学号/职工号/教工号\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入密码!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                    // onChange={val => { this.handleChange('password', val) }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                  >\r\n                    登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n                  </Button>\r\n\r\n                  <p\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                  >\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;没有账号？\r\n                    <a onClick={toRegister}>请点击注册!</a>\r\n                  </p>\r\n\r\n                  <div\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{\r\n                      backgroundColor: \"#CCC\",\r\n                      width: \"100%\",\r\n                      height: \"42px\",\r\n                      position: \"absolute\",\r\n                      bottom: \"-26px\",\r\n                    }}\r\n                  >\r\n                    <span className=\"login-form-registerLogin-txt\">\r\n                      温馨提示:\r\n                    </span>\r\n                    学生学号老师职工号教务员教工号！\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            <div className={bj.logo2}>\r\n              <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n              >\r\n                <Form.Item>\r\n                  {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                  <div className=\"login-form-title\">用户登入</div>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"username\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入用户名!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    // onChange={val => { this.handleChange('username', val) }}\r\n                    placeholder=\"学号/职工号/教工号\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入密码!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                    // onChange={val => { this.handleChange('password', val) }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                  >\r\n                    登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n                  </Button>\r\n\r\n                  <p\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                  >\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; 没有账号？{\" \"}\r\n                    <a onClick={toRegister}>请点击注册!</a>\r\n                  </p>\r\n\r\n                  <div\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{\r\n                      backgroundColor: \"#CCC\",\r\n                      width: \"100%\",\r\n                      height: \"42px\",\r\n                      position: \"absolute\",\r\n                      bottom: \"-26px\",\r\n                    }}\r\n                  >\r\n                    <span className=\"login-form-registerLogin-txt\">\r\n                      温馨提示:\r\n                    </span>\r\n                    学生学号老师职工号教务员教工号！\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <h3 style={contentStyle}>\r\n            <div className={bj.logo3}>\r\n              <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n              >\r\n                <Form.Item>\r\n                  {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n                  <div className=\"login-form-title\">用户登入</div>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"username\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入用户名!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    // onChange={val => { this.handleChange('username', val) }}\r\n                    placeholder=\"学号/职工号/教工号\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"请输入密码!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                    // onChange={val => { this.handleChange('password', val) }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                  >\r\n                    登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n                  </Button>\r\n\r\n                  <p\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                  >\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; 没有账号？{\" \"}\r\n                    <a onClick={toRegister}>请点击注册!</a>\r\n                  </p>\r\n\r\n                  <div\r\n                    className=\"login-form-registerLogin\"\r\n                    style={{\r\n                      backgroundColor: \"#CCC\",\r\n                      width: \"100%\",\r\n                      height: \"42px\",\r\n                      position: \"absolute\",\r\n                      bottom: \"-26px\",\r\n                    }}\r\n                  >\r\n                    <span className=\"login-form-registerLogin-txt\">\r\n                      温馨提示:\r\n                    </span>\r\n                    学生学号老师职工号教务员教工号！\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </h3>\r\n        </div>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminLogin, studentLogin, teacherLogin }\r\n)(Login);\r\n","D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts",[],"D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx",["243","244","245","246","247","248","249"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx",["250"],"import Administer from \"@/containers/admin/components/admin\";\r\nimport React from \"react\";\r\nimport styles from \"./index.module.less\";\r\n\r\nexport default function Admin() {\r\n  return <Administer></Administer>;\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx",["251","252","253","254","255","256"],"D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx",["257","258","259","260","261","262"],"D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts",[],"D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\api\\index.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx",["263","264","265","266","267"],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx",["268","269","270","271","272","273"],"D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx",["274","275","276"],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx",["277","278","279","280","281","282","283","284","285","286","287"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Tooltip,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Searchstu, TeacherUserid, InfoStu } from \"@/redux/actions\";\r\nimport DeleteStudentModel from \"../deletestudentmodel\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport EditModal from \"../modal\";\r\nimport {\r\n  RequestData,\r\n  UseFetchDataAction,\r\n} from \"@ant-design/pro-table/lib/typing\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\n\r\nlet flag = 0;\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst StuInfo = (props) => {\r\n  const actionRef = useRef<ActionType>();\r\n  const [form] = Form.useForm();\r\n  const [data, setData]: any[] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      console.log(\"cookiceuserid\", cookiceuserid);\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        cname: cookiceuserid[i].cname,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    props.InfoStu({ id: userid });\r\n  }, []);\r\n\r\n  const formatedata = props.user;\r\n  const { Option } = Select;\r\n  const temp = formatedata.length;\r\n\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        department: formatedata[i].department,\r\n        cname: formatedata[i].cname,\r\n        classno: formatedata[i].classno,\r\n        sex: formatedata[i].sex,\r\n        phone: formatedata[i].phone,\r\n        years: formatedata[i].years,\r\n        term: formatedata[i].term,\r\n      });\r\n    }\r\n  }\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      username: \"\",\r\n      realName: \"\",\r\n      cname: \"\",\r\n      classno: \"\",\r\n      phone: \"\",\r\n\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  const [tempsearch, settempsearch]: any = useState([]);\r\n\r\n  const [tempdata, settempdata] = useState();\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学年\",\r\n      dataIndex: \"years\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学期\",\r\n      dataIndex: \"term\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"sex\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"电话\",\r\n      dataIndex: \"phone\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      align: \"center\",\r\n      render: (_, record) => {\r\n        return (\r\n          <div>\r\n            <Typography.Link\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => {\r\n                settempdata(record);\r\n              }}\r\n            >\r\n              <EditModal tempdata={tempdata}></EditModal>\r\n            </Typography.Link>\r\n            <Typography.Link\r\n              onClick={() => {\r\n                settempdata(record);\r\n              }}\r\n            >\r\n              <DeleteStudentModel tempdata={tempdata}></DeleteStudentModel>\r\n            </Typography.Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.Searchstu(e);\r\n    flag = 1;\r\n  };\r\n\r\n  const search = props.stuSearch;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        department: search[i].department,\r\n        classno: search[i].classno,\r\n        sex: search[i].sex,\r\n        phone: search[i].phone,\r\n        years: search[i].years,\r\n        term: search[i].term,\r\n      });\r\n    }\r\n  }\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        actionRef={actionRef}\r\n        search={false}\r\n        options={{ fullScreen: true, reload: false }}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered={true}\r\n        headerTitle=\"学生信息表\"\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"years\"} label=\"学年\">\r\n              <Select placeholder=\"请选择学年\">\r\n                <Option value=\"20202021\">2020-2021</Option>\r\n                <Option value=\"20192020\">2019-2020</Option>\r\n                <Option value=\"20182019\">2018-2019</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"term\"} label=\"学期\">\r\n              <Select placeholder=\"请选择学期\">\r\n                <Option value=\"第一学期\">第一学期</Option>\r\n                <Option value=\"第二学期\">第二学期</Option>\r\n                <Option value=\"第三学期\">第三学期</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"classno\"} label=\"班级\">\r\n              <Select placeholder=\"请选择班级\">\r\n                <Option value={cookicedata[0]?.cname + \"1\"}>\r\n                  {cookicedata[0]?.cname + \"1\"}\r\n                </Option>\r\n                <Option value={cookicedata[0]?.cname + \"2\"}>\r\n                  {cookicedata[0]?.cname + \"2\"}\r\n                </Option>\r\n                <Option value={cookicedata[0]?.cname + \"3\"}>\r\n                  {cookicedata[0]?.cname + \"3\"}\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={\r\n          flag === 0\r\n            ? [...data]\r\n            : [...searchdata] || (flag === 2 && [...tempsearch])\r\n        }\r\n        columns={columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n    stuSearch: state.stuSearch,\r\n  }),\r\n  //  函数确定\r\n  { Searchstu, TeacherUserid, InfoStu }\r\n)(StuInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx",["288","289"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nconst EditModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<FormOutlined />} onClick={showModal}>\r\n        编辑\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"编辑成绩表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <GradeEdit tempdata={tempdata}></GradeEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx",["290","291","292","293","294","295","296","297","298","299"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport AddGrade from \"../addgrade\";\r\nimport request from \"umi-request\";\r\nimport { GradeInfo, AddGradeCount } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport DeleteGradeModel from \"../deletegrademodel\";\r\nimport styles from \"./index.module.less\";\r\nimport EditModel from \"./components/editmodel\";\r\nimport { SyncOutlined, FormOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  department: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GradeEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { tempdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      grade: \"\",\r\n      credit: \"\",\r\n      gpa: \"\",\r\n      cheat: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(tempdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (tempdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          department: formatedata[i].department,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      align: \"center\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </a>\r\n            <Popconfirm title=\"确定取消?\" onConfirm={cancel}>\r\n              <a>取消</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            {record.flagcheat === true ? (\r\n              <Typography.Link disabled>\r\n                <Button\r\n                  type=\"link\"\r\n                  style={{ color: \"#ccc\" }}\r\n                  icon={<FormOutlined />}\r\n                >\r\n                  编辑\r\n                </Button>\r\n              </Typography.Link>\r\n            ) : (\r\n              <Typography.Link disabled={editingKey !== \"\"}>\r\n                <EditModel record={record}></EditModel>\r\n              </Typography.Link>\r\n            )}\r\n\r\n            <Typography.Link>\r\n              <DeleteGradeModel clickdata={record}></DeleteGradeModel>\r\n            </Typography.Link>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"grade\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    department: originData[0]?.department,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <AddGrade tempdata={tempdata}></AddGrade>,\r\n          <Popconfirm\r\n            title=\"同步信息\"\r\n            onConfirm={handleOk}\r\n            onCancel={handleCancel}\r\n          >\r\n            <Tooltip title=\"同步\">\r\n              <Button\r\n                style={{ border: 0 }}\r\n                shape=\"circle\"\r\n                icon={<SyncOutlined />}\r\n              ></Button>\r\n            </Tooltip>\r\n          </Popconfirm>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        headerTitle=\"学生成绩信息表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo, AddGradeCount }\r\n)(GradeEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx",["300","301","302"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nimport AddDetail from \"./components/adddetail\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nconst AddGrade = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const { tempdata } = props;\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<PlusCircleOutlined />} onClick={showModal}>\r\n        录入\r\n      </Button>\r\n      <Modal\r\n        title=\"录入成绩表\"\r\n        width={700}\r\n        // afterClose={() => {\r\n        //   window.history.go(0);\r\n        // }}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <AddDetail tempdata={tempdata}></AddDetail>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(AddGrade);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx",["303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { addGrade } from \"@/redux/actions\";\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nfunction AddDetail(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    realName: \"\",\r\n    courseNo: \"\",\r\n    classno: \"\",\r\n    credit: \"\",\r\n    courseType: \"\",\r\n    courseName: \"\",\r\n    grade: Number,\r\n    cheat: \"\",\r\n    cname: \"\",\r\n    department: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const { tempdata } = props;\r\n  const onFinish = async (values: any) => {\r\n    setState({\r\n      department: (state.department = tempdata.department),\r\n      username: (state.username = tempdata.username),\r\n      realName: (state.realName = tempdata.realName),\r\n      cname: (state.cname = tempdata.cname),\r\n      classno: (state.classno = tempdata.classno),\r\n      courseNo: (state.courseNo = values.courseNo),\r\n      credit: (state.credit = values.credit),\r\n      courseType: (state.courseType = values.courseType),\r\n      courseName: (state.courseName = values.courseName),\r\n      grade: (state.grade = values.cheat === \"作弊\" ? 0 : values.grade),\r\n      cheat: (state.cheat = values.cheat),\r\n    });\r\n\r\n    await props.addGrade(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const btnclick = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      style={{ margin: \"17px auto\" }}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name={\"username\"} label=\"学号\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学号\"\r\n          defaultValue={tempdata.username}\r\n          value={tempdata.username}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"realName\"} label=\"姓名\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入姓名\"\r\n          defaultValue={tempdata.realName}\r\n          value={tempdata.realName}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"department\"} label=\"学院\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学院\"\r\n          defaultValue={tempdata.department}\r\n          value={tempdata.department}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"cname\"} label=\"专业\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入专业\"\r\n          defaultValue={tempdata.cname}\r\n          value={tempdata.cname}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"classno\"} label=\"班级\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入班级\"\r\n          defaultValue={tempdata.classno}\r\n          value={tempdata.classno}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseNo\"} label=\"课程号\" rules={[{ required: true }]}>\r\n        <Input placeholder=\"请输入课程号\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"courseName\"}\r\n        label=\"课程名称\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input placeholder=\"请输入课程名称\" />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseType\"} label=\"课程类型\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"公共课\">公共课</Option>\r\n          <Option value=\"选修课\">选修课</Option>\r\n          <Option value=\"必修课\">必修课</Option>\r\n          <Option value=\"辅修课\">辅修课</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"grade\"} label=\"成绩\">\r\n        <InputNumber style={{ width: 435 }} placeholder=\"请输入成绩\" />\r\n      </Form.Item>\r\n      <Form.Item name={\"credit\"} label=\"学分\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"1.0\">1.0</Option>\r\n          <Option value=\"1.5\">1.5</Option>\r\n          <Option value=\"2.0\">2.0</Option>\r\n          <Option value=\"2.5\">2.5</Option>\r\n          <Option value=\"3.0\">3.0</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"cheat\"} label=\"作弊\">\r\n        <Select placeholder=\"请选择\">\r\n          <Option value=\"作弊\">作弊</Option>\r\n          <Option value=\"正常\">正常</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<LikeOutlined />}\r\n          onClick={btnclick}\r\n          htmlType=\"submit\"\r\n        >\r\n          信息提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ grade: state.grade }), {\r\n  addGrade,\r\n})(AddDetail);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletestudentmodel\\index.tsx",["318","319","320"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteStudent } from \"@/redux/actions\";\r\nimport { DeleteOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nconst DeleteStudentModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    props.DeleteStudent(tempdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  }),\r\n  //  函数确定\r\n  { DeleteStudent }\r\n)(DeleteStudentModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\deletegrademodel\\index.tsx",["321","322"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteGrade } from \"@/redux/actions\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst DeleteGradeModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    // console.log(\"clickdata\", clickdata);\r\n\r\n    props.DeleteGrade(clickdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {clickdata.flagcheat === true ? (\r\n          <Button\r\n            type=\"link\"\r\n            style={{ color: \"red\" }}\r\n            icon={<DeleteOutlined />}\r\n            onClick={showModal}\r\n          >\r\n            删除\r\n          </Button>\r\n        ) : (\r\n          <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n            删除\r\n          </Button>\r\n        )}\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n  }),\r\n  //  函数确定\r\n  { DeleteGrade }\r\n)(DeleteGradeModel);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\index.tsx",["323","324","325","326","327","328","329","330"],"import {\r\n  Table,\r\n  Button,\r\n  Space,\r\n  Tooltip,\r\n  Select,\r\n  Tag,\r\n  Typography,\r\n  Form,\r\n} from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  TeacherUserid,\r\n  getGradeCountInfo,\r\n  getGradeCheat,\r\n} from \"@/redux/actions\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport { RedoOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport EditTableModal from \"./components/model\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\nlet flag = 0;\r\nconst GradeTable = (props) => {\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n  const { Option } = Select;\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        cname: cookiceuserid[i].cname,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  const actionRef = useRef<ActionType>();\r\n  useEffect(() => {\r\n    props.getGradeCountInfo(cookicedata[0]);\r\n  }, []);\r\n  const formatedata = props.gradecount;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n\r\n        classno: formatedata[i].classno,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        department: formatedata[i].department,\r\n        countcredit: formatedata[i].countcredit,\r\n        averagecountcredit: formatedata[i].averagecountcredit,\r\n\r\n        count: formatedata[i].count,\r\n        average: formatedata[i].average,\r\n        countgpa: formatedata[i].countgpa,\r\n        averagegpa: formatedata[i].averagegpa,\r\n      });\r\n    }\r\n  }\r\n  const [state, setState]: any = useState({\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  });\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setState({ filteredInfo: null });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  const setAgeSort = () => {\r\n    setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"countgpa\",\r\n      },\r\n    });\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n\r\n  let { sortedInfo, filteredInfo } = state;\r\n  sortedInfo = sortedInfo || {};\r\n  filteredInfo = filteredInfo || {};\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n\r\n      filteredValue: filteredInfo.username || null,\r\n      onFilter: (value, record) => record.username.includes(value),\r\n      //   sorter: (a, b) => a.username.length - b.username.length,\r\n      sortOrder: sortedInfo.columnKey === \"username\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      key: \"realName\",\r\n\r\n      filteredValue: filteredInfo.realName || null,\r\n      onFilter: (value, record) => record.realName.includes(value),\r\n      //   sorter: (a, b) => a.realName.length - b.realName.length,\r\n      sortOrder: sortedInfo.columnKey === \"realName\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n\r\n      filteredValue: filteredInfo.department || null,\r\n      onFilter: (value, record) => record.department.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"department\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"专业\",\r\n      dataIndex: \"cname\",\r\n      key: \"cname\",\r\n\r\n      filteredValue: filteredInfo.cname || null,\r\n      onFilter: (value, record) => record.cname.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"cname\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      key: \"classno\",\r\n      filters: [\r\n        {\r\n          text: cookicedata[0].cname + \"1\",\r\n          value: cookicedata[0].cname + \"1\",\r\n        },\r\n        {\r\n          text: cookicedata[0].cname + \"2\",\r\n          value: cookicedata[0].cname + \"2\",\r\n        },\r\n        {\r\n          text: cookicedata[0].cname + \"3\",\r\n          value: cookicedata[0].cname + \"3\",\r\n        },\r\n      ],\r\n      filteredValue: filteredInfo.classno || null,\r\n      onFilter: (value, record) => record.classno.includes(value),\r\n      //   sorter: (a, b) => a.classno.length - b.classno.length,\r\n      sortOrder: sortedInfo.columnKey === \"classno\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n\r\n    {\r\n      title: \"总学分\",\r\n      dataIndex: \"countcredit\",\r\n      key: \"countcredit\",\r\n      //   sorter: (a, b) => a.countcredit - b.countcredit,\r\n      sortOrder: sortedInfo.columnKey === \"countcredit\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"平均学分\",\r\n      dataIndex: \"averagecountcredit\",\r\n      key: \"averagecountcredit\",\r\n      sorter: (a, b) => a.averagecountcredit - b.averagecountcredit,\r\n      sortOrder:\r\n        sortedInfo.columnKey === \"averagecountcredit\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"总分\",\r\n      dataIndex: \"count\",\r\n      key: \"count\",\r\n      sorter: (a, b) => a.count - b.count,\r\n      sortOrder: sortedInfo.columnKey === \"count\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"平均分\",\r\n      dataIndex: \"average\",\r\n      key: \"average\",\r\n      sorter: (a, b) => a.average - b.average,\r\n      sortOrder: sortedInfo.columnKey === \"average\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"总绩点\",\r\n      dataIndex: \"countgpa\",\r\n      key: \"countgpa\",\r\n      //   sorter: (a, b) => a.countgpa - b.countgpa,\r\n      sortOrder: sortedInfo.columnKey === \"countgpa\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"平均绩点\",\r\n      dataIndex: \"averagegpa\",\r\n      key: \"averagegpa\",\r\n      sorter: (a, b) => a.averagegpa - b.averagegpa,\r\n      sortOrder: sortedInfo.columnKey === \"averagegpa\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      align: \"center\",\r\n      render: (_, record) => (\r\n        <Typography.Link>\r\n          <EditTableModal clickdata={record}></EditTableModal>\r\n        </Typography.Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.getGradeCheat(e);\r\n    console.log(\"eeeeeeeee\", e);\r\n\r\n    flag = 1;\r\n  };\r\n  const search = props.gradecount;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        classno: search[i].classno,\r\n\r\n        countcredit: search[i].countcredit,\r\n        averagecountcredit: search[i].averagecountcredit,\r\n\r\n        count: search[i].count,\r\n        average: search[i].average,\r\n        countgpa: search[i].countgpa,\r\n        averagegpa: search[i].averagegpa,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={setAgeSort}>Sort age</Button>\r\n        <Button onClick={clearFilters}>Clear filters</Button>\r\n        <Button onClick={clearAll}>Clear filters and sorters</Button>\r\n      </Space> */}\r\n      <ProTable\r\n        columns={columns}\r\n        dataSource={flag === 0 ? [...originData] : [...searchdata]}\r\n        onChange={handleChange}\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"classno\"} label=\"班级\">\r\n              <Select placeholder=\"请选择班级\">\r\n                <Option value={cookicedata[0]?.cname + \"1\"}>\r\n                  {cookicedata[0]?.cname + \"1\"}\r\n                </Option>\r\n                <Option value={cookicedata[0]?.cname + \"2\"}>\r\n                  {cookicedata[0]?.cname + \"2\"}\r\n                </Option>\r\n                <Option value={cookicedata[0]?.cname + \"3\"}>\r\n                  {cookicedata[0]?.cname + \"3\"}\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"flaggrade\"} label=\"不及格\">\r\n              <Select placeholder=\"请选择\">\r\n                <Option value=\"不及格\">不及格</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"flagcheat\"} label=\"作弊\">\r\n              <Select placeholder=\"请选择\">\r\n                <Option value=\"作弊\">作弊</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        headerTitle=\"班级成绩信息表\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n    cooikeuserid: state.cooikeuserid,\r\n    gradecount: state.gradecount,\r\n  }),\r\n  //  函数确定\r\n  { TeacherUserid, getGradeCountInfo, getGradeCheat }\r\n)(GradeTable);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\model\\index.tsx",["331","332"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { ReadOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeTableEdit from \"../gradesearch\";\r\nconst EditTableModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<ReadOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"成绩详情表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <GradeTableEdit clickdata={clickdata}></GradeTableEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditTableModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradetable\\components\\gradesearch\\index.tsx",["333","334","335","336","337","338","339","340","341","342","343"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GradeTableEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { clickdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(clickdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (clickdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"成绩详情表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(GradeTableEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\person\\index.tsx",["344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LikeOutlined, ReloadOutlined } from \"@ant-design/icons\";\r\nimport { updateTeacher, TeacherUserid } from \"@/redux/actions\";\r\n\r\nconst cookicedata: any = [];\r\nfunction TeacherPerson(props) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n    years: \"\",\r\n    term: \"\",\r\n    duty: \"\",\r\n    IDcard: \"\",\r\n\r\n    cname: \"\",\r\n\r\n    nation: \"\",\r\n    department: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    diploma: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const userid = Cookies.get(\"userid\");\r\n  const [requestdata, setrequestdata] = useState();\r\n  useEffect(() => {\r\n    props.TeacherUserid({ id: userid });\r\n  }, []);\r\n\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        cname: cookiceuserid[i].cname,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        diploma: cookiceuserid[i].diploma,\r\n        years: cookiceuserid[i].years,\r\n        term: cookiceuserid[i].term,\r\n      });\r\n    }\r\n  }\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      username: (state.username = cookicedata[0].username),\r\n      realName: (state.realName = cookicedata[0].realName),\r\n      affiliation: (state.affiliation = cookicedata[0].affiliation),\r\n      age: (state.age = cookicedata[0].age),\r\n      sex: (state.sex = cookicedata[0].sex),\r\n      password: (state.password = values.password || cookicedata[0].password),\r\n      diploma: (state.diploma = cookicedata[0].diploma),\r\n      duty: (state.duty = values.duty || cookicedata[0].duty),\r\n      cname: (state.cname = cookicedata[0].cname),\r\n\r\n      nation: (state.nation = cookicedata[0].nation),\r\n      region: (state.region = values.region || cookicedata[0].region),\r\n      phone: (state.phone = values.phone || cookicedata[0].phone),\r\n      IDcard: (state.IDcard = cookicedata[0].IDcard),\r\n      eMail: (state.eMail = values.eMail || cookicedata[0].eMail),\r\n      department: (state.department = cookicedata[0].department),\r\n      street: (state.street = values.street || cookicedata[0].street),\r\n      years: (state.years = cookicedata[0].years),\r\n      term: (state.term = cookicedata[0].term),\r\n    });\r\n    console.log(\"values\", state);\r\n\r\n    props.updateTeacher(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item name={\"username\"} label=\"学号\">\r\n            {cookicedata[0].username}\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            {cookicedata[0].realName}\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\">\r\n            {cookicedata[0].sex}\r\n          </Form.Item>\r\n          <Form.Item name={\"password\"} label=\"密码\">\r\n            <Input defaultValue={cookicedata[0].password} />\r\n          </Form.Item>\r\n          <Form.Item name={\"affiliation\"} label=\"政治面貌\">\r\n            {cookicedata[0].affiliation === \"DY\" ? \"党员\" : \"群众\"}\r\n          </Form.Item>\r\n          <Form.Item name={\"age\"} label=\"年龄\">\r\n            {cookicedata[0].age}\r\n          </Form.Item>\r\n          <Form.Item name={\"years\"} label=\"学年\">\r\n            {cookicedata[0].years}\r\n          </Form.Item>\r\n          <Form.Item name={\"term\"} label=\"学期\">\r\n            {cookicedata[0].term}\r\n          </Form.Item>\r\n          <Form.Item name={\"department\"} label=\"学院\" hasFeedback>\r\n            {cookicedata[0].department}\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            {cookicedata[0].diploma}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"IDcard\"} label=\"身份证号码\">\r\n            {cookicedata[0].IDcard}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\">\r\n            {cookicedata[0].nation}\r\n          </Form.Item>\r\n          <Form.Item label=\"专业名\" name={\"cname\"}>\r\n            {cookicedata[0].cname}\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select\r\n                  style={{ width: 310 }}\r\n                  defaultValue={cookicedata[0].region}\r\n                >\r\n                  <Option value=\"河北\">河北</Option>\r\n                  <Option value=\"山西\">山西</Option>\r\n                  <Option value=\"辽宁\">辽宁</Option>\r\n                  <Option value=\"吉林\">吉林</Option>\r\n                  <Option value=\"黑龙江\">黑龙江</Option>\r\n                  <Option value=\"江苏\">江苏</Option>\r\n                  <Option value=\"浙江\">浙江</Option>\r\n                  <Option value=\"安徽\">安徽</Option>\r\n                  <Option value=\"福建\">福建</Option>\r\n                  <Option value=\"江西\">江西</Option>\r\n                  <Option value=\"山东\">山东</Option>\r\n                  <Option value=\"河南\">河南</Option>\r\n                  <Option value=\"湖北\">湖北</Option>\r\n                  <Option value=\"湖南\">湖南</Option>\r\n                  <Option value=\"广东\">广东</Option>\r\n                  <Option value=\"海南\">海南</Option>\r\n                  <Option value=\"四川\">四川</Option>\r\n                  <Option value=\"贵州\">贵州</Option>\r\n                  <Option value=\"内蒙古\">内蒙古</Option>\r\n                  <Option value=\"广西壮族\">广西壮族</Option>\r\n                  <Option value=\"西藏\">西藏</Option>\r\n                  <Option value=\"宁夏回族\">宁夏回族</Option>\r\n                  <Option value=\"新疆维吾尔\">新疆维吾尔</Option>\r\n                  <Option value=\"北京\">北京</Option>\r\n                  <Option value=\"天津\">天津</Option>\r\n                  <Option value=\"上海\">上海</Option>\r\n                  <Option value=\"重庆\">重庆</Option>\r\n                  <Option value=\"香港\">香港</Option>\r\n                  <Option value=\"澳门\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name={\"street\"} label=\"地区\" noStyle>\r\n                <Input\r\n                  style={{ width: \"50%\" }}\r\n                  defaultValue={cookicedata[0].street}\r\n                />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item name={\"phone\"} label=\"手机号码\">\r\n            <Input defaultValue={cookicedata[0].phone} />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\">\r\n            <Input defaultValue={cookicedata[0].eMail} />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              defaultValue={cookicedata[0].duty}\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              icon={<LikeOutlined />}\r\n              onClick={refresh}\r\n              style={{ marginRight: 30 }}\r\n            >\r\n              信息更改\r\n            </Button>\r\n            <Button type=\"primary\" icon={<ReloadOutlined />} onClick={refresh}>\r\n              刷新\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  {\r\n    updateTeacher,\r\n    TeacherUserid,\r\n  }\r\n)(TeacherPerson);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\editmodel\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\components\\updategrade\\index.tsx",["360","361","362","363","364","365","366","367","368","369","370","371"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\n\r\nimport { UpdateGradeData } from \"@/redux/actions\";\r\nimport { LikeOutlined } from \"@ant-design/icons\";\r\nfunction UpdateGrade(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    realName: \"\",\r\n    courseNo: \"\",\r\n    classno: \"\",\r\n    credit: \"\",\r\n    courseType: \"\",\r\n    courseName: \"\",\r\n    grade: Number,\r\n    cheat: \"\",\r\n    cname: \"\",\r\n    department: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n\r\n  const { tempdata } = props;\r\n\r\n  const onFinish = async (values: any) => {\r\n    setState({\r\n      department: (state.department = tempdata.department),\r\n      username: (state.username = tempdata.username),\r\n      realName: (state.realName = tempdata.realName),\r\n      cname: (state.cname = tempdata.cname),\r\n      classno: (state.classno = tempdata.classno),\r\n      courseNo: (state.courseNo = tempdata.courseNo),\r\n      credit: (state.credit = values.credit || tempdata.credit),\r\n      courseType: (state.courseType = values.courseType || tempdata.courseType),\r\n      courseName: (state.courseName = values.courseName || tempdata.courseName),\r\n      grade: (state.grade =\r\n        values.cheat === \"作弊\" ? 0 : values.grade || tempdata.grade),\r\n      cheat: (state.cheat = values.cheat || tempdata.cheat),\r\n    });\r\n\r\n    await props.UpdateGradeData(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const btnclick = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      style={{ margin: \"17px auto\" }}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name={\"username\"} label=\"学号\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学号\"\r\n          defaultValue={tempdata.username}\r\n          value={tempdata.username}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"realName\"} label=\"姓名\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入姓名\"\r\n          defaultValue={tempdata.realName}\r\n          value={tempdata.realName}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"department\"} label=\"学院\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入学院\"\r\n          defaultValue={tempdata.department}\r\n          value={tempdata.department}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"cname\"} label=\"专业\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入专业\"\r\n          defaultValue={tempdata.cname}\r\n          value={tempdata.cname}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"classno\"} label=\"班级\">\r\n        <Input\r\n          readOnly\r\n          placeholder=\"请输入班级\"\r\n          defaultValue={tempdata.classno}\r\n          value={tempdata.classno}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseNo\"} label=\"课程号\">\r\n        <Input readOnly defaultValue={tempdata.courseNo} />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseName\"} label=\"课程名称\">\r\n        <Input defaultValue={tempdata.courseName} />\r\n      </Form.Item>\r\n      <Form.Item name={\"courseType\"} label=\"课程类型\">\r\n        <Select defaultValue={tempdata.courseType}>\r\n          <Option value=\"公共课\">公共课</Option>\r\n          <Option value=\"选修课\">选修课</Option>\r\n          <Option value=\"必修课\">必修课</Option>\r\n          <Option value=\"辅修课\">辅修课</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"grade\"} label=\"成绩\">\r\n        <InputNumber style={{ width: 435 }} defaultValue={tempdata.grade} />\r\n      </Form.Item>\r\n      <Form.Item name={\"credit\"} label=\"学分\">\r\n        <Select defaultValue={tempdata.credit}>\r\n          <Option value=\"1.0\">1.0</Option>\r\n          <Option value=\"1.5\">1.5</Option>\r\n          <Option value=\"2.0\">2.0</Option>\r\n          <Option value=\"2.5\">2.5</Option>\r\n          <Option value=\"3.0\">3.0</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"cheat\"} label=\"作弊\">\r\n        <Select defaultValue={tempdata.cheat}>\r\n          <Option value=\"作弊\">作弊</Option>\r\n          <Option value=\"正常\">正常</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n        &nbsp; &nbsp; &nbsp; &nbsp;\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<LikeOutlined />}\r\n          onClick={btnclick}\r\n          htmlType=\"submit\"\r\n        >\r\n          信息提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ grade: state.grade }), {\r\n  UpdateGradeData,\r\n})(UpdateGrade);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\index.tsx",["372","373","374","375","376","377","378","379","380"],"import {\r\n  Table,\r\n  Button,\r\n  Space,\r\n  Tooltip,\r\n  Select,\r\n  Tag,\r\n  Typography,\r\n  Form,\r\n} from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  AdminUserid,\r\n  getAdminGradeCountInfo,\r\n  getGradeCheat,\r\n} from \"@/redux/actions\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport { RedoOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport DepartmentEditTableModal from \"./components/model\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\nlet flag = 0;\r\nconst DepartmentGradeTable = (props) => {\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const cookiceuserid = props.cooikeuserid;\r\n\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        sex: cookiceuserid[i].sex,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        department: cookiceuserid[i].department,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        diploma: cookiceuserid[i].diploma,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n      });\r\n      props.getAdminGradeCountInfo(cookicedata[0]);\r\n    }\r\n  }\r\n  useEffect(() => {}, []);\r\n  const actionRef = useRef<ActionType>();\r\n\r\n  const formatedata = props.gradecount;\r\n  const [classnodata, setclassnodata] = useState();\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        classno: formatedata[i].classno,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        countcredit: formatedata[i].countcredit,\r\n        averagecountcredit: formatedata[i].averagecountcredit,\r\n        department: formatedata[i].department,\r\n        count: formatedata[i].count,\r\n        average: formatedata[i].average,\r\n        countgpa: formatedata[i].countgpa,\r\n        averagegpa: formatedata[i].averagegpa,\r\n        flaggrade: formatedata[i].flaggrade,\r\n        flagcheat: formatedata[i].flagcheat,\r\n      });\r\n    }\r\n  }\r\n  const [state, setState]: any = useState({\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  });\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setState({ filteredInfo: null });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  const setAgeSort = () => {\r\n    setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"countgpa\",\r\n      },\r\n    });\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n\r\n  let { sortedInfo, filteredInfo } = state;\r\n  sortedInfo = sortedInfo || {};\r\n  filteredInfo = filteredInfo || {};\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n\r\n      filteredValue: filteredInfo.username || null,\r\n      onFilter: (value, record) => record.username.includes(value),\r\n      //   sorter: (a, b) => a.username.length - b.username.length,\r\n      sortOrder: sortedInfo.columnKey === \"username\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      key: \"realName\",\r\n\r\n      filteredValue: filteredInfo.realName || null,\r\n      onFilter: (value, record) => record.realName.includes(value),\r\n      //   sorter: (a, b) => a.realName.length - b.realName.length,\r\n      sortOrder: sortedInfo.columnKey === \"realName\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n\r\n      filteredValue: filteredInfo.department || null,\r\n      onFilter: (value, record) => record.department.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"department\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"专业\",\r\n      dataIndex: \"cname\",\r\n      key: \"cname\",\r\n      filters: [\r\n        {\r\n          text: originData[0]?.cname,\r\n          value: originData[0]?.cname,\r\n        },\r\n        {\r\n          text: originData[1]?.cname,\r\n          value: originData[1]?.cname,\r\n        },\r\n        {\r\n          text: originData[2]?.cname,\r\n          value: originData[2]?.cname,\r\n        },\r\n        {\r\n          text: originData[3]?.cname,\r\n          value: originData[3]?.cname,\r\n        },\r\n        {\r\n          text: originData[4]?.cname,\r\n          value: originData[4]?.cname,\r\n        },\r\n        {\r\n          text: originData[5]?.cname,\r\n          value: originData[5]?.cname,\r\n        },\r\n      ],\r\n      filteredValue: filteredInfo.cname || null,\r\n      onFilter: (value, record) => record.cname.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"cname\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      key: \"classno\",\r\n      filters: [\r\n        {\r\n          text: originData[0]?.classno,\r\n          value: originData[0]?.classno,\r\n        },\r\n        {\r\n          text: originData[1]?.classno,\r\n          value: originData[1]?.classno,\r\n        },\r\n        {\r\n          text: originData[2]?.classno,\r\n          value: originData[2]?.classno,\r\n        },\r\n        {\r\n          text: originData[3]?.classno,\r\n          value: originData[3]?.classno,\r\n        },\r\n        {\r\n          text: originData[4]?.classno,\r\n          value: originData[4]?.classno,\r\n        },\r\n        {\r\n          text: originData[5]?.classno,\r\n          value: originData[5]?.classno,\r\n        },\r\n      ],\r\n      filteredValue: filteredInfo.classno || null,\r\n      onFilter: (value, record) => record.classno.includes(value),\r\n      //   sorter: (a, b) => a.classno.length - b.classno.length,\r\n      sortOrder: sortedInfo.columnKey === \"classno\" && sortedInfo.order,\r\n    },\r\n\r\n    {\r\n      title: \"总学分\",\r\n      dataIndex: \"countcredit\",\r\n      key: \"countcredit\",\r\n      //   sorter: (a, b) => a.countcredit - b.countcredit,\r\n      sortOrder: sortedInfo.columnKey === \"countcredit\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"平均学分\",\r\n      dataIndex: \"averagecountcredit\",\r\n      key: \"averagecountcredit\",\r\n      sorter: (a, b) => a.averagecountcredit - b.averagecountcredit,\r\n      sortOrder:\r\n        sortedInfo.columnKey === \"averagecountcredit\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"总分\",\r\n      dataIndex: \"count\",\r\n      key: \"count\",\r\n      sorter: (a, b) => a.count - b.count,\r\n      sortOrder: sortedInfo.columnKey === \"count\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"平均分\",\r\n      dataIndex: \"average\",\r\n      key: \"average\",\r\n      sorter: (a, b) => a.average - b.average,\r\n      sortOrder: sortedInfo.columnKey === \"average\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"总绩点\",\r\n      dataIndex: \"countgpa\",\r\n      key: \"countgpa\",\r\n      //   sorter: (a, b) => a.countgpa - b.countgpa,\r\n      sortOrder: sortedInfo.columnKey === \"countgpa\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"平均绩点\",\r\n      dataIndex: \"averagegpa\",\r\n      key: \"averagegpa\",\r\n      sorter: (a, b) => a.averagegpa - b.averagegpa,\r\n      sortOrder: sortedInfo.columnKey === \"averagegpa\" && sortedInfo.order,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      align: \"center\",\r\n      render: (_, record) => (\r\n        <Typography.Link>\r\n          <DepartmentEditTableModal\r\n            clickdata={record}\r\n          ></DepartmentEditTableModal>\r\n        </Typography.Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.getGradeCheat(e);\r\n\r\n    flag = 1;\r\n  };\r\n  const search = props.gradecount;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        classno: search[i].classno,\r\n        department: search[i].department,\r\n        countcredit: search[i].countcredit,\r\n        averagecountcredit: search[i].averagecountcredit,\r\n\r\n        count: search[i].count,\r\n        average: search[i].average,\r\n        countgpa: search[i].countgpa,\r\n        averagegpa: search[i].averagegpa,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ProTable\r\n        columns={columns}\r\n        dataSource={flag === 0 ? [...originData] : [...searchdata]}\r\n        onChange={handleChange}\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"classno\"} label=\"班级\">\r\n              <Select placeholder=\"请选择班级\">\r\n                <Option value={originData[0]?.classno}>\r\n                  {originData[0]?.classno}\r\n                </Option>\r\n                <Option value={originData[0]?.cname + \"2\"}>\r\n                  {originData[0]?.cname + \"2\"}\r\n                </Option>\r\n                <Option value={originData[0]?.cname + \"3\"}>\r\n                  {originData[0]?.cname + \"3\"}\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"flaggrade\"} label=\"不及格\">\r\n              <Select placeholder=\"请选择\">\r\n                <Option value=\"不及格\">不及格</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"flagcheat\"} label=\"作弊\">\r\n              <Select placeholder=\"请选择\">\r\n                <Option value=\"作弊\">作弊</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        headerTitle=\"学院成绩信息表\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n    cooikeuserid: state.cooikeuserid,\r\n    gradecount: state.gradecount,\r\n  }),\r\n  //  函数确定\r\n  { AdminUserid, getAdminGradeCountInfo, getGradeCheat }\r\n)(DepartmentGradeTable);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\model\\index.tsx",["381","382"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { ReadOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport DepartmentGradeTableEdit from \"../gradesearch\";\r\nconst DepartmentEditTableModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<ReadOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"成绩详情表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <DepartmentGradeTableEdit\r\n          clickdata={clickdata}\r\n        ></DepartmentGradeTableEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(DepartmentEditTableModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\departmentgradetable\\components\\gradesearch\\index.tsx",["383","384","385","386","387","388","389","390","391","392","393"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n  department: \"\",\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst DepartmentGradeTableEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { clickdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(clickdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (clickdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          department: formatedata[i].department,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    department: originData[0]?.department,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"成绩详情表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(DepartmentGradeTableEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\personinfo\\index.tsx",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LikeOutlined, ReloadOutlined } from \"@ant-design/icons\";\r\nimport { updateAdmin, AdminUserid } from \"@/redux/actions\";\r\nconst cookicedata: any = [];\r\nfunction AdminPerson(props) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n\r\n    duty: \"\",\r\n    IDcard: \"\",\r\n\r\n    department: \"\",\r\n\r\n    phone: \"\",\r\n    eMail: \"\",\r\n\r\n    diploma: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n        sex: cookiceuserid[i].sex,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        age: cookiceuserid[i].age,\r\n        department: cookiceuserid[i].department,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        diploma: cookiceuserid[i].diploma,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n      });\r\n    }\r\n  }\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      username: (state.username = cookicedata[0].username),\r\n      realName: (state.realName = cookicedata[0].realName),\r\n      affiliation: (state.affiliation = cookicedata[0].affiliation),\r\n      age: (state.age = cookicedata[0].age),\r\n      sex: (state.sex = cookicedata[0].sex),\r\n      password: (state.password = values.password || cookicedata[0].password),\r\n      diploma: (state.diploma = cookicedata[0].diploma),\r\n      duty: (state.duty = values.duty || cookicedata[0].duty),\r\n\r\n      phone: (state.phone = values.phone || cookicedata[0].phone),\r\n      IDcard: (state.IDcard = cookicedata[0].IDcard),\r\n      eMail: (state.eMail = values.eMail || cookicedata[0].eMail),\r\n      department: (state.department = cookicedata[0].department),\r\n    });\r\n    console.log(\"values\", state);\r\n\r\n    props.updateAdmin(state);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item name={\"username\"} label=\"学号\">\r\n            {cookicedata[0]?.username}\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            {cookicedata[0]?.realName}\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\">\r\n            {cookicedata[0]?.sex}\r\n          </Form.Item>\r\n          <Form.Item name={\"password\"} label=\"密码\">\r\n            <Input defaultValue={cookicedata[0]?.password} />\r\n          </Form.Item>\r\n          <Form.Item name={\"affiliation\"} label=\"政治面貌\">\r\n            {cookicedata[0]?.affiliation === \"DY\" ? \"党员\" : \"群众\"}\r\n          </Form.Item>\r\n          <Form.Item name={\"age\"} label=\"年龄\">\r\n            {cookicedata[0]?.age}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"department\"} label=\"学院\" hasFeedback>\r\n            {cookicedata[0]?.department}\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            {cookicedata[0]?.diploma}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"IDcard\"} label=\"身份证号码\">\r\n            {cookicedata[0]?.IDcard}\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"phone\"} label=\"手机号码\">\r\n            <Input defaultValue={cookicedata[0]?.phone} />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\">\r\n            <Input defaultValue={cookicedata[0]?.eMail} />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              defaultValue={cookicedata[0]?.duty}\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={refresh}\r\n              icon={<LikeOutlined />}\r\n              style={{ marginRight: 30 }}\r\n            >\r\n              信息更改\r\n            </Button>\r\n            <Button type=\"primary\" icon={<ReloadOutlined />} onClick={refresh}>\r\n              刷新\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n  }),\r\n  {\r\n    updateAdmin,\r\n    AdminUserid,\r\n  }\r\n)(AdminPerson);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\index.tsx",["409","410","411","412","413","414","415","416","417","418","419"],"import {\r\n  Table,\r\n  Button,\r\n  Space,\r\n  Tooltip,\r\n  Select,\r\n  Tag,\r\n  Typography,\r\n  Form,\r\n} from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  StudentUserid,\r\n  getStuGradeCountInfo,\r\n  getGradeCheat,\r\n} from \"@/redux/actions\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport { RedoOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport PersonalEditTableModal from \"./components/model\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\nlet flag = 0;\r\nconst PersonalGradeTable = (props) => {\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.StudentUserid({ id: userid });\r\n  }, []);\r\n  const { Option } = Select;\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      cookicedata.push({\r\n        key: i + 1,\r\n\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        realName: cookiceuserid[i].realName,\r\n        sex: cookiceuserid[i].sex,\r\n        affiliation: cookiceuserid[i].affiliation,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n        cname: cookiceuserid[i].cname,\r\n        classno: cookiceuserid[i].classno,\r\n        years: cookiceuserid[i].years,\r\n        term: cookiceuserid[i].term,\r\n        department: cookiceuserid[i].department,\r\n        nation: cookiceuserid[i].nation,\r\n        region: cookiceuserid[i].region,\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n        street: cookiceuserid[i].street,\r\n        address: cookiceuserid[i].address,\r\n        recommend: cookiceuserid[i].recommend,\r\n      });\r\n      props.getStuGradeCountInfo(cookicedata[0]);\r\n    }\r\n  }\r\n  const actionRef = useRef<ActionType>();\r\n  useEffect(() => {}, []);\r\n  const formatedata = props.gradecount;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n\r\n        classno: formatedata[i].classno,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        department: formatedata[i].department,\r\n        countcredit: formatedata[i].countcredit,\r\n        averagecountcredit: formatedata[i].averagecountcredit,\r\n        flaggrade: formatedata[i].flaggrade,\r\n        flagcheat: formatedata[i].flagcheat,\r\n        count: formatedata[i].count,\r\n        average: formatedata[i].average,\r\n        countgpa: formatedata[i].countgpa,\r\n        averagegpa: formatedata[i].averagegpa,\r\n      });\r\n    }\r\n  }\r\n  const [state, setState]: any = useState({\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  });\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setState({ filteredInfo: null });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  const setAgeSort = () => {\r\n    setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"countgpa\",\r\n      },\r\n    });\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n\r\n  let { sortedInfo, filteredInfo } = state;\r\n  sortedInfo = sortedInfo || {};\r\n  filteredInfo = filteredInfo || {};\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n    },\r\n\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n\r\n      filteredValue: filteredInfo.username || null,\r\n      onFilter: (value, record) => record.username.includes(value),\r\n      //   sorter: (a, b) => a.username.length - b.username.length,\r\n      sortOrder: sortedInfo.columnKey === \"username\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      key: \"realName\",\r\n\r\n      filteredValue: filteredInfo.realName || null,\r\n      onFilter: (value, record) => record.realName.includes(value),\r\n      //   sorter: (a, b) => a.realName.length - b.realName.length,\r\n      sortOrder: sortedInfo.columnKey === \"realName\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n\r\n      filteredValue: filteredInfo.department || null,\r\n      onFilter: (value, record) => record.department.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"department\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"专业\",\r\n      dataIndex: \"cname\",\r\n      key: \"cname\",\r\n\r\n      filteredValue: filteredInfo.cname || null,\r\n      onFilter: (value, record) => record.cname.includes(value),\r\n      //   sorter: (a, b) => a.cname.length - b.cname.length,\r\n      sortOrder: sortedInfo.columnKey === \"cname\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      key: \"classno\",\r\n\r\n      filteredValue: filteredInfo.classno || null,\r\n      onFilter: (value, record) => record.classno.includes(value),\r\n      //   sorter: (a, b) => a.classno.length - b.classno.length,\r\n      sortOrder: sortedInfo.columnKey === \"classno\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n\r\n    {\r\n      title: \"总学分\",\r\n      dataIndex: \"countcredit\",\r\n      key: \"countcredit\",\r\n      //   sorter: (a, b) => a.countcredit - b.countcredit,\r\n      sortOrder: sortedInfo.columnKey === \"countcredit\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"平均学分\",\r\n      dataIndex: \"averagecountcredit\",\r\n      key: \"averagecountcredit\",\r\n      sorter: (a, b) => a.averagecountcredit - b.averagecountcredit,\r\n      sortOrder:\r\n        sortedInfo.columnKey === \"averagecountcredit\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"总分\",\r\n      dataIndex: \"count\",\r\n      key: \"count\",\r\n      sorter: (a, b) => a.count - b.count,\r\n      sortOrder: sortedInfo.columnKey === \"count\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"平均分\",\r\n      dataIndex: \"average\",\r\n      key: \"average\",\r\n      sorter: (a, b) => a.average - b.average,\r\n      sortOrder: sortedInfo.columnKey === \"average\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"总绩点\",\r\n      dataIndex: \"countgpa\",\r\n      key: \"countgpa\",\r\n      //   sorter: (a, b) => a.countgpa - b.countgpa,\r\n      sortOrder: sortedInfo.columnKey === \"countgpa\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"平均绩点\",\r\n      dataIndex: \"averagegpa\",\r\n      key: \"averagegpa\",\r\n      sorter: (a, b) => a.averagegpa - b.averagegpa,\r\n      sortOrder: sortedInfo.columnKey === \"averagegpa\" && sortedInfo.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      align: \"center\",\r\n      render: (_, record) => (\r\n        <Typography.Link>\r\n          <PersonalEditTableModal clickdata={record}></PersonalEditTableModal>\r\n        </Typography.Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.getGradeCheat(e);\r\n    console.log(\"eeeeeeeee\", e);\r\n\r\n    flag = 1;\r\n  };\r\n  const search = props.gradecount;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        classno: search[i].classno,\r\n\r\n        countcredit: search[i].countcredit,\r\n        averagecountcredit: search[i].averagecountcredit,\r\n\r\n        count: search[i].count,\r\n        average: search[i].average,\r\n        countgpa: search[i].countgpa,\r\n        averagegpa: search[i].averagegpa,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={setAgeSort}>Sort age</Button>\r\n        <Button onClick={clearFilters}>Clear filters</Button>\r\n        <Button onClick={clearAll}>Clear filters and sorters</Button>\r\n      </Space> */}\r\n      <ProTable\r\n        columns={columns}\r\n        dataSource={flag === 0 ? [...originData] : [...searchdata]}\r\n        onChange={handleChange}\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        bordered\r\n        toolBarRender={() => [\r\n          // <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n          //   <Form.Item name={\"classno\"} label=\"班级\">\r\n          //     <Select placeholder=\"请选择班级\">\r\n          //       <Option value={cookicedata[0]?.cname + \"1\"}>\r\n          //         {cookicedata[0]?.cname + \"1\"}\r\n          //       </Option>\r\n          //       <Option value={cookicedata[0]?.cname + \"2\"}>\r\n          //         {cookicedata[0]?.cname + \"2\"}\r\n          //       </Option>\r\n          //       <Option value={cookicedata[0]?.cname + \"3\"}>\r\n          //         {cookicedata[0]?.cname + \"3\"}\r\n          //       </Option>\r\n          //     </Select>\r\n          //   </Form.Item>\r\n          //   <Form.Item name={\"flaggrade\"} label=\"不及格\">\r\n          //     <Select placeholder=\"请选择\">\r\n          //       <Option value=\"不及格\">不及格</Option>\r\n          //     </Select>\r\n          //   </Form.Item>\r\n          //   <Form.Item name={\"flagcheat\"} label=\"作弊\">\r\n          //     <Select placeholder=\"请选择\">\r\n          //       <Option value=\"作弊\">作弊</Option>\r\n          //     </Select>\r\n          //   </Form.Item>\r\n          //   <Form.Item>\r\n          //     <Tooltip title=\"查找\">\r\n          //       <Button\r\n          //         htmlType=\"submit\"\r\n          //         style={{ border: 0 }}\r\n          //         shape=\"circle\"\r\n          //         icon={<SearchOutlined />}\r\n          //       />\r\n          //     </Tooltip>\r\n          //   </Form.Item>\r\n          // </Form>,\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        headerTitle=\"成绩信息表\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    grade: state.grade,\r\n    cooikeuserid: state.cooikeuserid,\r\n    gradecount: state.gradecount,\r\n  }),\r\n  //  函数确定\r\n  { StudentUserid, getStuGradeCountInfo, getGradeCheat }\r\n)(PersonalGradeTable);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\model\\index.tsx",["420","421"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { ReadOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport PersonalGradeTableEdit from \"../gradesearch\";\r\nconst PersonalEditTableModal = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const { clickdata } = props;\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" icon={<ReadOutlined />} onClick={showModal}>\r\n        详情\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"成绩详情表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <PersonalGradeTableEdit clickdata={clickdata}></PersonalGradeTableEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(PersonalEditTableModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personalgrade\\components\\gradesearch\\index.tsx",["422","423","424","425","426","427","428","429","430","431","432"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n  Tag,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport { GradeInfo } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nconst originData: any = [];\r\nlet counttype = {\r\n  classno: \"\",\r\n  username: \"\",\r\n  realName: \"\",\r\n  flaggrade: false,\r\n  flagcheat: false,\r\n  cname: \"\",\r\n  count: 0,\r\n  average: 0,\r\n  countgpa: 0,\r\n  averagegpa: 0,\r\n  countcredit: 0,\r\n  averagecountcredit: 0,\r\n};\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst PersonalGradeTableEdit = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const { clickdata } = props;\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  useEffect(() => {\r\n    props.GradeInfo(clickdata);\r\n  }, []);\r\n\r\n  const formatedata = props.grade;\r\n\r\n  const temp = formatedata.length;\r\n  originData.length = 0;\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      if (clickdata.username === formatedata[i].username) {\r\n        originData.push({\r\n          key: i + 1,\r\n          username: formatedata[i].username,\r\n          realName: formatedata[i].realName,\r\n          cname: formatedata[i].cname,\r\n          classno: formatedata[i].classno,\r\n          courseNo: formatedata[i].courseNo,\r\n          courseName: formatedata[i].courseName,\r\n          courseType: formatedata[i].courseType,\r\n          grade: formatedata[i].grade,\r\n          credit: formatedata[i].credit,\r\n          gpa: formatedata[i].gpa,\r\n          cheat: formatedata[i].cheat,\r\n          flaggrade: formatedata[i].flaggrade,\r\n          flagcheat: formatedata[i].flagcheat,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  let count = 0;\r\n  let average: any = 0;\r\n  let countgpa = 0;\r\n  let averagegpa: any = 0;\r\n  let countcredit = 0;\r\n  let averagecountcredit: any = 0;\r\n  let flaggrade = false;\r\n  let flagcheat = false;\r\n  let n: any;\r\n  if (data.length != 0) {\r\n    n = data.length;\r\n  }\r\n\r\n  for (let key in data) {\r\n    count = count + data[key].grade;\r\n    average = (count / n).toFixed(2);\r\n\r\n    countgpa = data[key].gpa + countgpa;\r\n    averagegpa = (countgpa / n).toFixed(2);\r\n    countcredit = countcredit + Number(data[key].credit);\r\n    averagecountcredit = (countcredit / n).toFixed(2);\r\n    if (data[key].flaggrade === true) {\r\n      flaggrade = true;\r\n    }\r\n    if (data[key].flagcheat === true) {\r\n      flagcheat = true;\r\n    }\r\n  }\r\n\r\n  counttype = {\r\n    classno: originData[0]?.classno,\r\n    username: originData[0]?.username,\r\n    realName: originData[0]?.realName,\r\n    cname: originData[0]?.cname,\r\n    flaggrade,\r\n    flagcheat,\r\n    count,\r\n    average,\r\n    countgpa,\r\n    averagegpa,\r\n    countcredit,\r\n    averagecountcredit,\r\n  };\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  const handleOk = () => {\r\n    props.AddGradeCount(counttype);\r\n\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        options={{ fullScreen: true, reload: false }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        footer={() => (\r\n          <div>\r\n            <Tag color=\"green\">总分:{count}</Tag>\r\n            <Tag color=\"green\">平均分:{average}</Tag>\r\n            <Tag color=\"green\">总绩点:{countgpa}</Tag>\r\n            <Tag color=\"green\">平均绩点:{averagegpa}</Tag>\r\n            <Tag color=\"green\">总学分:{countcredit}</Tag>\r\n            <Tag color=\"green\">平均学分:{averagecountcredit}</Tag>\r\n          </div>\r\n        )}\r\n        bordered\r\n        toolBarRender={() => [\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        headerTitle=\"成绩详情表\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ grade: state.grade }),\r\n  //  函数确定\r\n  { GradeInfo }\r\n)(PersonalGradeTableEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\personanl\\index.tsx",["433","434","435","436","437","438","439","440","441","442","443","444","445","446"],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\index.tsx",["447","448","449","450","451","452","453","454","455","456","457"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Tooltip,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { AdminSearchstu, AdminUserid, addstudent } from \"@/redux/actions\";\r\nimport DeleteStudentModel from \"@/containers/teacher/components/deletestudentmodel\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport EditStudentModal from \"./components/modal\";\r\nimport {\r\n  RequestData,\r\n  UseFetchDataAction,\r\n} from \"@ant-design/pro-table/lib/typing\";\r\nconst originData: any = [];\r\nconst cookicedata: any = [];\r\nconst searchdata: any = [];\r\n\r\nlet flag = 0;\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst Studentinfomation = (props) => {\r\n  const actionRef = useRef<ActionType>();\r\n  const [form] = Form.useForm();\r\n  const [data, setData]: any[] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  const userid = Cookies.get(\"userid\");\r\n  useEffect(() => {\r\n    props.AdminUserid({ id: userid });\r\n  }, []);\r\n  const cookiceuserid = props.cooikeuserid;\r\n  const cookicelength = cookiceuserid.length;\r\n  if (JSON.stringify(cookiceuserid) !== \"{}\") {\r\n    for (let i = cookicedata.length; i < cookicelength; i++) {\r\n      console.log(\"cookiceuserid\", cookiceuserid);\r\n      cookicedata.push({\r\n        key: i + 1,\r\n        username: cookiceuserid[i].username,\r\n        password: cookiceuserid[i].password,\r\n        type: cookiceuserid[i].type,\r\n        realName: cookiceuserid[i].realName,\r\n\r\n        sex: cookiceuserid[i].sex,\r\n        department: cookiceuserid[i].department,\r\n\r\n        age: cookiceuserid[i].age,\r\n        duty: cookiceuserid[i].duty,\r\n        IDcard: cookiceuserid[i].IDcard,\r\n\r\n        phone: cookiceuserid[i].phone,\r\n        eMail: cookiceuserid[i].eMail,\r\n\r\n        diploma: cookiceuserid[i].diploma,\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    props.addstudent({ id: userid });\r\n  }, []);\r\n\r\n  const formatedata = props.stuSearch;\r\n  const { Option } = Select;\r\n  const temp = formatedata.length;\r\n\r\n  console.log(\"props\", formatedata);\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    for (let i = originData.length; i < temp; i++) {\r\n      originData.push({\r\n        key: i + 1,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        department: formatedata[i].department,\r\n        cname: formatedata[i].cname,\r\n        classno: formatedata[i].classno,\r\n        sex: formatedata[i].sex,\r\n        phone: formatedata[i].phone,\r\n        years: formatedata[i].years,\r\n        term: formatedata[i].term,\r\n      });\r\n    }\r\n  }\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      username: \"\",\r\n      realName: \"\",\r\n      cname: \"\",\r\n      classno: \"\",\r\n      phone: \"\",\r\n\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n  const [tempsearch, settempsearch]: any = useState([]);\r\n\r\n  const [tempdata, settempdata] = useState();\r\n  const columns: any = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学年\",\r\n      dataIndex: \"years\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学期\",\r\n      dataIndex: \"term\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"性别\",\r\n      dataIndex: \"sex\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"department\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"电话\",\r\n      dataIndex: \"phone\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      align: \"center\",\r\n      render: (_, record) => {\r\n        return (\r\n          <Typography.Link\r\n            onClick={() => {\r\n              settempdata(record);\r\n            }}\r\n          >\r\n            <DeleteStudentModel tempdata={tempdata}></DeleteStudentModel>\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    props.AdminSearchstu(e);\r\n    flag = 1;\r\n  };\r\n\r\n  const search = props.stuSearch;\r\n\r\n  const serachtemp = search.length;\r\n  searchdata.length = 0;\r\n  if (JSON.stringify(search) !== \"{}\") {\r\n    for (let i = searchdata.length; i < serachtemp; i++) {\r\n      searchdata.push({\r\n        key: i + 1,\r\n        username: search[i].username,\r\n        realName: search[i].realName,\r\n        cname: search[i].cname,\r\n        department: search[i].department,\r\n        classno: search[i].classno,\r\n        sex: search[i].sex,\r\n        phone: search[i].phone,\r\n        years: search[i].years,\r\n        term: search[i].term,\r\n      });\r\n    }\r\n  }\r\n  const refresh = () => {\r\n    window.history.go(0);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        actionRef={actionRef}\r\n        search={false}\r\n        options={{ fullScreen: true, reload: false }}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered={true}\r\n        headerTitle=\"学生信息表\"\r\n        toolBarRender={() => [\r\n          <Form name=\"nest-messages\" layout=\"inline\" onFinish={onFinish}>\r\n            <Form.Item name={\"years\"} label=\"学年\">\r\n              <Select placeholder=\"请选择学年\">\r\n                <Option value=\"20202021\">2020-2021</Option>\r\n                <Option value=\"20192020\">2019-2020</Option>\r\n                <Option value=\"20182019\">2018-2019</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"term\"} label=\"学期\">\r\n              <Select placeholder=\"请选择学期\">\r\n                <Option value=\"第一学期\">第一学期</Option>\r\n                <Option value=\"第二学期\">第二学期</Option>\r\n                <Option value=\"第三学期\">第三学期</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item name={\"department\"} label=\"学院\">\r\n              <Select placeholder=\"请选择学院\">\r\n                <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n                <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n                <Option value=\"机械工程学院\">机械工程学院</Option>\r\n                <Option value=\"交通学院\">交通学院</Option>\r\n                <Option value=\"化学工程学院\">化学工程学院</Option>\r\n                <Option value=\"材料学院\">材料学院</Option>\r\n                <Option value=\"理学院\">理学院</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Tooltip title=\"查找\">\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  style={{ border: 0 }}\r\n                  shape=\"circle\"\r\n                  icon={<SearchOutlined />}\r\n                />\r\n              </Tooltip>\r\n            </Form.Item>\r\n          </Form>,\r\n          <EditStudentModal></EditStudentModal>,\r\n\r\n          <Tooltip title=\"刷新\">\r\n            <Button\r\n              style={{ border: 0 }}\r\n              shape=\"circle\"\r\n              onClick={refresh}\r\n              icon={<RedoOutlined />}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        dataSource={\r\n          flag === 0\r\n            ? [...data]\r\n            : [...searchdata] || (flag === 2 && [...tempsearch])\r\n        }\r\n        columns={columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default connect(\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n    cooikeuserid: state.cooikeuserid,\r\n    stuSearch: state.stuSearch,\r\n  }),\r\n\r\n  { AdminSearchstu, AdminUserid, addstudent }\r\n)(Studentinfomation);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\modal\\index.tsx",["458","459"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport StudentRegister from \"../addstu\";\r\nconst EditStudentModal = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<FormOutlined />} onClick={showModal}>\r\n        录入\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"录入表\"\r\n        width={600}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <StudentRegister></StudentRegister>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditStudentModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addstudent\\components\\addstu\\index.tsx",["460","461","462","463","464","465","466","467"],"//教务员注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { studentRegister } from \"@/redux/actions\";\r\nfunction StudentRegister(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"student\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: state.type,\r\n    });\r\n    props.studentRegister(state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  console.log(\"props\", props);\r\n\r\n  const { msg } = props.user;\r\n  console.log(\"msg\", msg);\r\n\r\n  return (\r\n    <Form onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"学号不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          // onChange={val => { this.handleChange('username', val) }}\r\n          placeholder=\"学号\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n          // onChange={val => { this.handleChange('password', val) }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password2\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"确认密码\"\r\n          // onChange={val => { this.handleChange('password2', val) }}\r\n        />\r\n      </Form.Item>\r\n      {JSON.stringify(msg) != \"{}\" && msg !== \"用户名或密码不正确!\" ? (\r\n        <span className=\"errorMsg\">{msg}</span>\r\n      ) : (\r\n        JSON.stringify(msg) != \"{}\" && (\r\n          <span style={{ color: \"green\", fontWeight: \"bold\" }}>录入成功！</span>\r\n        )\r\n      )}\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          录入\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { studentRegister }\r\n)(StudentRegister);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\index.tsx",["468","469","470","471","472","473","474","475","476","477","478"],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\modal\\index.tsx",["479","480"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport TeacherRegister from \"../addtea\";\r\nconst EditTeacherModal = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" icon={<FormOutlined />} onClick={showModal}>\r\n        录入\r\n      </Button>\r\n      <Modal\r\n        afterClose={() => {\r\n          window.history.go(0);\r\n        }}\r\n        title=\"录入表\"\r\n        width={600}\r\n        visible={visible}\r\n        footer={null}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <TeacherRegister></TeacherRegister>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user })\r\n  //  函数确定\r\n)(EditTeacherModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\addtea\\index.tsx",["481","482","483","484","485","486","487","488"],"//教务员注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { teacherRegister } from \"@/redux/actions\";\r\nfunction TeacherRegister(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"teacher\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: state.type,\r\n    });\r\n    props.teacherRegister(state);\r\n  };\r\n  // 点击注册调用\r\n\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  console.log(\"props\", props);\r\n\r\n  const { msg } = props.user;\r\n  console.log(\"msg\", msg);\r\n\r\n  return (\r\n    <Form onFinish={onFinish} validateMessages={validateMessages}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"账号不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          // onChange={val => { this.handleChange('username', val) }}\r\n          placeholder=\"账号\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"密码\"\r\n          // onChange={val => { this.handleChange('password', val) }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password2\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"密码不允许少于6位大于11位\",\r\n\r\n            min: 6,\r\n            max: 11,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"确认密码\"\r\n          // onChange={val => { this.handleChange('password2', val) }}\r\n        />\r\n      </Form.Item>\r\n      {JSON.stringify(msg) != \"{}\" && msg !== \"用户名或密码不正确!\" ? (\r\n        <span className=\"errorMsg\">{msg}</span>\r\n      ) : (\r\n        JSON.stringify(msg) != \"{}\" && (\r\n          <span style={{ color: \"green\", fontWeight: \"bold\" }}>录入成功！</span>\r\n        )\r\n      )}\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          录入\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { teacherRegister }\r\n)(TeacherRegister);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\addteacher\\components\\deleteteacher\\index.tsx",["489","490","491"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Popconfirm } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { DeleteTeacher } from \"@/redux/actions\";\r\nimport { DeleteOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nconst DeleteTeacherModel = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const { tempdata } = props;\r\n\r\n  const handleOk = () => {\r\n    props.DeleteTeacher(tempdata);\r\n    setIsModalVisible(false);\r\n    window.history.go(0);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"是否确定删除？\"\r\n        onConfirm={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Button type=\"link\" icon={<DeleteOutlined />} onClick={showModal}>\r\n          删除\r\n        </Button>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({\r\n    user: state.user,\r\n  }),\r\n  //  函数确定\r\n  { DeleteTeacher }\r\n)(DeleteTeacherModel);\r\n",{"ruleId":"492","severity":1,"message":"493","line":5,"column":37,"nodeType":"494","messageId":"495","endLine":5,"endColumn":45},{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","replacedBy":"499"},{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":2,"column":27,"nodeType":"494","messageId":"495","endLine":2,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":168,"column":19,"nodeType":"504","endLine":168,"endColumn":40},{"ruleId":"502","severity":1,"message":"503","line":285,"column":19,"nodeType":"504","endLine":285,"endColumn":40},{"ruleId":"502","severity":1,"message":"503","line":402,"column":19,"nodeType":"504","endLine":402,"endColumn":40},{"ruleId":"502","severity":1,"message":"503","line":519,"column":19,"nodeType":"504","endLine":519,"endColumn":40},{"ruleId":"500","severity":1,"message":"505","line":6,"column":31,"nodeType":"494","messageId":"495","endLine":6,"endColumn":36},{"ruleId":"502","severity":1,"message":"503","line":117,"column":21,"nodeType":"504","endLine":117,"endColumn":45},{"ruleId":"502","severity":1,"message":"503","line":203,"column":21,"nodeType":"504","endLine":203,"endColumn":45},{"ruleId":"502","severity":1,"message":"503","line":288,"column":21,"nodeType":"504","endLine":288,"endColumn":45},{"ruleId":"502","severity":1,"message":"503","line":373,"column":21,"nodeType":"504","endLine":373,"endColumn":45},{"ruleId":"500","severity":1,"message":"506","line":36,"column":10,"nodeType":"494","messageId":"495","endLine":36,"endColumn":19},{"ruleId":"507","severity":1,"message":"508","line":76,"column":15,"nodeType":"509","messageId":"510","endLine":76,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":77,"column":14,"nodeType":"509","messageId":"510","endLine":77,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":78,"column":10,"nodeType":"509","messageId":"510","endLine":78,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":80,"column":14,"nodeType":"509","messageId":"510","endLine":80,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":81,"column":15,"nodeType":"509","messageId":"510","endLine":81,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":84,"column":14,"nodeType":"509","messageId":"510","endLine":84,"endColumn":45},{"ruleId":"500","severity":1,"message":"511","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":14},{"ruleId":"507","severity":1,"message":"508","line":94,"column":15,"nodeType":"509","messageId":"510","endLine":94,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":95,"column":14,"nodeType":"509","messageId":"510","endLine":95,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":96,"column":10,"nodeType":"509","messageId":"510","endLine":96,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":98,"column":14,"nodeType":"509","messageId":"510","endLine":98,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":99,"column":15,"nodeType":"509","messageId":"510","endLine":99,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":102,"column":14,"nodeType":"509","messageId":"510","endLine":102,"endColumn":45},{"ruleId":"507","severity":1,"message":"508","line":54,"column":15,"nodeType":"509","messageId":"510","endLine":54,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":55,"column":14,"nodeType":"509","messageId":"510","endLine":55,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":56,"column":10,"nodeType":"509","messageId":"510","endLine":56,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":58,"column":14,"nodeType":"509","messageId":"510","endLine":58,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":59,"column":15,"nodeType":"509","messageId":"510","endLine":59,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":62,"column":14,"nodeType":"509","messageId":"510","endLine":62,"endColumn":45},{"ruleId":"500","severity":1,"message":"512","line":19,"column":33,"nodeType":"494","messageId":"495","endLine":19,"endColumn":39},{"ruleId":"500","severity":1,"message":"513","line":20,"column":7,"nodeType":"494","messageId":"495","endLine":20,"endColumn":23},{"ruleId":"500","severity":1,"message":"514","line":32,"column":9,"nodeType":"494","messageId":"495","endLine":32,"endColumn":23},{"ruleId":"515","severity":1,"message":"516","line":53,"column":6,"nodeType":"517","endLine":53,"endColumn":8,"suggestions":"518"},{"ruleId":"519","severity":1,"message":"520","line":64,"column":24,"nodeType":"521","messageId":"522","endLine":64,"endColumn":26},{"ruleId":"500","severity":1,"message":"523","line":7,"column":3,"nodeType":"494","messageId":"495","endLine":7,"endColumn":17},{"ruleId":"500","severity":1,"message":"512","line":22,"column":33,"nodeType":"494","messageId":"495","endLine":22,"endColumn":39},{"ruleId":"500","severity":1,"message":"513","line":23,"column":7,"nodeType":"494","messageId":"495","endLine":23,"endColumn":23},{"ruleId":"515","severity":1,"message":"516","line":40,"column":6,"nodeType":"517","endLine":40,"endColumn":8,"suggestions":"524"},{"ruleId":"500","severity":1,"message":"514","line":52,"column":9,"nodeType":"494","messageId":"495","endLine":52,"endColumn":23},{"ruleId":"519","severity":1,"message":"520","line":68,"column":24,"nodeType":"521","messageId":"522","endLine":68,"endColumn":26},{"ruleId":"500","severity":1,"message":"525","line":11,"column":27,"nodeType":"494","messageId":"495","endLine":11,"endColumn":32},{"ruleId":"515","severity":1,"message":"516","line":30,"column":6,"nodeType":"517","endLine":30,"endColumn":8,"suggestions":"526"},{"ruleId":"519","severity":1,"message":"520","line":46,"column":24,"nodeType":"521","messageId":"522","endLine":46,"endColumn":26},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"528","line":6,"column":3,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"500","severity":1,"message":"529","line":21,"column":8,"nodeType":"494","messageId":"495","endLine":21,"endColumn":15},{"ruleId":"500","severity":1,"message":"530","line":24,"column":3,"nodeType":"494","messageId":"495","endLine":24,"endColumn":14},{"ruleId":"500","severity":1,"message":"531","line":25,"column":3,"nodeType":"494","messageId":"495","endLine":25,"endColumn":21},{"ruleId":"500","severity":1,"message":"532","line":70,"column":16,"nodeType":"494","messageId":"495","endLine":70,"endColumn":23},{"ruleId":"500","severity":1,"message":"533","line":73,"column":9,"nodeType":"494","messageId":"495","endLine":73,"endColumn":18},{"ruleId":"515","severity":1,"message":"534","line":77,"column":6,"nodeType":"517","endLine":77,"endColumn":8,"suggestions":"535"},{"ruleId":"515","severity":1,"message":"534","line":108,"column":6,"nodeType":"517","endLine":108,"endColumn":8,"suggestions":"536"},{"ruleId":"500","severity":1,"message":"537","line":130,"column":9,"nodeType":"494","messageId":"495","endLine":130,"endColumn":13},{"ruleId":"500","severity":1,"message":"538","line":146,"column":22,"nodeType":"494","messageId":"495","endLine":146,"endColumn":35},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"529","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":15},{"ruleId":"500","severity":1,"message":"511","line":20,"column":8,"nodeType":"494","messageId":"495","endLine":20,"endColumn":14},{"ruleId":"500","severity":1,"message":"537","line":81,"column":9,"nodeType":"494","messageId":"495","endLine":81,"endColumn":13},{"ruleId":"515","severity":1,"message":"540","line":97,"column":6,"nodeType":"517","endLine":97,"endColumn":8,"suggestions":"541"},{"ruleId":"502","severity":1,"message":"542","line":225,"column":13,"nodeType":"504","endLine":231,"endColumn":14},{"ruleId":"543","severity":1,"message":"544","line":226,"column":20,"nodeType":"509","messageId":"545","endLine":226,"endColumn":34},{"ruleId":"502","severity":1,"message":"503","line":235,"column":15,"nodeType":"504","endLine":235,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":289,"column":19,"nodeType":"521","messageId":"522","endLine":289,"endColumn":21},{"ruleId":"500","severity":1,"message":"546","line":324,"column":10,"nodeType":"494","messageId":"495","endLine":324,"endColumn":24},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"547","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":17},{"ruleId":"500","severity":1,"message":"493","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":18},{"ruleId":"500","severity":1,"message":"505","line":6,"column":44,"nodeType":"494","messageId":"495","endLine":6,"endColumn":49},{"ruleId":"500","severity":1,"message":"511","line":7,"column":8,"nodeType":"494","messageId":"495","endLine":7,"endColumn":14},{"ruleId":"500","severity":1,"message":"548","line":8,"column":8,"nodeType":"494","messageId":"495","endLine":8,"endColumn":17},{"ruleId":"500","severity":1,"message":"549","line":9,"column":8,"nodeType":"494","messageId":"495","endLine":9,"endColumn":18},{"ruleId":"500","severity":1,"message":"506","line":26,"column":10,"nodeType":"494","messageId":"495","endLine":26,"endColumn":19},{"ruleId":"500","severity":1,"message":"550","line":26,"column":21,"nodeType":"494","messageId":"495","endLine":26,"endColumn":34},{"ruleId":"500","severity":1,"message":"551","line":27,"column":10,"nodeType":"494","messageId":"495","endLine":27,"endColumn":23},{"ruleId":"500","severity":1,"message":"552","line":27,"column":25,"nodeType":"494","messageId":"495","endLine":27,"endColumn":41},{"ruleId":"507","severity":1,"message":"508","line":53,"column":15,"nodeType":"509","messageId":"510","endLine":53,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":54,"column":14,"nodeType":"509","messageId":"510","endLine":54,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":55,"column":10,"nodeType":"509","messageId":"510","endLine":55,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":57,"column":14,"nodeType":"509","messageId":"510","endLine":57,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":58,"column":15,"nodeType":"509","messageId":"510","endLine":58,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":61,"column":14,"nodeType":"509","messageId":"510","endLine":61,"endColumn":45},{"ruleId":"500","severity":1,"message":"553","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":15},{"ruleId":"500","severity":1,"message":"554","line":5,"column":26,"nodeType":"494","messageId":"495","endLine":5,"endColumn":51},{"ruleId":"500","severity":1,"message":"546","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":24},{"ruleId":"500","severity":1,"message":"553","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":15},{"ruleId":"500","severity":1,"message":"546","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":24},{"ruleId":"500","severity":1,"message":"527","line":2,"column":3,"nodeType":"494","messageId":"495","endLine":2,"endColumn":8},{"ruleId":"500","severity":1,"message":"555","line":4,"column":3,"nodeType":"494","messageId":"495","endLine":4,"endColumn":8},{"ruleId":"500","severity":1,"message":"556","line":7,"column":3,"nodeType":"494","messageId":"495","endLine":7,"endColumn":6},{"ruleId":"515","severity":1,"message":"534","line":31,"column":6,"nodeType":"517","endLine":31,"endColumn":8,"suggestions":"557"},{"ruleId":"515","severity":1,"message":"558","line":63,"column":6,"nodeType":"517","endLine":63,"endColumn":8,"suggestions":"559"},{"ruleId":"500","severity":1,"message":"560","line":100,"column":9,"nodeType":"494","messageId":"495","endLine":100,"endColumn":21},{"ruleId":"500","severity":1,"message":"561","line":104,"column":9,"nodeType":"494","messageId":"495","endLine":104,"endColumn":17},{"ruleId":"500","severity":1,"message":"562","line":111,"column":9,"nodeType":"494","messageId":"495","endLine":111,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"528","line":6,"column":3,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"500","severity":1,"message":"563","line":8,"column":3,"nodeType":"494","messageId":"495","endLine":8,"endColumn":13},{"ruleId":"500","severity":1,"message":"529","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":15},{"ruleId":"500","severity":1,"message":"537","line":78,"column":9,"nodeType":"494","messageId":"495","endLine":78,"endColumn":13},{"ruleId":"515","severity":1,"message":"564","line":93,"column":6,"nodeType":"517","endLine":93,"endColumn":8,"suggestions":"565"},{"ruleId":"500","severity":1,"message":"566","line":121,"column":9,"nodeType":"494","messageId":"495","endLine":121,"endColumn":13},{"ruleId":"519","severity":1,"message":"520","line":241,"column":19,"nodeType":"521","messageId":"522","endLine":241,"endColumn":21},{"ruleId":"500","severity":1,"message":"546","line":275,"column":10,"nodeType":"494","messageId":"495","endLine":275,"endColumn":24},{"ruleId":"500","severity":1,"message":"567","line":277,"column":9,"nodeType":"494","messageId":"495","endLine":277,"endColumn":21},{"ruleId":"500","severity":1,"message":"568","line":283,"column":9,"nodeType":"494","messageId":"495","endLine":283,"endColumn":17},{"ruleId":"500","severity":1,"message":"493","line":6,"column":10,"nodeType":"494","messageId":"495","endLine":6,"endColumn":18},{"ruleId":"500","severity":1,"message":"569","line":7,"column":23,"nodeType":"494","messageId":"495","endLine":7,"endColumn":34},{"ruleId":"500","severity":1,"message":"505","line":7,"column":44,"nodeType":"494","messageId":"495","endLine":7,"endColumn":49},{"ruleId":"500","severity":1,"message":"570","line":39,"column":10,"nodeType":"494","messageId":"495","endLine":39,"endColumn":21},{"ruleId":"500","severity":1,"message":"571","line":39,"column":23,"nodeType":"494","messageId":"495","endLine":39,"endColumn":37},{"ruleId":"515","severity":1,"message":"534","line":42,"column":6,"nodeType":"517","endLine":42,"endColumn":8,"suggestions":"572"},{"ruleId":"500","severity":1,"message":"506","line":73,"column":10,"nodeType":"494","messageId":"495","endLine":73,"endColumn":19},{"ruleId":"500","severity":1,"message":"550","line":73,"column":21,"nodeType":"494","messageId":"495","endLine":73,"endColumn":34},{"ruleId":"500","severity":1,"message":"551","line":74,"column":10,"nodeType":"494","messageId":"495","endLine":74,"endColumn":23},{"ruleId":"500","severity":1,"message":"552","line":74,"column":25,"nodeType":"494","messageId":"495","endLine":74,"endColumn":41},{"ruleId":"507","severity":1,"message":"508","line":108,"column":15,"nodeType":"509","messageId":"510","endLine":108,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":109,"column":14,"nodeType":"509","messageId":"510","endLine":109,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":110,"column":10,"nodeType":"509","messageId":"510","endLine":110,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":112,"column":14,"nodeType":"509","messageId":"510","endLine":112,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":113,"column":15,"nodeType":"509","messageId":"510","endLine":113,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":116,"column":14,"nodeType":"509","messageId":"510","endLine":116,"endColumn":45},{"ruleId":"500","severity":1,"message":"493","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":18},{"ruleId":"500","severity":1,"message":"505","line":6,"column":44,"nodeType":"494","messageId":"495","endLine":6,"endColumn":49},{"ruleId":"500","severity":1,"message":"506","line":24,"column":10,"nodeType":"494","messageId":"495","endLine":24,"endColumn":19},{"ruleId":"500","severity":1,"message":"550","line":24,"column":21,"nodeType":"494","messageId":"495","endLine":24,"endColumn":34},{"ruleId":"500","severity":1,"message":"551","line":25,"column":10,"nodeType":"494","messageId":"495","endLine":25,"endColumn":23},{"ruleId":"500","severity":1,"message":"552","line":25,"column":25,"nodeType":"494","messageId":"495","endLine":25,"endColumn":41},{"ruleId":"507","severity":1,"message":"508","line":54,"column":15,"nodeType":"509","messageId":"510","endLine":54,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":55,"column":14,"nodeType":"509","messageId":"510","endLine":55,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":56,"column":10,"nodeType":"509","messageId":"510","endLine":56,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":58,"column":14,"nodeType":"509","messageId":"510","endLine":58,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":59,"column":15,"nodeType":"509","messageId":"510","endLine":59,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":62,"column":14,"nodeType":"509","messageId":"510","endLine":62,"endColumn":45},{"ruleId":"500","severity":1,"message":"527","line":2,"column":3,"nodeType":"494","messageId":"495","endLine":2,"endColumn":8},{"ruleId":"500","severity":1,"message":"555","line":4,"column":3,"nodeType":"494","messageId":"495","endLine":4,"endColumn":8},{"ruleId":"500","severity":1,"message":"556","line":7,"column":3,"nodeType":"494","messageId":"495","endLine":7,"endColumn":6},{"ruleId":"515","severity":1,"message":"534","line":31,"column":6,"nodeType":"517","endLine":31,"endColumn":8,"suggestions":"573"},{"ruleId":"500","severity":1,"message":"574","line":62,"column":10,"nodeType":"494","messageId":"495","endLine":62,"endColumn":21},{"ruleId":"500","severity":1,"message":"575","line":62,"column":23,"nodeType":"494","messageId":"495","endLine":62,"endColumn":37},{"ruleId":"500","severity":1,"message":"560","line":97,"column":9,"nodeType":"494","messageId":"495","endLine":97,"endColumn":21},{"ruleId":"500","severity":1,"message":"561","line":101,"column":9,"nodeType":"494","messageId":"495","endLine":101,"endColumn":17},{"ruleId":"500","severity":1,"message":"562","line":108,"column":9,"nodeType":"494","messageId":"495","endLine":108,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"528","line":6,"column":3,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"500","severity":1,"message":"563","line":8,"column":3,"nodeType":"494","messageId":"495","endLine":8,"endColumn":13},{"ruleId":"500","severity":1,"message":"529","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":15},{"ruleId":"500","severity":1,"message":"537","line":79,"column":9,"nodeType":"494","messageId":"495","endLine":79,"endColumn":13},{"ruleId":"515","severity":1,"message":"564","line":94,"column":6,"nodeType":"517","endLine":94,"endColumn":8,"suggestions":"576"},{"ruleId":"500","severity":1,"message":"566","line":123,"column":9,"nodeType":"494","messageId":"495","endLine":123,"endColumn":13},{"ruleId":"519","severity":1,"message":"520","line":249,"column":19,"nodeType":"521","messageId":"522","endLine":249,"endColumn":21},{"ruleId":"500","severity":1,"message":"546","line":284,"column":10,"nodeType":"494","messageId":"495","endLine":284,"endColumn":24},{"ruleId":"500","severity":1,"message":"567","line":286,"column":9,"nodeType":"494","messageId":"495","endLine":286,"endColumn":21},{"ruleId":"500","severity":1,"message":"568","line":292,"column":9,"nodeType":"494","messageId":"495","endLine":292,"endColumn":17},{"ruleId":"500","severity":1,"message":"493","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":18},{"ruleId":"500","severity":1,"message":"569","line":6,"column":23,"nodeType":"494","messageId":"495","endLine":6,"endColumn":34},{"ruleId":"500","severity":1,"message":"505","line":6,"column":44,"nodeType":"494","messageId":"495","endLine":6,"endColumn":49},{"ruleId":"515","severity":1,"message":"534","line":34,"column":6,"nodeType":"517","endLine":34,"endColumn":8,"suggestions":"577"},{"ruleId":"500","severity":1,"message":"506","line":57,"column":10,"nodeType":"494","messageId":"495","endLine":57,"endColumn":19},{"ruleId":"500","severity":1,"message":"550","line":57,"column":21,"nodeType":"494","messageId":"495","endLine":57,"endColumn":34},{"ruleId":"500","severity":1,"message":"551","line":58,"column":10,"nodeType":"494","messageId":"495","endLine":58,"endColumn":23},{"ruleId":"500","severity":1,"message":"552","line":58,"column":25,"nodeType":"494","messageId":"495","endLine":58,"endColumn":41},{"ruleId":"500","severity":1,"message":"578","line":84,"column":11,"nodeType":"494","messageId":"495","endLine":84,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":86,"column":15,"nodeType":"509","messageId":"510","endLine":86,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":87,"column":14,"nodeType":"509","messageId":"510","endLine":87,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":88,"column":10,"nodeType":"509","messageId":"510","endLine":88,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":90,"column":14,"nodeType":"509","messageId":"510","endLine":90,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":91,"column":15,"nodeType":"509","messageId":"510","endLine":91,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":94,"column":14,"nodeType":"509","messageId":"510","endLine":94,"endColumn":45},{"ruleId":"500","severity":1,"message":"527","line":2,"column":3,"nodeType":"494","messageId":"495","endLine":2,"endColumn":8},{"ruleId":"500","severity":1,"message":"555","line":4,"column":3,"nodeType":"494","messageId":"495","endLine":4,"endColumn":8},{"ruleId":"500","severity":1,"message":"556","line":7,"column":3,"nodeType":"494","messageId":"495","endLine":7,"endColumn":6},{"ruleId":"500","severity":1,"message":"579","line":9,"column":3,"nodeType":"494","messageId":"495","endLine":9,"endColumn":7},{"ruleId":"500","severity":1,"message":"580","line":21,"column":24,"nodeType":"494","messageId":"495","endLine":21,"endColumn":38},{"ruleId":"515","severity":1,"message":"534","line":31,"column":6,"nodeType":"517","endLine":31,"endColumn":8,"suggestions":"581"},{"ruleId":"500","severity":1,"message":"578","line":32,"column":11,"nodeType":"494","messageId":"495","endLine":32,"endColumn":17},{"ruleId":"500","severity":1,"message":"560","line":102,"column":9,"nodeType":"494","messageId":"495","endLine":102,"endColumn":21},{"ruleId":"500","severity":1,"message":"561","line":106,"column":9,"nodeType":"494","messageId":"495","endLine":106,"endColumn":17},{"ruleId":"500","severity":1,"message":"562","line":113,"column":9,"nodeType":"494","messageId":"495","endLine":113,"endColumn":19},{"ruleId":"500","severity":1,"message":"582","line":253,"column":9,"nodeType":"494","messageId":"495","endLine":253,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"528","line":6,"column":3,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"500","severity":1,"message":"563","line":8,"column":3,"nodeType":"494","messageId":"495","endLine":8,"endColumn":13},{"ruleId":"500","severity":1,"message":"529","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":15},{"ruleId":"500","severity":1,"message":"537","line":78,"column":9,"nodeType":"494","messageId":"495","endLine":78,"endColumn":13},{"ruleId":"515","severity":1,"message":"564","line":93,"column":6,"nodeType":"517","endLine":93,"endColumn":8,"suggestions":"583"},{"ruleId":"500","severity":1,"message":"566","line":121,"column":9,"nodeType":"494","messageId":"495","endLine":121,"endColumn":13},{"ruleId":"519","severity":1,"message":"520","line":241,"column":19,"nodeType":"521","messageId":"522","endLine":241,"endColumn":21},{"ruleId":"500","severity":1,"message":"546","line":275,"column":10,"nodeType":"494","messageId":"495","endLine":275,"endColumn":24},{"ruleId":"500","severity":1,"message":"567","line":277,"column":9,"nodeType":"494","messageId":"495","endLine":277,"endColumn":21},{"ruleId":"500","severity":1,"message":"568","line":283,"column":9,"nodeType":"494","messageId":"495","endLine":283,"endColumn":17},{"ruleId":"500","severity":1,"message":"493","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":18},{"ruleId":"500","severity":1,"message":"569","line":6,"column":23,"nodeType":"494","messageId":"495","endLine":6,"endColumn":34},{"ruleId":"500","severity":1,"message":"505","line":6,"column":44,"nodeType":"494","messageId":"495","endLine":6,"endColumn":49},{"ruleId":"515","severity":1,"message":"534","line":37,"column":6,"nodeType":"517","endLine":37,"endColumn":8,"suggestions":"584"},{"ruleId":"500","severity":1,"message":"506","line":66,"column":10,"nodeType":"494","messageId":"495","endLine":66,"endColumn":19},{"ruleId":"500","severity":1,"message":"550","line":66,"column":21,"nodeType":"494","messageId":"495","endLine":66,"endColumn":34},{"ruleId":"500","severity":1,"message":"551","line":67,"column":10,"nodeType":"494","messageId":"495","endLine":67,"endColumn":23},{"ruleId":"500","severity":1,"message":"552","line":67,"column":25,"nodeType":"494","messageId":"495","endLine":67,"endColumn":41},{"ruleId":"507","severity":1,"message":"508","line":102,"column":15,"nodeType":"509","messageId":"510","endLine":102,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":103,"column":14,"nodeType":"509","messageId":"510","endLine":103,"endColumn":30},{"ruleId":"507","severity":1,"message":"508","line":104,"column":10,"nodeType":"509","messageId":"510","endLine":104,"endColumn":27},{"ruleId":"507","severity":1,"message":"508","line":106,"column":14,"nodeType":"509","messageId":"510","endLine":106,"endColumn":33},{"ruleId":"507","severity":1,"message":"508","line":107,"column":15,"nodeType":"509","messageId":"510","endLine":107,"endColumn":34},{"ruleId":"507","severity":1,"message":"508","line":110,"column":14,"nodeType":"509","messageId":"510","endLine":110,"endColumn":45},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"528","line":6,"column":3,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"500","severity":1,"message":"529","line":21,"column":8,"nodeType":"494","messageId":"495","endLine":21,"endColumn":15},{"ruleId":"500","severity":1,"message":"530","line":24,"column":3,"nodeType":"494","messageId":"495","endLine":24,"endColumn":14},{"ruleId":"500","severity":1,"message":"531","line":25,"column":3,"nodeType":"494","messageId":"495","endLine":25,"endColumn":21},{"ruleId":"500","severity":1,"message":"532","line":70,"column":16,"nodeType":"494","messageId":"495","endLine":70,"endColumn":23},{"ruleId":"500","severity":1,"message":"533","line":73,"column":9,"nodeType":"494","messageId":"495","endLine":73,"endColumn":18},{"ruleId":"515","severity":1,"message":"534","line":77,"column":6,"nodeType":"517","endLine":77,"endColumn":8,"suggestions":"585"},{"ruleId":"515","severity":1,"message":"534","line":106,"column":6,"nodeType":"517","endLine":106,"endColumn":8,"suggestions":"586"},{"ruleId":"500","severity":1,"message":"537","line":129,"column":9,"nodeType":"494","messageId":"495","endLine":129,"endColumn":13},{"ruleId":"500","severity":1,"message":"538","line":145,"column":22,"nodeType":"494","messageId":"495","endLine":145,"endColumn":35},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"501","line":2,"column":27,"nodeType":"494","messageId":"495","endLine":2,"endColumn":36},{"ruleId":"500","severity":1,"message":"587","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":10},{"ruleId":"500","severity":1,"message":"505","line":6,"column":31,"nodeType":"494","messageId":"495","endLine":6,"endColumn":36},{"ruleId":"500","severity":1,"message":"588","line":8,"column":8,"nodeType":"494","messageId":"495","endLine":8,"endColumn":14},{"ruleId":"500","severity":1,"message":"589","line":9,"column":8,"nodeType":"494","messageId":"495","endLine":9,"endColumn":14},{"ruleId":"500","severity":1,"message":"493","line":14,"column":10,"nodeType":"494","messageId":"495","endLine":14,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":110,"column":28,"nodeType":"521","messageId":"522","endLine":110,"endColumn":30},{"ruleId":"519","severity":1,"message":"520","line":113,"column":29,"nodeType":"521","messageId":"522","endLine":113,"endColumn":31},{"ruleId":"500","severity":1,"message":"527","line":3,"column":3,"nodeType":"494","messageId":"495","endLine":3,"endColumn":8},{"ruleId":"500","severity":1,"message":"528","line":6,"column":3,"nodeType":"494","messageId":"495","endLine":6,"endColumn":13},{"ruleId":"500","severity":1,"message":"529","line":21,"column":8,"nodeType":"494","messageId":"495","endLine":21,"endColumn":15},{"ruleId":"500","severity":1,"message":"530","line":24,"column":3,"nodeType":"494","messageId":"495","endLine":24,"endColumn":14},{"ruleId":"500","severity":1,"message":"531","line":25,"column":3,"nodeType":"494","messageId":"495","endLine":25,"endColumn":21},{"ruleId":"500","severity":1,"message":"532","line":70,"column":16,"nodeType":"494","messageId":"495","endLine":70,"endColumn":23},{"ruleId":"500","severity":1,"message":"533","line":73,"column":9,"nodeType":"494","messageId":"495","endLine":73,"endColumn":18},{"ruleId":"515","severity":1,"message":"534","line":77,"column":6,"nodeType":"517","endLine":77,"endColumn":8,"suggestions":"590"},{"ruleId":"515","severity":1,"message":"534","line":106,"column":6,"nodeType":"517","endLine":106,"endColumn":8,"suggestions":"591"},{"ruleId":"500","severity":1,"message":"537","line":137,"column":9,"nodeType":"494","messageId":"495","endLine":137,"endColumn":13},{"ruleId":"500","severity":1,"message":"538","line":153,"column":22,"nodeType":"494","messageId":"495","endLine":153,"endColumn":35},{"ruleId":"500","severity":1,"message":"501","line":4,"column":17,"nodeType":"494","messageId":"495","endLine":4,"endColumn":26},{"ruleId":"500","severity":1,"message":"539","line":4,"column":28,"nodeType":"494","messageId":"495","endLine":4,"endColumn":34},{"ruleId":"500","severity":1,"message":"501","line":2,"column":27,"nodeType":"494","messageId":"495","endLine":2,"endColumn":36},{"ruleId":"500","severity":1,"message":"587","line":5,"column":8,"nodeType":"494","messageId":"495","endLine":5,"endColumn":10},{"ruleId":"500","severity":1,"message":"505","line":6,"column":31,"nodeType":"494","messageId":"495","endLine":6,"endColumn":36},{"ruleId":"500","severity":1,"message":"588","line":8,"column":8,"nodeType":"494","messageId":"495","endLine":8,"endColumn":14},{"ruleId":"500","severity":1,"message":"589","line":9,"column":8,"nodeType":"494","messageId":"495","endLine":9,"endColumn":14},{"ruleId":"500","severity":1,"message":"493","line":14,"column":10,"nodeType":"494","messageId":"495","endLine":14,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":110,"column":28,"nodeType":"521","messageId":"522","endLine":110,"endColumn":30},{"ruleId":"519","severity":1,"message":"520","line":113,"column":29,"nodeType":"521","messageId":"522","endLine":113,"endColumn":31},{"ruleId":"500","severity":1,"message":"553","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":15},{"ruleId":"500","severity":1,"message":"554","line":5,"column":26,"nodeType":"494","messageId":"495","endLine":5,"endColumn":51},{"ruleId":"500","severity":1,"message":"546","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":24},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["592"],"no-negated-in-lhs",["593"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Radio' is defined but never used.","'seletdata' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'styles' is defined but never used.","'Footer' is assigned a value but never used.","'cookicedata' is assigned a value but never used.","'btnclearcookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.","ArrayExpression",["594"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'MediumOutlined' is defined but never used.",["595"],"'Sider' is assigned a value but never used.",["596"],"'Table' is defined but never used.","'Popconfirm' is defined but never used.","'request' is defined but never used.","'RequestData' is defined but never used.","'UseFetchDataAction' is defined but never used.","'setData' is assigned a value but never used.","'isEditing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'userid'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["597"],["598"],"'edit' is assigned a value but never used.","'settempsearch' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'tempdata'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["599"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'isModalVisible' is assigned a value but never used.","'GradeEdit' is defined but never used.","'GlobalTab' is defined but never used.","'selfStyles' is defined but never used.","'setselectdata' is assigned a value but never used.","'deparmentdata' is assigned a value but never used.","'setdeparmentdata' is assigned a value but never used.","'Modal' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'Space' is defined but never used.","'Tag' is defined but never used.",["600"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["601"],"'clearFilters' is assigned a value but never used.","'clearAll' is assigned a value but never used.","'setAgeSort' is assigned a value but never used.","'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'clickdata' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["602"],"'save' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'InputNumber' is defined but never used.","'requestdata' is assigned a value but never used.","'setrequestdata' is assigned a value but never used.",["603"],["604"],"'classnodata' is assigned a value but never used.","'setclassnodata' is assigned a value but never used.",["605"],["606"],"'Option' is assigned a value but never used.","'Form' is defined but never used.","'SearchOutlined' is defined but never used.",["607"],"'onFinish' is assigned a value but never used.",["608"],["609"],["610"],["611"],"'bj' is defined but never used.","'Header' is defined but never used.","'Fonter' is defined but never used.",["612"],["613"],"no-global-assign","no-unsafe-negation",{"desc":"614","fix":"615"},{"desc":"614","fix":"616"},{"desc":"614","fix":"617"},{"desc":"618","fix":"619"},{"desc":"618","fix":"620"},{"desc":"621","fix":"622"},{"desc":"618","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"618","fix":"628"},{"desc":"618","fix":"629"},{"desc":"626","fix":"630"},{"desc":"618","fix":"631"},{"desc":"618","fix":"632"},{"desc":"626","fix":"633"},{"desc":"618","fix":"634"},{"desc":"618","fix":"635"},{"desc":"618","fix":"636"},{"desc":"618","fix":"637"},{"desc":"618","fix":"638"},"Update the dependencies array to be: [userid]",{"range":"639","text":"640"},{"range":"641","text":"640"},{"range":"642","text":"640"},"Update the dependencies array to be: [props, userid]",{"range":"643","text":"644"},{"range":"645","text":"644"},"Update the dependencies array to be: [props, tempdata]",{"range":"646","text":"647"},{"range":"648","text":"644"},"Update the dependencies array to be: [props]",{"range":"649","text":"650"},"Update the dependencies array to be: [clickdata, props]",{"range":"651","text":"652"},{"range":"653","text":"644"},{"range":"654","text":"644"},{"range":"655","text":"652"},{"range":"656","text":"644"},{"range":"657","text":"644"},{"range":"658","text":"652"},{"range":"659","text":"644"},{"range":"660","text":"644"},{"range":"661","text":"644"},{"range":"662","text":"644"},{"range":"663","text":"644"},[1399,1401],"[userid]",[1217,1219],[951,953],[1881,1883],"[props, userid]",[2998,3000],[2221,2223],"[props, tempdata]",[825,827],[1973,1975],"[props]",[1984,1986],"[clickdata, props]",[1058,1060],[846,848],[2013,2015],[897,899],[844,846],[1992,1994],[1018,1020],[1941,1943],[2849,2851],[1917,1919],[2825,2827]]