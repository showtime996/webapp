[{"D:\\web\\webapp\\chengji-client\\src\\index.js":"1","D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts":"2","D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx":"3","D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx":"4","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx":"5","D:\\web\\webapp\\chengji-client\\src\\components\\header\\index.tsx":"6","D:\\web\\webapp\\chengji-client\\src\\components\\fonter\\index.tsx":"7","D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts":"8","D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts":"9","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx":"10","D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx":"11","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx":"12","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx":"13","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx":"14","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx":"15","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts":"16","D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts":"17","D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx":"18","D:\\web\\webapp\\chengji-client\\src\\api\\index.ts":"19","D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts":"20","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx":"21","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx":"22","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx":"23","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx":"24","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx":"25","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx":"26","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx":"27","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx":"28"},{"size":802,"mtime":1617259800788,"results":"29","hashOfConfig":"30"},{"size":403,"mtime":1617259800803,"results":"31","hashOfConfig":"30"},{"size":1084,"mtime":1617263188562,"results":"32","hashOfConfig":"30"},{"size":5806,"mtime":1617259800788,"results":"33","hashOfConfig":"30"},{"size":4425,"mtime":1617259800788,"results":"34","hashOfConfig":"30"},{"size":236,"mtime":1617259800773,"results":"35","hashOfConfig":"30"},{"size":236,"mtime":1617259800773,"results":"36","hashOfConfig":"30"},{"size":1665,"mtime":1617281557301,"results":"37","hashOfConfig":"30"},{"size":9022,"mtime":1617281400276,"results":"38","hashOfConfig":"30"},{"size":160,"mtime":1617260515814,"results":"39","hashOfConfig":"30"},{"size":13921,"mtime":1617282681504,"results":"40","hashOfConfig":"30"},{"size":168,"mtime":1617260450833,"results":"41","hashOfConfig":"30"},{"size":211,"mtime":1617260469423,"results":"42","hashOfConfig":"30"},{"size":14355,"mtime":1617280904333,"results":"43","hashOfConfig":"30"},{"size":6713,"mtime":1617265733531,"results":"44","hashOfConfig":"30"},{"size":533,"mtime":1617281301537,"results":"45","hashOfConfig":"30"},{"size":388,"mtime":1617259800803,"results":"46","hashOfConfig":"30"},{"size":171,"mtime":1617259800773,"results":"47","hashOfConfig":"30"},{"size":1379,"mtime":1617281133820,"results":"48","hashOfConfig":"30"},{"size":748,"mtime":1617259800803,"results":"49","hashOfConfig":"30"},{"size":2962,"mtime":1617277290437,"results":"50","hashOfConfig":"30"},{"size":2165,"mtime":1617266514329,"results":"51","hashOfConfig":"30"},{"size":1428,"mtime":1617265217971,"results":"52","hashOfConfig":"30"},{"size":4828,"mtime":1617279897261,"results":"53","hashOfConfig":"30"},{"size":1318,"mtime":1617283379910,"results":"54","hashOfConfig":"30"},{"size":6049,"mtime":1617283133304,"results":"55","hashOfConfig":"30"},{"size":1364,"mtime":1617283550359,"results":"56","hashOfConfig":"30"},{"size":4748,"mtime":1617283528080,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1fav7u2",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\web\\webapp\\chengji-client\\src\\index.js",["132"],"// 入口的js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react-router-dom比react-router功能更多\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Register from \"@/containers/register\";\r\nimport Main from \"@/containers/main\";\r\nimport Login from \"@/containers/login\";\r\nimport store from \"./redux/store\";\r\nconst app = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/adminRegister\" component={Register}></Route>\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        {/* 默认的组件 */}\r\n        <Route component={Main}></Route>\r\n       \r\n      </Switch>\r\n    </HashRouter>\r\n  </Provider>,\r\n  app\r\n);\r\n",["133","134"],"D:\\web\\webapp\\chengji-client\\src\\redux\\store.ts",[],["135","136"],"D:\\web\\webapp\\chengji-client\\src\\containers\\main\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\register\\index.tsx",["137","138"],"//教务员注册的路由组件\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header/index.tsx\";\r\nimport Fonter from \"@/components/fonter/index.tsx\";\r\n\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  adminRegister,\r\n  teacherRegister,\r\n  studentRegister,\r\n} from \"../../redux/actions\";\r\nfunction Register(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n    password2: \"\", // 确认密码\r\n    type: \"\",\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: {\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n    type: string;\r\n  }) => {\r\n    console.log(\"value\", values);\r\n\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n      password2: (state.password2 = values.password2),\r\n      type: (state.type = values.type),\r\n    });\r\n    //调用redux action中的register方法，判断是否可以注册\r\n    if (state.type === \"student\") {\r\n      props.studentRegister(state);\r\n    } else if (state.type === \"admin\") {\r\n      props.adminRegister(state);\r\n    } else {\r\n      props.teacherRegister(state);\r\n    }\r\n  };\r\n  // 点击注册调用\r\n\r\n  const toLogin = () => {\r\n    props.history.replace(\"/login\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  const validateMessages = {\r\n    required: \"账号或密码必须填写!\",\r\n  };\r\n  return (\r\n    <div>\r\n      {/* 头部部分 */}\r\n      <Header></Header>\r\n      {/* 中间主体部分 */}\r\n      <div className={bj.logo}>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n            <div className=\"login-form-title\">用户注册</div>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              // onChange={val => { this.handleChange('username', val) }}\r\n              placeholder=\"学号/职工号/教工号\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"密码不允许少于6位大于11位\",\r\n\r\n                min: 6,\r\n                max: 11,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              // onChange={val => { this.handleChange('password', val) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password2\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"密码不允许少于6位大于11位\",\r\n\r\n                min: 6,\r\n                max: 11,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"确认密码\"\r\n              // onChange={val => { this.handleChange('password2', val) }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"type\">\r\n            <Radio.Group>\r\n              <Radio value=\"admin\">教务员</Radio>\r\n              <Radio value=\"student\">学生</Radio>\r\n              <Radio value=\"teacher\">老师</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;册\r\n            </Button>\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n            >\r\n              <a onClick={toLogin}>已是账号---请点击登入!</a>\r\n            </div>\r\n\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{\r\n                backgroundColor: \"#CCC\",\r\n                width: \"100%\",\r\n                height: \"32px\",\r\n                position: \"absolute\",\r\n                bottom: \"-24px\",\r\n              }}\r\n            >\r\n              <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n              教务员账号为教工号！\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      {/* 底部部分 */}\r\n      <Fonter></Fonter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminRegister, teacherRegister, studentRegister }\r\n)(Register);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\login\\index.tsx",["139","140"],"//注册的路由组件\r\nimport React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"@/assets/css/loginForm.less\";\r\nimport bj from \"@/assets/css/bj.module.less\";\r\nimport { Form, Input, Button, Radio } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Header from \"@/components/header\";\r\nimport Fonter from \"@/components/fonter\";\r\n// 引入重定向路由\r\nimport { Redirect } from \"react-router-dom\";\r\n// 通过异步action实现交互后台的数据 普通的ui不能得使用函数方式\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { adminLogin, studentLogin, teacherLogin } from \"../../redux/actions\";\r\nfunction Login(props: any) {\r\n  const [state, setState] = useState({\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  });\r\n\r\n  // 点击注册调用  将值传入到state中\r\n  const onFinish = (values: { username: string; password: string }) => {\r\n    setState({\r\n      username: (state.username = values.username),\r\n      password: (state.password = values.password),\r\n    });\r\n    //调用redux action中的login方法，判断是否可以注册\r\n\r\n    props.adminLogin(state);\r\n    props.studentLogin(state);\r\n    props.teacherLogin(state);\r\n  };\r\n  // 点击登入调用\r\n\r\n  const toRegister = () => {\r\n    props.history.replace(\"/adminRegister\");\r\n  };\r\n\r\n  const { msg, redirectTo } = props.user;\r\n  // // 如果redirectTo有值, 就需要重定向到指定的路由 从reducer获取\r\n  if (redirectTo) {\r\n    return <Redirect to={redirectTo} />;\r\n  }\r\n  return (\r\n    <div>\r\n      {/* 头部部分 */}\r\n      <Header></Header>\r\n      {/* 中间主体部分 */}\r\n      <div className={bj.logo}>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item>\r\n            {msg ? <span className=\"errorMsg\">{msg}</span> : null}\r\n            <div className=\"login-form-title\">用户登入</div>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入用户名!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              // onChange={val => { this.handleChange('username', val) }}\r\n              placeholder=\"学号/职工号/教工号\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入密码!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              // onChange={val => { this.handleChange('password', val) }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;入\r\n            </Button>\r\n\r\n            <p\r\n              className=\"login-form-registerLogin\"\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              教务员没有账号？ <a onClick={toRegister}>请点击注册!</a>\r\n            </p>\r\n\r\n            <div\r\n              className=\"login-form-registerLogin\"\r\n              style={{\r\n                backgroundColor: \"#CCC\",\r\n                width: \"100%\",\r\n                height: \"42px\",\r\n                position: \"absolute\",\r\n                bottom: \"-26px\",\r\n              }}\r\n            >\r\n              <span className=\"login-form-registerLogin-txt\">温馨提示:</span>\r\n              学生账号为学号,老师账号为职工号，教务员账号为教工号！\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      {/* 底部部分 */}\r\n      <Fonter></Fonter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { adminLogin, studentLogin, teacherLogin }\r\n)(Login);\r\n","D:\\web\\webapp\\chengji-client\\src\\components\\header\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\components\\fonter\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\redux\\reducers.ts",["141"],"// 包含n个reducer函数: 根据老的state和指定的action返回一个新的state\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { getRedirectTo } from \"../utils/path\";\r\n\r\nimport {\r\n  AUTH_SUCCESS_USER,\r\n  ERROR_MSG_USER,\r\n  RECEIVE_USER,\r\n  ADD_SUCCESS__GRADE,\r\n  RESET_USER,\r\n  RESET__GRADE,\r\n  SEARCH_SUCCESS__GRADE,\r\n} from \"./action-types\";\r\nconst initUser = {\r\n  username: \"\", // 用户名\r\n  type: \"\", // 用户类型\r\n  msg: \"\", // 错误提示信息\r\n  redirectTo: \"\", // 需要自动重定向的路由路径 定义好返回给state\r\n  cname: \"\",\r\n};\r\nconst initGrade = {\r\n  username: \"\",\r\n  realName: \"\",\r\n  courseNo: \"\",\r\n  classno: \"\",\r\n  credit: \"\",\r\n  courseType: \"\",\r\n  courseName: \"\",\r\n  grade: \"\",\r\n  cheat: \"\",\r\n  pass: \"\",\r\n};\r\n// 产生user状态的reducer\r\nconst user = (\r\n  state = initUser,\r\n  action: { type: any; data: { type: any; IDcard: any } }\r\n) => {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS_USER: // data是user\r\n      const { type, IDcard } = action.data;\r\n      return { ...action.data, redirectTo: getRedirectTo(type, IDcard) };\r\n    case ERROR_MSG_USER: // data是msg\r\n      return { ...state, msg: action.data };\r\n    case RECEIVE_USER:\r\n      return action.data;\r\n    case RESET_USER:\r\n      return { ...initUser, msg: action.data };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst grade = (state = initGrade, action: { type: any; data: any }) => {\r\n  switch (action.type) {\r\n    case ADD_SUCCESS__GRADE: // data是user\r\n      return action.data;\r\n\r\n    case RESET__GRADE:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default combineReducers({\r\n  grade,\r\n  user,\r\n});\r\n","D:\\web\\webapp\\chengji-client\\src\\redux\\actions.ts",["142"],"// 包含n个action creator\r\n// 异步action\r\n// 同步action\r\nimport {\r\n  AUTH_SUCCESS_USER,\r\n  ERROR_MSG_USER,\r\n  RECEIVE_USER,\r\n  ADD_SUCCESS__GRADE,\r\n  RESET_USER,\r\n  RESET__GRADE,\r\n  SEARCH_SUCCESS__GRADE,\r\n} from \"./action-types\";\r\nimport {\r\n  reqteacherRegister,\r\n  reqstudentRegister,\r\n  reqAddGrade,\r\n  reqadminRegister,\r\n  reqadminLogin,\r\n  reqstudentLogin,\r\n  reqteacherLogin,\r\n  reqStudentUpdate,\r\n  reqTeacherUpdate,\r\n  reqAdminUpdate,\r\n  reqStudentInfo,\r\n} from \"../api/index\";\r\n\r\n// 授权成功的同步action\r\nconst authSuccess = (user: any) => ({ type: AUTH_SUCCESS_USER, data: user });\r\n// 错误提示信息的同步action\r\nconst errorMsg = (msg: string) => ({ type: ERROR_MSG_USER, data: msg });\r\n// 接收用户的同步action\r\nconst receiveUser = (user) => ({ type: RECEIVE_USER, data: user });\r\n// 接收用户的同步action\r\nconst receive = (user: any) => ({ type: RECEIVE_USER, data: user });\r\n// 查询用户action\r\nconst resetUser = (StudentInfo: any) => ({\r\n  type: RESET_USER,\r\n  data: StudentInfo,\r\n});\r\n// 重置用户的同步action\r\nconst reset = (msg: any) => ({ type: RESET_USER, data: msg });\r\n// 接收用户的同步action\r\nconst addgrade = (grade: any) => ({ type: ADD_SUCCESS__GRADE, data: grade });\r\nconst resetgrade = (grade: any) => ({ type: RESET__GRADE, data: grade });\r\n\r\n// 注册教务员异步action\r\nexport const adminRegister = (user: {\r\n  username: any;\r\n  password: any;\r\n  password2: any;\r\n  type: any;\r\n}) => {\r\n  const { username, password, password2, type } = user;\r\n  console.log(\"password\", password);\r\n  console.log(\"password2\", password2);\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (password !== password2) {\r\n    return errorMsg(\"2次密码要一致!\");\r\n  }\r\n  // 表单数据合法, 返回一个发ajax请求的异步action函数\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqadminRegister({ username, password, type });\r\n    const result = response.data; //  {code: 0/1, data: user, msg: ''}\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n// 等待教务员注册完成 接口已经封装完成\r\n\r\n// 注册老师异步action\r\nexport const teacherRegister = (user) => {\r\n  const { username, password, password2, type } = user;\r\n  console.log(\"password\", password);\r\n  console.log(\"password2\", password2);\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (password !== password2) {\r\n    return errorMsg(\"2次密码要一致!\");\r\n  }\r\n  // 表单数据合法, 返回一个发ajax请求的异步action函数\r\n  return async (dispatch) => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqteacherRegister({ username, password, type });\r\n    const result = response.data; //  {code: 0/1, data: user, msg: ''}\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// 注册学生异步action\r\nexport const studentRegister = (user) => {\r\n  const { username, password, password2, type } = user;\r\n  console.log(\"password\", password);\r\n  console.log(\"password2\", password2);\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (password !== password2) {\r\n    return errorMsg(\"2次密码要一致!\");\r\n  }\r\n  // 表单数据合法, 返回一个发ajax请求的异步action函数\r\n  return async (dispatch) => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqstudentRegister({ username, password, type });\r\n    const result = response.data; //  {code: 0/1, data: user, msg: ''}\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// 登陆异步action\r\nexport const adminLogin = (user: { username: any; password: any }) => {\r\n  const { username, password } = user;\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码必须指定!\");\r\n  }\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqadminLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\nexport const studentLogin = (user: { username: any; password: any }) => {\r\n  const { username, password } = user;\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码必须指定!\");\r\n  }\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqstudentLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\nexport const teacherLogin = (user: { username: any; password: any }) => {\r\n  const { username, password } = user;\r\n  // 做表单的前台检查, 如果不通过, 返回一个errorMsg的同步action\r\n  if (!username) {\r\n    return errorMsg(\"用户名必须指定!\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码必须指定!\");\r\n  }\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqteacherLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 成功\r\n      // 分发授权成功的同步action\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      // 失败\r\n      // 分发错误提示信息的同步action\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// 更新用户异步action\r\nexport const updateStudent = (user: any) => {\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqStudentUpdate(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(receive(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(reset(result.msg));\r\n    }\r\n  };\r\n};\r\n// 更新用户异步action\r\nexport const updateTeacher = (user: any) => {\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqTeacherUpdate(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(receive(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(reset(result.msg));\r\n    }\r\n  };\r\n};\r\n// 更新用户异步action\r\nexport const updateAdmin = (user: any) => {\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqAdminUpdate(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(receive(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(reset(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// 查询学生信息异步action\r\nexport const getUser = () => {\r\n  return async (dispatch) => {\r\n    // 执行异步ajax请求\r\n\r\n    const response = await reqStudentInfo();\r\n\r\n    const result = response.data;\r\n\r\n    if (result.code === 0) {\r\n      // 成功\r\n\r\n      dispatch(receiveUser(result.data));\r\n    } else {\r\n      // 失败\r\n      dispatch(resetUser(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addGrade = (grade: any) => {\r\n  return async (dispatch: (arg0: { type: string; data: any }) => void) => {\r\n    const response = await reqAddGrade(grade);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      // 更新成功: data\r\n      dispatch(addgrade(result.data));\r\n    } else {\r\n      // 更新失败: msg\r\n      dispatch(resetgrade(result.msg));\r\n    }\r\n  };\r\n};\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacherInfo\\index.tsx",["143","144","145","146","147","148"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateTeacher } from \"../../redux/actions\";\r\n\r\nfunction TeacherInfo(props: {\r\n  updateTeacher: (arg0: any) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n\r\n    duty: \"\",\r\n    IDcard: \"\",\r\n    startDate: \"\",\r\n    cname: \"\",\r\n    classno: \"\",\r\n    nation: \"\",\r\n    department: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    diploma: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      sex: (state.sex = values.sex),\r\n      diploma: (state.diploma = values.diploma),\r\n      duty: (state.duty = values.duty),\r\n      cname: (state.cname = values.cname),\r\n      classno: (state.classno = values.classno),\r\n      startDate: (state.startDate = values.startDate),\r\n      nation: (state.nation = values.nation),\r\n      region: (state.region = values.region),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n      department: (state.department = values.department),\r\n      street: (state.street = values.street),\r\n    });\r\n\r\n    props.updateTeacher(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"teacher\" ? \"/teacher\" : \"/teacherInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const cnameselect = (e) => {\r\n    setselectdata(e);\r\n  };\r\n  const deparmentselect = (e) => {\r\n    setdeparmentdata(e);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教师基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select onChange={deparmentselect} placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            <Select placeholder=\"请输入你的学历\">\r\n              <Option value=\"博士\">博士</Option>\r\n              <Option value=\"研究生\">研究生</Option>\r\n              <Option value=\"本科\">本科</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"专业名\">\r\n            <Input.Group compact>\r\n              {deparmentdata === \"电子信息与工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"网络工程\">网络工程</Option>\r\n                    <Option value=\"计算机技术\">计算机技术</Option>\r\n                    <Option value=\"电子信息工程\">电子信息工程</Option>\r\n                    <Option value=\"人工智能\">人工智能</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"建筑工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"建筑学\">建筑学</Option>\r\n                    <Option value=\"土木工程\">土木工程</Option>\r\n                    <Option value=\"工程管理\">工程管理</Option>\r\n                    <Option value=\"交通工程\">交通工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"机械工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"材料成型及控制工程\">\r\n                      材料成型及控制工程\r\n                    </Option>\r\n                    <Option value=\"车辆工程\">车辆工程</Option>\r\n                    <Option value=\"化学工程与工艺\">化学工程与工艺</Option>\r\n                    <Option value=\"油气储运工程\">油气储运工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"交通学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"金融工程\">金融工程</Option>\r\n                    <Option value=\"会计学\">会计学</Option>\r\n                    <Option value=\"国际经济与贸易\">国际经济与贸易</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"化学工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"应用统计学\">应用统计学</Option>\r\n                    <Option value=\"物流管理\">物流管理</Option>\r\n                    <Option value=\"材料物理\">材料物理</Option>\r\n                    <Option value=\"应用化学\">应用化学</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"材料学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"英语\">英语</Option>\r\n                    <Option value=\"日语\">日语</Option>\r\n                    <Option value=\"德语\">德语</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"理学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"工业设计\">工业设计</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n\r\n              <Form.Item\r\n                name={\"classno\"}\r\n                label=\"班级\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"班级信息必须输入！\" }]}\r\n              >\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value={seletdata + \"1\"}>{seletdata + \"1\"}</Option>\r\n                  <Option value={seletdata + \"2\"}>{seletdata + \"2\"}</Option>\r\n                  <Option value={seletdata + \"3\"}>{seletdata + \"3\"}</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"hb\">河北</Option>\r\n                  <Option value=\"sx\">山西</Option>\r\n                  <Option value=\"ln\">辽宁</Option>\r\n                  <Option value=\"jl\">吉林</Option>\r\n                  <Option value=\"hlj\">黑龙江</Option>\r\n                  <Option value=\"js\">江苏</Option>\r\n                  <Option value=\"zj\">浙江</Option>\r\n                  <Option value=\"ah\">安徽</Option>\r\n                  <Option value=\"fj\">福建</Option>\r\n                  <Option value=\"jx\">江西</Option>\r\n                  <Option value=\"sd\">山东</Option>\r\n                  <Option value=\"hna\">河南</Option>\r\n                  <Option value=\"hb\">湖北</Option>\r\n                  <Option value=\"hnb\">湖南</Option>\r\n                  <Option value=\"gd\">广东</Option>\r\n                  <Option value=\"hnc\">海南</Option>\r\n                  <Option value=\"sc\">四川</Option>\r\n                  <Option value=\"gz\">贵州</Option>\r\n                  <Option value=\"nmg\">内蒙古</Option>\r\n                  <Option value=\"gx\">广西壮族</Option>\r\n                  <Option value=\"xz\">西藏</Option>\r\n                  <Option value=\"nx\">宁夏回族</Option>\r\n                  <Option value=\"xj\">新疆维吾尔</Option>\r\n                  <Option value=\"bj\">北京</Option>\r\n                  <Option value=\"tj\">天津</Option>\r\n                  <Option value=\"sh\">上海</Option>\r\n                  <Option value=\"cq\">重庆</Option>\r\n                  <Option value=\"xg\">香港</Option>\r\n                  <Option value=\"am\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入工作职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateTeacher,\r\n})(TeacherInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\index.tsx",["149"],"import Administer from \"@/containers/admin/components/admin\";\r\nimport React from \"react\";\r\nimport styles from \"./index.module.less\";\r\n\r\nexport default function Admin() {\r\n  return <Administer></Administer>;\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\studentInfo\\index.tsx",["150","151","152","153","154","155"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateStudent } from \"../../redux/actions\";\r\n\r\nfunction StudentInfo(props: {\r\n  updateStudent: (arg0: {\r\n    realName: string;\r\n    sex: string;\r\n    affiliation: string;\r\n    age: string;\r\n\r\n    nation: string;\r\n    cname: string;\r\n    classno: string;\r\n    region: string;\r\n    phone: string;\r\n    department: string;\r\n    IDcard: string;\r\n    recommend: string;\r\n    eMail: string;\r\n    street: string;\r\n    address: string;\r\n  }) => void;\r\n  user: { IDcard: any; type: any };\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    sex: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n\r\n    cname: \"\",\r\n    classno: \"\",\r\n\r\n    nation: \"\",\r\n    region: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    recommend: \"\",\r\n    department: \"\",\r\n    eMail: \"\",\r\n    street: \"\",\r\n    address: \"\",\r\n  });\r\n  const [seletdata, setselectdata] = useState();\r\n  const [deparmentdata, setdeparmentdata] = useState();\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      sex: (state.sex = values.sex),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      cname: (state.cname = values.cname),\r\n      classno: (state.classno = values.classno),\r\n      age: (state.age = values.age),\r\n\r\n      region: (state.region = values.region),\r\n      phone: (state.phone = values.phone),\r\n      nation: (state.nation = values.nation),\r\n      department: (state.department = values.department),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      recommend: (state.recommend = values.recommend),\r\n      eMail: (state.eMail = values.eMail),\r\n      street: (state.street = values.street),\r\n      address: (state.address = values.address),\r\n    });\r\n    props.updateStudent(state);\r\n  };\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"student\" ? \"/student\" : \"/studentInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n  const cnameselect = (e) => {\r\n    setselectdata(e);\r\n  };\r\n  const deparmentselect = (e) => {\r\n    setdeparmentdata(e);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>学生基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"realName\"}\r\n            label=\"真实姓名\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select onChange={deparmentselect} placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100, required: true }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n          {/* 系统获取时间 */}\r\n\r\n          <Form.Item name={\"nation\"} label=\"民族\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入民族\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"专业名\">\r\n            <Input.Group compact>\r\n              {deparmentdata === \"电子信息与工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"网络工程\">网络工程</Option>\r\n                    <Option value=\"计算机技术\">计算机技术</Option>\r\n                    <Option value=\"电子信息工程\">电子信息工程</Option>\r\n                    <Option value=\"人工智能\">人工智能</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"建筑工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"建筑学\">建筑学</Option>\r\n                    <Option value=\"土木工程\">土木工程</Option>\r\n                    <Option value=\"工程管理\">工程管理</Option>\r\n                    <Option value=\"交通工程\">交通工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"机械工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"材料成型及控制工程\">\r\n                      材料成型及控制工程\r\n                    </Option>\r\n                    <Option value=\"车辆工程\">车辆工程</Option>\r\n                    <Option value=\"化学工程与工艺\">化学工程与工艺</Option>\r\n                    <Option value=\"油气储运工程\">油气储运工程</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"交通学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"金融工程\">金融工程</Option>\r\n                    <Option value=\"会计学\">会计学</Option>\r\n                    <Option value=\"国际经济与贸易\">国际经济与贸易</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"化学工程学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"应用统计学\">应用统计学</Option>\r\n                    <Option value=\"物流管理\">物流管理</Option>\r\n                    <Option value=\"材料物理\">材料物理</Option>\r\n                    <Option value=\"应用化学\">应用化学</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"材料学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"英语\">英语</Option>\r\n                    <Option value=\"日语\">日语</Option>\r\n                    <Option value=\"德语\">德语</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n              {deparmentdata === \"理学院\" && (\r\n                <Form.Item name={\"cname\"} noStyle>\r\n                  <Select onChange={cnameselect} placeholder=\"请选择专业名\">\r\n                    <Option value=\"工业设计\">工业设计</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )}\r\n\r\n              <Form.Item\r\n                name={\"classno\"}\r\n                label=\"班级\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"班级信息必须输入！\" }]}\r\n              >\r\n                <Select placeholder=\"请选择班级\">\r\n                  <Option value={seletdata + \"1\"}>{seletdata + \"1\"}</Option>\r\n                  <Option value={seletdata + \"2\"}>{seletdata + \"2\"}</Option>\r\n                  <Option value={seletdata + \"3\"}>{seletdata + \"3\"}</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"籍贯\">\r\n            <Input.Group compact>\r\n              <Form.Item name={\"region\"} noStyle>\r\n                <Select placeholder=\"请选择省份\">\r\n                  <Option value=\"hb\">河北</Option>\r\n                  <Option value=\"sx\">山西</Option>\r\n                  <Option value=\"ln\">辽宁</Option>\r\n                  <Option value=\"jl\">吉林</Option>\r\n                  <Option value=\"hlj\">黑龙江</Option>\r\n                  <Option value=\"js\">江苏</Option>\r\n                  <Option value=\"zj\">浙江</Option>\r\n                  <Option value=\"ah\">安徽</Option>\r\n                  <Option value=\"fj\">福建</Option>\r\n                  <Option value=\"jx\">江西</Option>\r\n                  <Option value=\"sd\">山东</Option>\r\n                  <Option value=\"hna\">河南</Option>\r\n                  <Option value=\"hb\">湖北</Option>\r\n                  <Option value=\"hnb\">湖南</Option>\r\n                  <Option value=\"gd\">广东</Option>\r\n                  <Option value=\"hnc\">海南</Option>\r\n                  <Option value=\"sc\">四川</Option>\r\n                  <Option value=\"gz\">贵州</Option>\r\n                  <Option value=\"nmg\">内蒙古</Option>\r\n                  <Option value=\"gx\">广西壮族</Option>\r\n                  <Option value=\"xz\">西藏</Option>\r\n                  <Option value=\"nx\">宁夏回族</Option>\r\n                  <Option value=\"xj\">新疆维吾尔</Option>\r\n                  <Option value=\"bj\">北京</Option>\r\n                  <Option value=\"tj\">天津</Option>\r\n                  <Option value=\"sh\">上海</Option>\r\n                  <Option value=\"cq\">重庆</Option>\r\n                  <Option value=\"xg\">香港</Option>\r\n                  <Option value=\"am\">澳门</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={\"street\"}\r\n                label=\"地区\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"地区信息必须输入！\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入地区信息\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"address\"}\r\n            label=\"家庭地址\"\r\n            rules={[{ required: true, message: \"家庭地址信息必须输入\" }]}\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"请输入家庭地址\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={\"recommend\"} label=\"自我简介\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入自我简介\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//updateUser\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateStudent,\r\n})(StudentInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\adminInfo\\index.tsx",["156","157","158","159","160","161","162","163"],"//学生信息完善的路由容器组件\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  connect,\r\n  DefaultRootState,\r\n  RootStateOrAny,\r\n  useSelector,\r\n} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, InputNumber, Button, Radio, Select } from \"antd\";\r\nimport styles from \"@/assets/css/global.module.less\";\r\nimport GlobalTab from \"@/components/tabNav/index.tsx\";\r\nimport selfStyles from \"./index.module.less\";\r\nimport { updateAdmin } from \"../../redux/actions\";\r\n\r\nfunction AdminInfo(props: {\r\n  user: { IDcard: any; type: any };\r\n  updateAdmin: (arg0: {\r\n    realName: string;\r\n    affiliation: string;\r\n    age: string;\r\n\r\n    phone: string;\r\n    IDcard: string;\r\n    eMail: string;\r\n    diploma: string;\r\n    department: string;\r\n    duty: string;\r\n  }) => void;\r\n}) {\r\n  const [state, setState] = useState({\r\n    realName: \"\",\r\n    affiliation: \"\",\r\n    age: \"\",\r\n    diploma: \"\",\r\n    phone: \"\",\r\n    IDcard: \"\",\r\n    eMail: \"\",\r\n\r\n    department: \"\",\r\n    duty: \"\",\r\n  });\r\n\r\n  // 如果信息已经完善, 自动重定向到对应主界面\r\n  const { IDcard, type } = props.user;\r\n  if (IDcard) {\r\n    // 说明信息已经完善\r\n    const path = type === \"admin\" ? \"/admin\" : \"/adminInfo\";\r\n    return <Redirect to={path} />;\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const { Option } = Select;\r\n  const validateMessages = {\r\n    required: \"${label} 必须填写!\",\r\n    message: \"请输入你的${label}!\",\r\n    len: \"${label}长度必须18位\",\r\n    types: {\r\n      email: \"${label} 不是有效的邮箱!\",\r\n      number: \"${label} 不是有效的数字!\",\r\n    },\r\n    number: {\r\n      range: \"${label} 范围必须在${min} 和 ${max}\",\r\n    },\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    setState({\r\n      realName: (state.realName = values.realName),\r\n      affiliation: (state.affiliation = values.affiliation),\r\n      age: (state.age = values.age),\r\n      diploma: (state.diploma = values.diploma),\r\n      phone: (state.phone = values.phone),\r\n      IDcard: (state.IDcard = values.IDcard),\r\n      eMail: (state.eMail = values.eMail),\r\n\r\n      department: (state.department = values.department),\r\n      duty: (state.duty = values.duty),\r\n    });\r\n    props.updateAdmin(state);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <GlobalTab></GlobalTab>\r\n      <div className={styles.formContainer}>\r\n        <Form\r\n          {...layout}\r\n          style={{ margin: \"17px auto\" }}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}\r\n        >\r\n          <Form.Item>\r\n            <h2 className={selfStyles.title}>教务员基本信息</h2>\r\n          </Form.Item>\r\n          <Form.Item name={\"realName\"} label=\"真实姓名\">\r\n            <Input placeholder=\"请输入姓名\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"sex\"} label=\" 性别：\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value=\"man\">男</Radio>\r\n              <Radio value=\"women\">女</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"affiliation\"}\r\n            label=\"政治面貌\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你的政治面貌\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你的政治面貌\">\r\n              <Option value=\"DY\">党员</Option>\r\n              <Option value=\"TY\">团员</Option>\r\n              <Option value=\"SXDY\">少先队员</Option>\r\n              <Option value=\"QZ\">群众</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"age\"}\r\n            label=\"年龄\"\r\n            rules={[{ type: \"number\", min: 1, max: 100 }]}\r\n          >\r\n            <InputNumber placeholder=\"年龄\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"department\"}\r\n            label=\"学院\"\r\n            hasFeedback\r\n            rules={[{ required: true, message: \"请输入你负责的学院\" }]}\r\n          >\r\n            <Select placeholder=\"请输入你负责的学院\">\r\n              <Option value=\"电子信息与工程学院\">电子信息与工程学院</Option>\r\n              <Option value=\"建筑工程学院\">建筑工程学院</Option>\r\n              <Option value=\"机械工程学院\">机械工程学院</Option>\r\n              <Option value=\"交通学院\">交通学院</Option>\r\n              <Option value=\"化学工程学院\">化学工程学院</Option>\r\n              <Option value=\"材料学院\">材料学院</Option>\r\n              <Option value=\"理学院\">理学院</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"diploma\"} label=\"学历\" hasFeedback>\r\n            <Select placeholder=\"请输入你的学历\">\r\n              <Option value=\"博士\">博士</Option>\r\n              <Option value=\"研究生\">研究生</Option>\r\n              <Option value=\"本科\">本科</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"IDcard\"}\r\n            label=\"身份证号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 18,\r\n                message: \"请输入18位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入有效的身份证号码\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"phone\"}\r\n            label=\"手机号码\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                len: 11,\r\n                message: \"请输入11位有效数字!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          </Form.Item>\r\n          <Form.Item name={\"eMail\"} label=\"Email\" rules={[{ type: \"email\" }]}>\r\n            <Input placeholder=\"请输入电子邮箱\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"duty\"} label=\"职责\">\r\n            <Input.TextArea\r\n              placeholder=\"请输入职责\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              信息提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state: RootStateOrAny) => ({ user: state.user }), {\r\n  updateAdmin,\r\n})(AdminInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\redux\\action-types.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\path.ts",[],"D:\\web\\webapp\\chengji-client\\src\\components\\tabNav\\index.tsx",[],"D:\\web\\webapp\\chengji-client\\src\\api\\index.ts",[],"D:\\web\\webapp\\chengji-client\\src\\utils\\ajax.ts",[],"D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\teacher\\index.tsx",["164","165","166"],"import { Button, Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport { getUser } from \"@/redux/actions\";\r\nimport Cookies from \"js-cookie\";\r\nimport studentInfo from \"@/containers/studentInfo\";\r\nimport StuInfo from \"@/containers/teacher/components/stuinfo\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nconst { Header, Sider, Content, Footer } = Layout;\r\nfunction Teachers() {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n  });\r\n  const [clickkey, setclickkey] = useState(\"1\");\r\n  // useEffect(() => {\r\n  //   props.getUser();\r\n  // }, [StuInfo]);\r\n\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  const menuclick = (e) => {\r\n    setclickkey(e.key);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        style={{ backgroundColor: \"#fff\" }}\r\n        collapsed={state.collapsed}\r\n      >\r\n        <div className=\"logo\" />\r\n        <Menu\r\n          selectable\r\n          theme=\"light\"\r\n          onClick={menuclick}\r\n          mode=\"inline\"\r\n          selectedKeys={[clickkey]}\r\n          defaultSelectedKeys={[clickkey]}\r\n        >\r\n          <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n            成绩管理\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n            成绩表\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n            个人信息\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: toggle,\r\n            }\r\n          )}\r\n          <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n            退出\r\n          </Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 618,\r\n          }}\r\n        >\r\n          {clickkey === \"1\" && <StuInfo></StuInfo>}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { getUser }\r\n)(Teachers);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\admin\\components\\admin\\index.tsx",["167"],"import { Button, Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"./index.less\";\r\nimport Cookies from \"js-cookie\";\r\nconst { Header, Sider, Content, Footer } = Layout;\r\nexport default function Teachers() {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n  });\r\n\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        style={{ backgroundColor: \"#fff\" }}\r\n        collapsed={state.collapsed}\r\n      >\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n          <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n            成绩管理\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n            成绩表\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n            个人信息\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {React.createElement(\r\n            state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: toggle,\r\n            }\r\n          )}\r\n          <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n            退出\r\n          </Button>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            margin: \"24px 16px\",\r\n            padding: 24,\r\n            minHeight: 618,\r\n          }}\r\n        >\r\n          Content\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\student\\components\\common\\index.tsx",["168"],"import { Layout, Menu, Breadcrumb, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./index.less\";\r\nimport Cookies from \"js-cookie\";\r\nexport default function CommonLayout() {\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const btnclearcookie = () => {\r\n    Cookies.remove(\"userid\");\r\n  };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        <div className=\"logo\" />\r\n\r\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\r\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n        </Menu>\r\n        <Button onClick={btnclearcookie} href=\"/login\" danger>\r\n          退出\r\n        </Button>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>List</Breadcrumb.Item>\r\n          <Breadcrumb.Item>App</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-content\">Content</div>\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        Ant Design ©2018 Created by Ant UED\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n}\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\stuinfo\\index.tsx",["169","170","171","172","173","174","175"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { getUser } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\n\r\nimport request from \"umi-request\";\r\nimport EditModal from \"../modal\";\r\nconst originData: any = [];\r\nconst formatedata: any = [];\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst StuInfo = (props) => {\r\n  const actionRef = useRef<ActionType>();\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n  useEffect(() => {\r\n    props.getUser();\r\n  }, []);\r\n  const formatedata = props.user;\r\n\r\n  const temp = formatedata.length;\r\n\r\n  if (JSON.stringify(formatedata) !== \"{}\") {\r\n    console.log(\"temp\", temp);\r\n    for (let i = originData.length; i < temp; i++) {\r\n      console.log(\"formatedata\", formatedata);\r\n      originData.push({\r\n        key: i + 1,\r\n        username: formatedata[i].username,\r\n        realName: formatedata[i].realName,\r\n        cname: formatedata[i].cname,\r\n        classno: formatedata[i].classno,\r\n        phone: formatedata[i].phone,\r\n      });\r\n    }\r\n  }\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      username: \"\",\r\n      realName: \"\",\r\n      cname: \"\",\r\n      classno: \"\",\r\n      phone: \"\",\r\n\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n  const datarequest: any = async (params = {}) =>\r\n    request<{\r\n      data: any[];\r\n    }>(\"http://localhost:3000/studentInfo\", {\r\n      params,\r\n    })\r\n      .then((response) => {\r\n        // 将request请求的对象保存到state中\r\n        // setTableData(response);\r\n        return response;\r\n      })\r\n      .catch((info) => {\r\n        console.log(\"请求数据失败\", info);\r\n      });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"专业名\",\r\n      dataIndex: \"cname\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"班级\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n    },\r\n    {\r\n      title: \"电话\",\r\n      dataIndex: \"phone\",\r\n      width: \"7%\",\r\n    },\r\n\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      render: (_, record) => {\r\n        return (\r\n          <Typography.Link disabled={editingKey !== \"\"} onClick={() => record}>\r\n            <EditModal></EditModal>\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <ProTable\r\n        actionRef={actionRef}\r\n        search={false}\r\n        options={{ fullScreen: true }}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        request={datarequest}\r\n        bordered\r\n        dataSource={[...data]}\r\n        columns={columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { getUser }\r\n)(StuInfo);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\modal\\index.tsx",["176","177"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { getUser } from \"@/redux/actions\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nconst EditModal = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        编辑\r\n      </Button>\r\n      <Modal\r\n        title=\"编辑成绩表\"\r\n        width={1200}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <GradeEdit></GradeEdit>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { getUser }\r\n)(EditModal);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\gradeedit\\index.tsx",["178","179","180","181","182","183","184"],"import React, { useRef, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Button,\r\n} from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport type { ActionType } from \"@ant-design/pro-table\";\r\nimport AddGrade from \"../addgrade\";\r\nimport request from \"umi-request\";\r\nimport { getUser } from \"@/redux/actions\";\r\nimport ProTable from \"@ant-design/pro-table\";\r\n\r\nimport {\r\n  RequestData,\r\n  UseFetchDataAction,\r\n} from \"@ant-design/pro-table/lib/typing\";\r\nconst originData: any = [];\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n  originData.push({\r\n    key: i.toString(),\r\n    name: `Edrward ${i}`,\r\n    age: 32,\r\n    address: `London Park no. ${i}`,\r\n  });\r\n}\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `请输入${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GradeEdit = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const actionRef = useRef<ActionType>();\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"key\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学号\",\r\n      dataIndex: \"username\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"姓名\",\r\n      dataIndex: \"realName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"班级号\",\r\n      dataIndex: \"classno\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程号\",\r\n      dataIndex: \"courseNo\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程名称\",\r\n      dataIndex: \"courseName\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"课程类型\",\r\n      dataIndex: \"courseType\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"grade\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"学分\",\r\n      dataIndex: \"credit\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"绩点\",\r\n      dataIndex: \"gpa\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"作弊\",\r\n      dataIndex: \"cheat\",\r\n      width: \"7%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      width: \"7%\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </a>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <a>取消</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Typography.Link\r\n            disabled={editingKey !== \"\"}\r\n            onClick={() => edit(record)}\r\n          >\r\n            编辑\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns: any = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  const datarequest: any = async (params = {}) =>\r\n    request<{\r\n      data: any[];\r\n    }>(\"http://localhost:3000/grade\", {\r\n      params,\r\n    })\r\n      .then((response) => {\r\n        // 将request请求的对象保存到state中\r\n        // setTableData(response);\r\n        return response;\r\n      })\r\n      .catch((info) => {\r\n        console.log(\"请求数据失败\", info);\r\n      });\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <AddGrade></AddGrade>\r\n      <ProTable\r\n        options={{ fullScreen: true }}\r\n        actionRef={actionRef}\r\n        search={false}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        request={datarequest}\r\n        bordered\r\n        dataSource={[...data]}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { getUser }\r\n)(GradeEdit);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\index.tsx",["185","186","187"],"import { Modal, Button } from \"antd\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport { getUser } from \"@/redux/actions\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport GradeEdit from \"../gradeedit\";\r\nimport AddDetail from \"./components/adddetail\";\r\nconst AddGrade = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={showModal}>\r\n        录入\r\n      </Button>\r\n      <Modal\r\n        title=\"录入成绩表\"\r\n        width={700}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        <AddDetail></AddDetail>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  // user: state.user  state=user 读取从reducer返回值状态到组件里面 到props属性里面\r\n  (state: RootStateOrAny) => ({ user: state.user }),\r\n  //  函数确定\r\n  { getUser }\r\n)(AddGrade);\r\n","D:\\web\\webapp\\chengji-client\\src\\containers\\teacher\\components\\addgrade\\components\\adddetail\\index.tsx",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],{"ruleId":"202","severity":1,"message":"203","line":5,"column":37,"nodeType":"204","messageId":"205","endLine":5,"endColumn":45},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":2,"column":27,"nodeType":"204","messageId":"205","endLine":2,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":158,"column":15,"nodeType":"214","endLine":158,"endColumn":36},{"ruleId":"210","severity":1,"message":"215","line":6,"column":31,"nodeType":"204","messageId":"205","endLine":6,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":108,"column":24,"nodeType":"214","endLine":108,"endColumn":48},{"ruleId":"210","severity":1,"message":"216","line":13,"column":3,"nodeType":"204","messageId":"205","endLine":13,"endColumn":24},{"ruleId":"210","severity":1,"message":"216","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":73,"column":15,"nodeType":"219","messageId":"220","endLine":73,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":74,"column":14,"nodeType":"219","messageId":"220","endLine":74,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":75,"column":10,"nodeType":"219","messageId":"220","endLine":75,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":77,"column":14,"nodeType":"219","messageId":"220","endLine":77,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":78,"column":15,"nodeType":"219","messageId":"220","endLine":78,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":81,"column":14,"nodeType":"219","messageId":"220","endLine":81,"endColumn":45},{"ruleId":"210","severity":1,"message":"221","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":89,"column":15,"nodeType":"219","messageId":"220","endLine":89,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":90,"column":14,"nodeType":"219","messageId":"220","endLine":90,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":91,"column":10,"nodeType":"219","messageId":"220","endLine":91,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":93,"column":14,"nodeType":"219","messageId":"220","endLine":93,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":94,"column":15,"nodeType":"219","messageId":"220","endLine":94,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":97,"column":14,"nodeType":"219","messageId":"220","endLine":97,"endColumn":45},{"ruleId":"210","severity":1,"message":"222","line":6,"column":3,"nodeType":"204","messageId":"205","endLine":6,"endColumn":19},{"ruleId":"210","severity":1,"message":"223","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":58,"column":15,"nodeType":"219","messageId":"220","endLine":58,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":59,"column":14,"nodeType":"219","messageId":"220","endLine":59,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":60,"column":10,"nodeType":"219","messageId":"220","endLine":60,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":62,"column":14,"nodeType":"219","messageId":"220","endLine":62,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":63,"column":15,"nodeType":"219","messageId":"220","endLine":63,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":66,"column":14,"nodeType":"219","messageId":"220","endLine":66,"endColumn":45},{"ruleId":"210","severity":1,"message":"211","line":9,"column":17,"nodeType":"204","messageId":"205","endLine":9,"endColumn":26},{"ruleId":"210","severity":1,"message":"224","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":19},{"ruleId":"210","severity":1,"message":"225","line":16,"column":33,"nodeType":"204","messageId":"205","endLine":16,"endColumn":39},{"ruleId":"210","severity":1,"message":"225","line":12,"column":33,"nodeType":"204","messageId":"205","endLine":12,"endColumn":39},{"ruleId":"210","severity":1,"message":"226","line":6,"column":27,"nodeType":"204","messageId":"205","endLine":6,"endColumn":32},{"ruleId":"210","severity":1,"message":"227","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":15},{"ruleId":"210","severity":1,"message":"228","line":2,"column":37,"nodeType":"204","messageId":"205","endLine":2,"endColumn":47},{"ruleId":"210","severity":1,"message":"229","line":11,"column":7,"nodeType":"204","messageId":"205","endLine":11,"endColumn":23},{"ruleId":"210","severity":1,"message":"230","line":53,"column":9,"nodeType":"204","messageId":"205","endLine":53,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":56,"column":6,"nodeType":"233","endLine":56,"endColumn":8,"suggestions":"234"},{"ruleId":"210","severity":1,"message":"235","line":75,"column":9,"nodeType":"204","messageId":"205","endLine":75,"endColumn":13},{"ruleId":"210","severity":1,"message":"236","line":92,"column":9,"nodeType":"204","messageId":"205","endLine":92,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":4,"column":17,"nodeType":"204","messageId":"205","endLine":4,"endColumn":26},{"ruleId":"210","severity":1,"message":"237","line":4,"column":28,"nodeType":"204","messageId":"205","endLine":4,"endColumn":34},{"ruleId":"210","severity":1,"message":"227","line":3,"column":3,"nodeType":"204","messageId":"205","endLine":3,"endColumn":8},{"ruleId":"210","severity":1,"message":"238","line":9,"column":3,"nodeType":"204","messageId":"205","endLine":9,"endColumn":9},{"ruleId":"210","severity":1,"message":"239","line":19,"column":3,"nodeType":"204","messageId":"205","endLine":19,"endColumn":14},{"ruleId":"210","severity":1,"message":"240","line":20,"column":3,"nodeType":"204","messageId":"205","endLine":20,"endColumn":21},{"ruleId":"212","severity":1,"message":"241","line":185,"column":13,"nodeType":"214","endLine":191,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":186,"column":20,"nodeType":"219","messageId":"244","endLine":186,"endColumn":34},{"ruleId":"212","severity":1,"message":"213","line":195,"column":15,"nodeType":"214","endLine":195,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":4,"column":17,"nodeType":"204","messageId":"205","endLine":4,"endColumn":26},{"ruleId":"210","severity":1,"message":"237","line":4,"column":28,"nodeType":"204","messageId":"205","endLine":4,"endColumn":34},{"ruleId":"210","severity":1,"message":"245","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":17},{"ruleId":"210","severity":1,"message":"203","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":18},{"ruleId":"210","severity":1,"message":"215","line":6,"column":44,"nodeType":"204","messageId":"205","endLine":6,"endColumn":49},{"ruleId":"210","severity":1,"message":"221","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":14},{"ruleId":"210","severity":1,"message":"246","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":17},{"ruleId":"210","severity":1,"message":"247","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":18},{"ruleId":"210","severity":1,"message":"248","line":23,"column":21,"nodeType":"204","messageId":"205","endLine":23,"endColumn":34},{"ruleId":"210","severity":1,"message":"249","line":24,"column":10,"nodeType":"204","messageId":"205","endLine":24,"endColumn":23},{"ruleId":"210","severity":1,"message":"250","line":24,"column":25,"nodeType":"204","messageId":"205","endLine":24,"endColumn":41},{"ruleId":"217","severity":1,"message":"218","line":48,"column":15,"nodeType":"219","messageId":"220","endLine":48,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":49,"column":14,"nodeType":"219","messageId":"220","endLine":49,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":50,"column":10,"nodeType":"219","messageId":"220","endLine":50,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":52,"column":14,"nodeType":"219","messageId":"220","endLine":52,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":53,"column":15,"nodeType":"219","messageId":"220","endLine":53,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":56,"column":14,"nodeType":"219","messageId":"220","endLine":56,"endColumn":45},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["251"],"no-negated-in-lhs",["252"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Radio' is defined but never used.","'SEARCH_SUCCESS__GRADE' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'styles' is defined but never used.","'DefaultRootState' is defined but never used.","'useSelector' is defined but never used.","'studentInfo' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Table' is defined but never used.","'Popconfirm' is defined but never used.","'formatedata' is assigned a value but never used.","'isEditing' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["253"],"'edit' is assigned a value but never used.","'save' is assigned a value but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'RequestData' is defined but never used.","'UseFetchDataAction' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'GradeEdit' is defined but never used.","'GlobalTab' is defined but never used.","'selfStyles' is defined but never used.","'setselectdata' is assigned a value but never used.","'deparmentdata' is assigned a value but never used.","'setdeparmentdata' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [props]",{"range":"256","text":"257"},[1436,1438],"[props]"]